{"ast":null,"code":"var _jsxFileName = \"D:\\\\dumps\\\\online-learning-platform-main\\\\Frontend\\\\src\\\\components\\\\TypingAnimation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../components/css/TypingAnimation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingAnimation = ({\n  words\n}) => {\n  _s();\n  const [text, setText] = useState('');\n  const [wordIndex, setWordIndex] = useState(0);\n  const [letterIndex, setLetterIndex] = useState(0);\n  const [direction, setDirection] = useState(1); // 1 for typing, -1 for erasing\n  const typingSpeed = 75; // milliseconds per character\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const word = words[wordIndex];\n      const currentText = word.slice(0, letterIndex);\n      setText(currentText);\n      if (direction === 1) {\n        if (letterIndex < word.length) {\n          setLetterIndex(letterIndex + 1);\n        } else {\n          setDirection(-1);\n          setTimeout(() => setDirection(1), 5000); // Pause before erasing\n        }\n      } else {\n        if (letterIndex > 0) {\n          setLetterIndex(letterIndex - 1);\n        } else {\n          setDirection(1);\n          setWordIndex((wordIndex + 1) % words.length); // Move to the next word\n        }\n      }\n    }, typingSpeed);\n    return () => clearInterval(intervalId);\n  }, [letterIndex, direction, wordIndex, words]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [text, /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"cursor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(TypingAnimation, \"0JaI+68WKDqopR29pJZ3MRtC9uY=\");\n_c = TypingAnimation;\nexport default TypingAnimation;\nvar _c;\n$RefreshReg$(_c, \"TypingAnimation\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TypingAnimation","words","_s","text","setText","wordIndex","setWordIndex","letterIndex","setLetterIndex","direction","setDirection","typingSpeed","intervalId","setInterval","word","currentText","slice","length","setTimeout","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/dumps/online-learning-platform-main/Frontend/src/components/TypingAnimation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../components/css/TypingAnimation.css';\r\n\r\nconst TypingAnimation = ({ words }) => {\r\n    const [text, setText] = useState('');\r\n    const [wordIndex, setWordIndex] = useState(0);\r\n    const [letterIndex, setLetterIndex] = useState(0);\r\n    const [direction, setDirection] = useState(1); // 1 for typing, -1 for erasing\r\n    const typingSpeed = 75; // milliseconds per character\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            const word = words[wordIndex];\r\n            const currentText = word.slice(0, letterIndex);\r\n            setText(currentText);\r\n\r\n            if (direction === 1) {\r\n                if (letterIndex < word.length) {\r\n                    setLetterIndex(letterIndex + 1);\r\n                } else {\r\n                    setDirection(-1);\r\n                    setTimeout(() => setDirection(1), 5000); // Pause before erasing\r\n                }\r\n            } else {\r\n                if (letterIndex > 0) {\r\n                    setLetterIndex(letterIndex - 1);\r\n                } else {\r\n                    setDirection(1);\r\n                    setWordIndex((wordIndex + 1) % words.length); // Move to the next word\r\n                }\r\n            }\r\n        }, typingSpeed);\r\n\r\n        return () => clearInterval(intervalId);\r\n    }, [letterIndex, direction, wordIndex, words]);\r\n\r\n    return (\r\n        <h1>{text}<span className=\"cursor\" /></h1>\r\n    );\r\n};\r\n\r\nexport default TypingAnimation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/C,MAAMe,WAAW,GAAG,EAAE,CAAC,CAAC;;EAExBd,SAAS,CAAC,MAAM;IACZ,MAAMe,UAAU,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMC,IAAI,GAAGb,KAAK,CAACI,SAAS,CAAC;MAC7B,MAAMU,WAAW,GAAGD,IAAI,CAACE,KAAK,CAAC,CAAC,EAAET,WAAW,CAAC;MAC9CH,OAAO,CAACW,WAAW,CAAC;MAEpB,IAAIN,SAAS,KAAK,CAAC,EAAE;QACjB,IAAIF,WAAW,GAAGO,IAAI,CAACG,MAAM,EAAE;UAC3BT,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;QACnC,CAAC,MAAM;UACHG,YAAY,CAAC,CAAC,CAAC,CAAC;UAChBQ,UAAU,CAAC,MAAMR,YAAY,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;QAC7C;MACJ,CAAC,MAAM;QACH,IAAIH,WAAW,GAAG,CAAC,EAAE;UACjBC,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;QACnC,CAAC,MAAM;UACHG,YAAY,CAAC,CAAC,CAAC;UACfJ,YAAY,CAAC,CAACD,SAAS,GAAG,CAAC,IAAIJ,KAAK,CAACgB,MAAM,CAAC,CAAC,CAAC;QAClD;MACJ;IACJ,CAAC,EAAEN,WAAW,CAAC;IAEf,OAAO,MAAMQ,aAAa,CAACP,UAAU,CAAC;EAC1C,CAAC,EAAE,CAACL,WAAW,EAAEE,SAAS,EAAEJ,SAAS,EAAEJ,KAAK,CAAC,CAAC;EAE9C,oBACIF,OAAA;IAAAqB,QAAA,GAAKjB,IAAI,eAACJ,OAAA;MAAMsB,SAAS,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAElD,CAAC;AAACvB,EAAA,CApCIF,eAAe;AAAA0B,EAAA,GAAf1B,eAAe;AAsCrB,eAAeA,eAAe;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}