{"ast":null,"code":"import { addNodeMaterial } from './NodeMaterial.js';\nimport { transformedNormalView } from '../accessors/NormalNode.js';\nimport { positionViewDirection } from '../accessors/PositionNode.js';\nimport PhysicalLightingModel from '../functions/PhysicalLightingModel.js';\nimport MeshPhysicalNodeMaterial from './MeshPhysicalNodeMaterial.js';\nimport { float, vec3 } from '../shadernode/ShaderNode.js';\nclass SSSLightingModel extends PhysicalLightingModel {\n  constructor(useClearcoat, useSheen, useIridescence, useSSS) {\n    super(useClearcoat, useSheen, useIridescence);\n    this.useSSS = useSSS;\n  }\n  direct({\n    lightDirection,\n    lightColor,\n    reflectedLight\n  }, stack, builder) {\n    if (this.useSSS === true) {\n      const material = builder.material;\n      const {\n        thicknessColorNode,\n        thicknessDistortionNode,\n        thicknessAmbientNode,\n        thicknessAttenuationNode,\n        thicknessPowerNode,\n        thicknessScaleNode\n      } = material;\n      const scatteringHalf = lightDirection.add(transformedNormalView.mul(thicknessDistortionNode)).normalize();\n      const scatteringDot = float(positionViewDirection.dot(scatteringHalf.negate()).saturate().pow(thicknessPowerNode).mul(thicknessScaleNode));\n      const scatteringIllu = vec3(scatteringDot.add(thicknessAmbientNode).mul(thicknessColorNode));\n      reflectedLight.directDiffuse.addAssign(scatteringIllu.mul(thicknessAttenuationNode.mul(lightColor)));\n    }\n    super.direct({\n      lightDirection,\n      lightColor,\n      reflectedLight\n    }, stack, builder);\n  }\n}\nclass MeshSSSNodeMaterial extends MeshPhysicalNodeMaterial {\n  constructor(parameters) {\n    super(parameters);\n    this.thicknessColorNode = null;\n    this.thicknessDistortionNode = float(0.1);\n    this.thicknessAmbientNode = float(0.0);\n    this.thicknessAttenuationNode = float(.1);\n    this.thicknessPowerNode = float(2.0);\n    this.thicknessScaleNode = float(10.0);\n  }\n  get useSSS() {\n    return this.thicknessColorNode !== null;\n  }\n  setupLightingModel( /*builder*/\n  ) {\n    return new SSSLightingModel(this.useClearcoat, this.useSheen, this.useIridescence, this.useSSS);\n  }\n  copy(source) {\n    this.thicknessColorNode = source.thicknessColorNode;\n    this.thicknessDistortionNode = source.thicknessDistortionNode;\n    this.thicknessAmbientNode = source.thicknessAmbientNode;\n    this.thicknessAttenuationNode = source.thicknessAttenuationNode;\n    this.thicknessPowerNode = source.thicknessPowerNode;\n    this.thicknessScaleNode = source.thicknessScaleNode;\n    return super.copy(source);\n  }\n}\nexport default MeshSSSNodeMaterial;\naddNodeMaterial('MeshSSSNodeMaterial', MeshSSSNodeMaterial);","map":{"version":3,"names":["addNodeMaterial","transformedNormalView","positionViewDirection","PhysicalLightingModel","MeshPhysicalNodeMaterial","float","vec3","SSSLightingModel","constructor","useClearcoat","useSheen","useIridescence","useSSS","direct","lightDirection","lightColor","reflectedLight","stack","builder","material","thicknessColorNode","thicknessDistortionNode","thicknessAmbientNode","thicknessAttenuationNode","thicknessPowerNode","thicknessScaleNode","scatteringHalf","add","mul","normalize","scatteringDot","dot","negate","saturate","pow","scatteringIllu","directDiffuse","addAssign","MeshSSSNodeMaterial","parameters","setupLightingModel","copy","source"],"sources":["D:/dumps/online-learning-platform-main/Frontend/node_modules/three/examples/jsm/nodes/materials/MeshSSSNodeMaterial.js"],"sourcesContent":["import { addNodeMaterial } from './NodeMaterial.js';\nimport { transformedNormalView } from '../accessors/NormalNode.js';\nimport { positionViewDirection } from '../accessors/PositionNode.js';\nimport PhysicalLightingModel from '../functions/PhysicalLightingModel.js';\nimport MeshPhysicalNodeMaterial from './MeshPhysicalNodeMaterial.js';\nimport { float, vec3 } from '../shadernode/ShaderNode.js';\n\nclass SSSLightingModel extends PhysicalLightingModel {\n\n\tconstructor( useClearcoat, useSheen, useIridescence, useSSS ) {\n\n\t\tsuper( useClearcoat, useSheen, useIridescence );\n\n\t\tthis.useSSS = useSSS;\n\n\t}\n\n\tdirect( { lightDirection, lightColor, reflectedLight }, stack, builder ) {\n\n\t\tif ( this.useSSS === true ) {\n\n\t\t\tconst material = builder.material;\n\n\t\t\tconst { thicknessColorNode, thicknessDistortionNode, thicknessAmbientNode, thicknessAttenuationNode, thicknessPowerNode, thicknessScaleNode } = material;\n\n\t\t\tconst scatteringHalf = lightDirection.add( transformedNormalView.mul( thicknessDistortionNode ) ).normalize();\n\t\t\tconst scatteringDot = float( positionViewDirection.dot( scatteringHalf.negate() ).saturate().pow( thicknessPowerNode ).mul( thicknessScaleNode ) );\n\t\t\tconst scatteringIllu = vec3( scatteringDot.add( thicknessAmbientNode ).mul( thicknessColorNode ) );\n\n\t\t\treflectedLight.directDiffuse.addAssign( scatteringIllu.mul( thicknessAttenuationNode.mul( lightColor ) ) );\n\n\t\t}\n\n\t\tsuper.direct( { lightDirection, lightColor, reflectedLight }, stack, builder );\n\n\t}\n\n}\n\nclass MeshSSSNodeMaterial extends MeshPhysicalNodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.thicknessColorNode = null;\n\t\tthis.thicknessDistortionNode = float( 0.1 );\n\t\tthis.thicknessAmbientNode = float( 0.0 );\n\t\tthis.thicknessAttenuationNode = float( .1 );\n\t\tthis.thicknessPowerNode = float( 2.0 );\n\t\tthis.thicknessScaleNode = float( 10.0 );\n\n\t}\n\n\tget useSSS() {\n\n\t\treturn this.thicknessColorNode !== null;\n\n\t}\n\n\tsetupLightingModel( /*builder*/ ) {\n\n\t\treturn new SSSLightingModel( this.useClearcoat, this.useSheen, this.useIridescence, this.useSSS );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.thicknessColorNode = source.thicknessColorNode;\n\t\tthis.thicknessDistortionNode = source.thicknessDistortionNode;\n\t\tthis.thicknessAmbientNode = source.thicknessAmbientNode;\n\t\tthis.thicknessAttenuationNode = source.thicknessAttenuationNode;\n\t\tthis.thicknessPowerNode = source.thicknessPowerNode;\n\t\tthis.thicknessScaleNode = source.thicknessScaleNode;\n\n\t\treturn super.copy( source );\n\n\t}\n\n}\n\nexport default MeshSSSNodeMaterial;\n\naddNodeMaterial( 'MeshSSSNodeMaterial', MeshSSSNodeMaterial );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}