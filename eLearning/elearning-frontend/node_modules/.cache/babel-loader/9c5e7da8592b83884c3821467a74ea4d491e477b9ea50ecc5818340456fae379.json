{"ast":null,"code":"import { addNodeClass } from '../core/Node.js';\nimport TempNode from '../core/TempNode.js';\nimport { cameraProjectionMatrix } from './CameraNode.js';\nimport { modelViewMatrix } from './ModelNode.js';\nimport { positionLocal } from './PositionNode.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\nimport { varying } from '../core/VaryingNode.js';\nclass ModelViewProjectionNode extends TempNode {\n  constructor(positionNode = null) {\n    super('vec4');\n    this.positionNode = positionNode;\n  }\n  setup(builder) {\n    if (builder.shaderStage === 'fragment') {\n      return varying(builder.context.mvp);\n    }\n    const position = this.positionNode || positionLocal;\n    return cameraProjectionMatrix.mul(modelViewMatrix).mul(position);\n  }\n}\nexport default ModelViewProjectionNode;\nexport const modelViewProjection = nodeProxy(ModelViewProjectionNode);\naddNodeClass('ModelViewProjectionNode', ModelViewProjectionNode);","map":{"version":3,"names":["addNodeClass","TempNode","cameraProjectionMatrix","modelViewMatrix","positionLocal","nodeProxy","varying","ModelViewProjectionNode","constructor","positionNode","setup","builder","shaderStage","context","mvp","position","mul","modelViewProjection"],"sources":["D:/dumps/online-learning-platform-main/Frontend/node_modules/three/examples/jsm/nodes/accessors/ModelViewProjectionNode.js"],"sourcesContent":["import { addNodeClass } from '../core/Node.js';\nimport TempNode from '../core/TempNode.js';\nimport { cameraProjectionMatrix } from './CameraNode.js';\nimport { modelViewMatrix } from './ModelNode.js';\nimport { positionLocal } from './PositionNode.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\nimport { varying } from '../core/VaryingNode.js';\n\nclass ModelViewProjectionNode extends TempNode {\n\n\tconstructor( positionNode = null ) {\n\n\t\tsuper( 'vec4' );\n\n\t\tthis.positionNode = positionNode;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tif ( builder.shaderStage === 'fragment' ) {\n\n\t\t\treturn varying( builder.context.mvp );\n\n\t\t}\n\n\t\tconst position = this.positionNode || positionLocal;\n\n\t\treturn cameraProjectionMatrix.mul( modelViewMatrix ).mul( position );\n\n\t}\n\n}\n\nexport default ModelViewProjectionNode;\n\nexport const modelViewProjection = nodeProxy( ModelViewProjectionNode );\n\naddNodeClass( 'ModelViewProjectionNode', ModelViewProjectionNode );\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,sBAAsB,QAAQ,iBAAiB;AACxD,SAASC,eAAe,QAAQ,gBAAgB;AAChD,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,OAAO,QAAQ,wBAAwB;AAEhD,MAAMC,uBAAuB,SAASN,QAAQ,CAAC;EAE9CO,WAAWA,CAAEC,YAAY,GAAG,IAAI,EAAG;IAElC,KAAK,CAAE,MAAO,CAAC;IAEf,IAAI,CAACA,YAAY,GAAGA,YAAY;EAEjC;EAEAC,KAAKA,CAAEC,OAAO,EAAG;IAEhB,IAAKA,OAAO,CAACC,WAAW,KAAK,UAAU,EAAG;MAEzC,OAAON,OAAO,CAAEK,OAAO,CAACE,OAAO,CAACC,GAAI,CAAC;IAEtC;IAEA,MAAMC,QAAQ,GAAG,IAAI,CAACN,YAAY,IAAIL,aAAa;IAEnD,OAAOF,sBAAsB,CAACc,GAAG,CAAEb,eAAgB,CAAC,CAACa,GAAG,CAAED,QAAS,CAAC;EAErE;AAED;AAEA,eAAeR,uBAAuB;AAEtC,OAAO,MAAMU,mBAAmB,GAAGZ,SAAS,CAAEE,uBAAwB,CAAC;AAEvEP,YAAY,CAAE,yBAAyB,EAAEO,uBAAwB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}