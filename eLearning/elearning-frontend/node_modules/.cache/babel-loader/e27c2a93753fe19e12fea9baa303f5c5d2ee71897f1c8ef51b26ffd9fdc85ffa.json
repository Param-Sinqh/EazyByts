{"ast":null,"code":"var _jsxFileName = \"D:\\\\EazyByts\\\\eLearning\\\\elearning-frontend\\\\src\\\\components\\\\CourseContentView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../components/css/CourseContentView.css';\nimport { useLocation } from 'react-router-dom';\nimport Confetti from 'react-confetti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CourseContentView = () => {\n  _s();\n  var _location$state, _location$state2, _location$state3, _location$state4;\n  const location = useLocation();\n  const courseId = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.courseId) || null;\n  const userid = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.userid) || null;\n  const username = ((_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.username) || null;\n  const role = ((_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : _location$state4.role) || null;\n  const [contents, setContents] = useState([]);\n  const [selectedContent, setSelectedContent] = useState({});\n  const [message, setMessage] = useState('');\n  const [showConfetti, setShowConfetti] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (courseId) {\n      fetchMaterials(courseId);\n    }\n  }, [courseId]);\n  const fetchMaterials = async courseId => {\n    try {\n      const response = await axios.get(`http://localhost:8080/material/course/${courseId}`);\n      if (Array.isArray(response.data)) {\n        setContents(response.data);\n        const firstIncompleteMaterial = response.data.find(material => !material.completed);\n        if (firstIncompleteMaterial) {\n          setSelectedContent(firstIncompleteMaterial);\n        } else if (response.data.length > 0) {\n          setSelectedContent(response.data[0]);\n        }\n      } else {\n        console.error('Fetched data is not an array:', response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching materials:', error);\n    }\n  };\n  const markAsCompleted = async () => {\n    try {\n      const formData = new URLSearchParams();\n      formData.append('materialId', selectedContent.id);\n      formData.append('isCompleted', true);\n      await axios.put(`http://localhost:8080/material/updateProgress`, formData);\n      fetchMaterials(courseId); // Refresh materials after marking as completed\n    } catch (error) {\n      console.error('Error updating material progress:', error);\n    }\n  };\n  const handleCourseCompletion = async () => {\n    try {\n      // Remove the course from the user\n      await axios.post('http://localhost:8080/user/removeCourse', {\n        userId: userid\n      });\n\n      // Reset the completion status of all materials in the course\n      await axios.put(`http://localhost:8080/material/resetProgress/${courseId}`);\n      console.log('Course removed and materials reset successfully.');\n    } catch (error) {\n      console.error('Error handling course completion:', error);\n      alert('Error handling course completion: ' + error.message);\n    }\n  };\n  useEffect(() => {\n    if (contents.length > 0 && contents.every(material => material.completed)) {\n      setMessage('Congratulations! Your course has been completed!ðŸŽ‰');\n      setShowConfetti(true);\n      handleCourseCompletion();\n    } else {\n      setMessage('');\n    }\n  }, [contents]);\n  const extractVideoId = url => {\n    if (!url) return '';\n    const videoId = url.split('v=')[1];\n    if (videoId) {\n      const ampersandPosition = videoId.indexOf('&');\n      if (ampersandPosition !== -1) {\n        return videoId.substring(0, ampersandPosition);\n      }\n      return videoId;\n    }\n    return '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"course-content-view\",\n    children: [showConfetti && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Confetti, {\n        gravity: 0.05\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"completion-message\",\n        children: [message, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"CourseContentView-btn\",\n          onClick: () => navigate('/courses', {\n            state: {\n              role: role,\n              username: username,\n              userid: userid\n            }\n          }),\n          children: \"Choose New Course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Course Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: contents.map((content, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `${content.completed ? 'completed' : ''} ${content.name === (selectedContent === null || selectedContent === void 0 ? void 0 : selectedContent.name) ? 'active' : ''}`,\n          onClick: () => setSelectedContent(content),\n          children: content.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), selectedContent && selectedContent.name && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedContent.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), selectedContent && !selectedContent.completed && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"CourseContentView-btn\",\n          onClick: markAsCompleted,\n          children: \"Mark as Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          title: selectedContent.name,\n          src: `https://www.youtube.com/embed/${extractVideoId(selectedContent.url)}`,\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Video Transcript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedContent.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(CourseContentView, \"M0Vu/A6wEy7dyhJTdWLGj3aMI/0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = CourseContentView;\nexport default CourseContentView;\nvar _c;\n$RefreshReg$(_c, \"CourseContentView\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","useLocation","Confetti","jsxDEV","_jsxDEV","Fragment","_Fragment","CourseContentView","_s","_location$state","_location$state2","_location$state3","_location$state4","location","courseId","state","userid","username","role","contents","setContents","selectedContent","setSelectedContent","message","setMessage","showConfetti","setShowConfetti","navigate","fetchMaterials","response","get","Array","isArray","data","firstIncompleteMaterial","find","material","completed","length","console","error","markAsCompleted","formData","URLSearchParams","append","id","put","handleCourseCompletion","post","userId","log","alert","every","extractVideoId","url","videoId","split","ampersandPosition","indexOf","substring","className","children","gravity","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","content","index","name","title","src","allowFullScreen","_c","$RefreshReg$"],"sources":["D:/EazyByts/eLearning/elearning-frontend/src/components/CourseContentView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../components/css/CourseContentView.css';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Confetti from 'react-confetti';\r\n\r\nconst CourseContentView = () => {\r\n    const location = useLocation();\r\n    const courseId = location.state?.courseId || null;\r\n    const userid = location.state?.userid || null;\r\n    const username = location.state?.username || null;\r\n    const role = location.state?.role || null;\r\n    const [contents, setContents] = useState([]);\r\n    const [selectedContent, setSelectedContent] = useState({});\r\n    const [message, setMessage] = useState('');\r\n    const [showConfetti, setShowConfetti] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (courseId) {\r\n            fetchMaterials(courseId);\r\n        }\r\n    }, [courseId]);\r\n\r\n    const fetchMaterials = async (courseId) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8080/material/course/${courseId}`);\r\n            if (Array.isArray(response.data)) {\r\n                setContents(response.data);\r\n                const firstIncompleteMaterial = response.data.find(material => !material.completed);\r\n                if (firstIncompleteMaterial) {\r\n                    setSelectedContent(firstIncompleteMaterial);\r\n                } else if (response.data.length > 0) {\r\n                    setSelectedContent(response.data[0]);\r\n                }\r\n            } else {\r\n                console.error('Fetched data is not an array:', response.data);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching materials:', error);\r\n        }\r\n    };\r\n\r\n    const markAsCompleted = async () => {\r\n        try {\r\n            const formData = new URLSearchParams();\r\n            formData.append('materialId', selectedContent.id);\r\n            formData.append('isCompleted', true);\r\n\r\n            await axios.put(`http://localhost:8080/material/updateProgress`, formData);\r\n\r\n            fetchMaterials(courseId); // Refresh materials after marking as completed\r\n        } catch (error) {\r\n            console.error('Error updating material progress:', error);\r\n        }\r\n    };\r\n\r\n    const handleCourseCompletion = async () => {\r\n        try {\r\n            // Remove the course from the user\r\n            await axios.post('http://localhost:8080/user/removeCourse', {\r\n                userId: userid,\r\n            });\r\n\r\n            // Reset the completion status of all materials in the course\r\n            await axios.put(`http://localhost:8080/material/resetProgress/${courseId}`);\r\n\r\n            console.log('Course removed and materials reset successfully.');\r\n\r\n        } catch (error) {\r\n            console.error('Error handling course completion:', error);\r\n            alert('Error handling course completion: ' + error.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (contents.length > 0 && contents.every(material => material.completed)) {\r\n            setMessage('Congratulations! Your course has been completed!ðŸŽ‰');\r\n            setShowConfetti(true);\r\n            handleCourseCompletion();\r\n        } else {\r\n            setMessage('');\r\n        }\r\n    }, [contents]);\r\n\r\n    const extractVideoId = (url) => {\r\n        if (!url) return '';\r\n        const videoId = url.split('v=')[1];\r\n        if (videoId) {\r\n            const ampersandPosition = videoId.indexOf('&');\r\n            if (ampersandPosition !== -1) {\r\n                return videoId.substring(0, ampersandPosition);\r\n            }\r\n            return videoId;\r\n        }\r\n        return '';\r\n    };\r\n\r\n    return (\r\n        <div className=\"course-content-view\">\r\n            {showConfetti && (\r\n                <>\r\n                    <Confetti gravity={0.05} />\r\n                    <div className=\"completion-message\">\r\n                        {message}\r\n                        <button className=\"CourseContentView-btn\" onClick={() => navigate('/courses', { state: { role: role, username: username, userid: userid } })}>\r\n                            Choose New Course\r\n                        </button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <div className=\"content-list\">\r\n                <h3>Course Content</h3>\r\n                <ul>\r\n                    {contents.map((content, index) => (\r\n                        <li\r\n                            key={index}\r\n                            className={`${content.completed ? 'completed' : ''} ${content.name === selectedContent?.name ? 'active' : ''}`}\r\n                            onClick={() => setSelectedContent(content)}\r\n                        >\r\n                            {content.name}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            {selectedContent && selectedContent.name && (\r\n                <div className=\"content-details\">\r\n                    <div className=\"header\">\r\n                        <h3>{selectedContent.name}</h3>\r\n                        {selectedContent && !selectedContent.completed && (\r\n                            <button className=\"CourseContentView-btn\" onClick={markAsCompleted}>\r\n                                Mark as Completed\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"video-container\">\r\n                        <iframe\r\n                            title={selectedContent.name}\r\n                            src={`https://www.youtube.com/embed/${extractVideoId(selectedContent.url)}`}\r\n                            allowFullScreen\r\n                        ></iframe>\r\n                    </div>\r\n                    <div className=\"transcript\">\r\n                        <h4>Video Transcript</h4>\r\n                        <p>{selectedContent.content}</p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CourseContentView;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,yCAAyC;AAChD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,QAAQ,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA;EAC5B,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,QAAQ,GAAG,EAAAL,eAAA,GAAAI,QAAQ,CAACE,KAAK,cAAAN,eAAA,uBAAdA,eAAA,CAAgBK,QAAQ,KAAI,IAAI;EACjD,MAAME,MAAM,GAAG,EAAAN,gBAAA,GAAAG,QAAQ,CAACE,KAAK,cAAAL,gBAAA,uBAAdA,gBAAA,CAAgBM,MAAM,KAAI,IAAI;EAC7C,MAAMC,QAAQ,GAAG,EAAAN,gBAAA,GAAAE,QAAQ,CAACE,KAAK,cAAAJ,gBAAA,uBAAdA,gBAAA,CAAgBM,QAAQ,KAAI,IAAI;EACjD,MAAMC,IAAI,GAAG,EAAAN,gBAAA,GAAAC,QAAQ,CAACE,KAAK,cAAAH,gBAAA,uBAAdA,gBAAA,CAAgBM,IAAI,KAAI,IAAI;EACzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACwB,eAAe,EAAEC,kBAAkB,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAM8B,QAAQ,GAAG3B,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ,IAAIgB,QAAQ,EAAE;MACVc,cAAc,CAACd,QAAQ,CAAC;IAC5B;EACJ,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMc,cAAc,GAAG,MAAOd,QAAQ,IAAK;IACvC,IAAI;MACA,MAAMe,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAAE,yCAAwChB,QAAS,EAAC,CAAC;MACrF,IAAIiB,KAAK,CAACC,OAAO,CAACH,QAAQ,CAACI,IAAI,CAAC,EAAE;QAC9Bb,WAAW,CAACS,QAAQ,CAACI,IAAI,CAAC;QAC1B,MAAMC,uBAAuB,GAAGL,QAAQ,CAACI,IAAI,CAACE,IAAI,CAACC,QAAQ,IAAI,CAACA,QAAQ,CAACC,SAAS,CAAC;QACnF,IAAIH,uBAAuB,EAAE;UACzBZ,kBAAkB,CAACY,uBAAuB,CAAC;QAC/C,CAAC,MAAM,IAAIL,QAAQ,CAACI,IAAI,CAACK,MAAM,GAAG,CAAC,EAAE;UACjChB,kBAAkB,CAACO,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;QACxC;MACJ,CAAC,MAAM;QACHM,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEX,QAAQ,CAACI,IAAI,CAAC;MACjE;IACJ,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACrD;EACJ,CAAC;EAED,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,IAAIC,eAAe,CAAC,CAAC;MACtCD,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEvB,eAAe,CAACwB,EAAE,CAAC;MACjDH,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;MAEpC,MAAM7C,KAAK,CAAC+C,GAAG,CAAE,+CAA8C,EAAEJ,QAAQ,CAAC;MAE1Ed,cAAc,CAACd,QAAQ,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAO0B,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC7D;EACJ,CAAC;EAED,MAAMO,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACA;MACA,MAAMhD,KAAK,CAACiD,IAAI,CAAC,yCAAyC,EAAE;QACxDC,MAAM,EAAEjC;MACZ,CAAC,CAAC;;MAEF;MACA,MAAMjB,KAAK,CAAC+C,GAAG,CAAE,gDAA+ChC,QAAS,EAAC,CAAC;MAE3EyB,OAAO,CAACW,GAAG,CAAC,kDAAkD,CAAC;IAEnE,CAAC,CAAC,OAAOV,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzDW,KAAK,CAAC,oCAAoC,GAAGX,KAAK,CAACjB,OAAO,CAAC;IAC/D;EACJ,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACZ,IAAIqB,QAAQ,CAACmB,MAAM,GAAG,CAAC,IAAInB,QAAQ,CAACiC,KAAK,CAAChB,QAAQ,IAAIA,QAAQ,CAACC,SAAS,CAAC,EAAE;MACvEb,UAAU,CAAC,oDAAoD,CAAC;MAChEE,eAAe,CAAC,IAAI,CAAC;MACrBqB,sBAAsB,CAAC,CAAC;IAC5B,CAAC,MAAM;MACHvB,UAAU,CAAC,EAAE,CAAC;IAClB;EACJ,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,MAAMkC,cAAc,GAAIC,GAAG,IAAK;IAC5B,IAAI,CAACA,GAAG,EAAE,OAAO,EAAE;IACnB,MAAMC,OAAO,GAAGD,GAAG,CAACE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,IAAID,OAAO,EAAE;MACT,MAAME,iBAAiB,GAAGF,OAAO,CAACG,OAAO,CAAC,GAAG,CAAC;MAC9C,IAAID,iBAAiB,KAAK,CAAC,CAAC,EAAE;QAC1B,OAAOF,OAAO,CAACI,SAAS,CAAC,CAAC,EAAEF,iBAAiB,CAAC;MAClD;MACA,OAAOF,OAAO;IAClB;IACA,OAAO,EAAE;EACb,CAAC;EAED,oBACInD,OAAA;IAAKwD,SAAS,EAAC,qBAAqB;IAAAC,QAAA,GAC/BpC,YAAY,iBACTrB,OAAA,CAAAE,SAAA;MAAAuD,QAAA,gBACIzD,OAAA,CAACF,QAAQ;QAAC4D,OAAO,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3B9D,OAAA;QAAKwD,SAAS,EAAC,oBAAoB;QAAAC,QAAA,GAC9BtC,OAAO,eACRnB,OAAA;UAAQwD,SAAS,EAAC,uBAAuB;UAACO,OAAO,EAAEA,CAAA,KAAMxC,QAAQ,CAAC,UAAU,EAAE;YAAEZ,KAAK,EAAE;cAAEG,IAAI,EAAEA,IAAI;cAAED,QAAQ,EAAEA,QAAQ;cAAED,MAAM,EAAEA;YAAO;UAAE,CAAC,CAAE;UAAA6C,QAAA,EAAC;QAE9I;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA,eACR,CACL,eAED9D,OAAA;MAAKwD,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBzD,OAAA;QAAAyD,QAAA,EAAI;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB9D,OAAA;QAAAyD,QAAA,EACK1C,QAAQ,CAACiD,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzBlE,OAAA;UAEIwD,SAAS,EAAG,GAAES,OAAO,CAAChC,SAAS,GAAG,WAAW,GAAG,EAAG,IAAGgC,OAAO,CAACE,IAAI,MAAKlD,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEkD,IAAI,IAAG,QAAQ,GAAG,EAAG,EAAE;UAC/GJ,OAAO,EAAEA,CAAA,KAAM7C,kBAAkB,CAAC+C,OAAO,CAAE;UAAAR,QAAA,EAE1CQ,OAAO,CAACE;QAAI,GAJRD,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EACL7C,eAAe,IAAIA,eAAe,CAACkD,IAAI,iBACpCnE,OAAA;MAAKwD,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5BzD,OAAA;QAAKwD,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACnBzD,OAAA;UAAAyD,QAAA,EAAKxC,eAAe,CAACkD;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAC9B7C,eAAe,IAAI,CAACA,eAAe,CAACgB,SAAS,iBAC1CjC,OAAA;UAAQwD,SAAS,EAAC,uBAAuB;UAACO,OAAO,EAAE1B,eAAgB;UAAAoB,QAAA,EAAC;QAEpE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACX;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAEN9D,OAAA;QAAKwD,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC5BzD,OAAA;UACIoE,KAAK,EAAEnD,eAAe,CAACkD,IAAK;UAC5BE,GAAG,EAAG,iCAAgCpB,cAAc,CAAChC,eAAe,CAACiC,GAAG,CAAE,EAAE;UAC5EoB,eAAe;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACN9D,OAAA;QAAKwD,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBzD,OAAA;UAAAyD,QAAA,EAAI;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzB9D,OAAA;UAAAyD,QAAA,EAAIxC,eAAe,CAACgD;QAAO;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC1D,EAAA,CAnJID,iBAAiB;EAAA,QACFN,WAAW,EAUXD,WAAW;AAAA;AAAA2E,EAAA,GAX1BpE,iBAAiB;AAqJvB,eAAeA,iBAAiB;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}