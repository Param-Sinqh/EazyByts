{"ast":null,"code":"// Three.js Transpiler\n// https://raw.githubusercontent.com/AcademySoftwareFoundation/MaterialX/main/libraries/stdlib/genglsl/lib/mx_noise.glsl\n\nimport { int, uint, float, vec3, bool, uvec3, vec2, vec4, If, tslFn } from '../../shadernode/ShaderNode.js';\nimport { cond } from '../../math/CondNode.js';\nimport { sub, mul } from '../../math/OperatorNode.js';\nimport { floor, abs, max, dot, min, sqrt } from '../../math/MathNode.js';\nimport { overloadingFn } from '../../utils/FunctionOverloadingNode.js';\nimport { loop } from '../../utils/LoopNode.js';\nconst mx_select = tslFn(([b_immutable, t_immutable, f_immutable]) => {\n  const f = float(f_immutable).toVar();\n  const t = float(t_immutable).toVar();\n  const b = bool(b_immutable).toVar();\n  return cond(b, t, f);\n});\nconst mx_negate_if = tslFn(([val_immutable, b_immutable]) => {\n  const b = bool(b_immutable).toVar();\n  const val = float(val_immutable).toVar();\n  return cond(b, val.negate(), val);\n});\nconst mx_floor = tslFn(([x_immutable]) => {\n  const x = float(x_immutable).toVar();\n  return int(floor(x));\n});\nconst mx_floorfrac = tslFn(([x_immutable, i]) => {\n  const x = float(x_immutable).toVar();\n  i.assign(mx_floor(x));\n  return x.sub(float(i));\n});\nconst mx_bilerp_0 = tslFn(([v0_immutable, v1_immutable, v2_immutable, v3_immutable, s_immutable, t_immutable]) => {\n  const t = float(t_immutable).toVar();\n  const s = float(s_immutable).toVar();\n  const v3 = float(v3_immutable).toVar();\n  const v2 = float(v2_immutable).toVar();\n  const v1 = float(v1_immutable).toVar();\n  const v0 = float(v0_immutable).toVar();\n  const s1 = float(sub(1.0, s)).toVar();\n  return sub(1.0, t).mul(v0.mul(s1).add(v1.mul(s))).add(t.mul(v2.mul(s1).add(v3.mul(s))));\n});\nconst mx_bilerp_1 = tslFn(([v0_immutable, v1_immutable, v2_immutable, v3_immutable, s_immutable, t_immutable]) => {\n  const t = float(t_immutable).toVar();\n  const s = float(s_immutable).toVar();\n  const v3 = vec3(v3_immutable).toVar();\n  const v2 = vec3(v2_immutable).toVar();\n  const v1 = vec3(v1_immutable).toVar();\n  const v0 = vec3(v0_immutable).toVar();\n  const s1 = float(sub(1.0, s)).toVar();\n  return sub(1.0, t).mul(v0.mul(s1).add(v1.mul(s))).add(t.mul(v2.mul(s1).add(v3.mul(s))));\n});\nconst mx_bilerp = overloadingFn([mx_bilerp_0, mx_bilerp_1]);\nconst mx_trilerp_0 = tslFn(([v0_immutable, v1_immutable, v2_immutable, v3_immutable, v4_immutable, v5_immutable, v6_immutable, v7_immutable, s_immutable, t_immutable, r_immutable]) => {\n  const r = float(r_immutable).toVar();\n  const t = float(t_immutable).toVar();\n  const s = float(s_immutable).toVar();\n  const v7 = float(v7_immutable).toVar();\n  const v6 = float(v6_immutable).toVar();\n  const v5 = float(v5_immutable).toVar();\n  const v4 = float(v4_immutable).toVar();\n  const v3 = float(v3_immutable).toVar();\n  const v2 = float(v2_immutable).toVar();\n  const v1 = float(v1_immutable).toVar();\n  const v0 = float(v0_immutable).toVar();\n  const s1 = float(sub(1.0, s)).toVar();\n  const t1 = float(sub(1.0, t)).toVar();\n  const r1 = float(sub(1.0, r)).toVar();\n  return r1.mul(t1.mul(v0.mul(s1).add(v1.mul(s))).add(t.mul(v2.mul(s1).add(v3.mul(s))))).add(r.mul(t1.mul(v4.mul(s1).add(v5.mul(s))).add(t.mul(v6.mul(s1).add(v7.mul(s))))));\n});\nconst mx_trilerp_1 = tslFn(([v0_immutable, v1_immutable, v2_immutable, v3_immutable, v4_immutable, v5_immutable, v6_immutable, v7_immutable, s_immutable, t_immutable, r_immutable]) => {\n  const r = float(r_immutable).toVar();\n  const t = float(t_immutable).toVar();\n  const s = float(s_immutable).toVar();\n  const v7 = vec3(v7_immutable).toVar();\n  const v6 = vec3(v6_immutable).toVar();\n  const v5 = vec3(v5_immutable).toVar();\n  const v4 = vec3(v4_immutable).toVar();\n  const v3 = vec3(v3_immutable).toVar();\n  const v2 = vec3(v2_immutable).toVar();\n  const v1 = vec3(v1_immutable).toVar();\n  const v0 = vec3(v0_immutable).toVar();\n  const s1 = float(sub(1.0, s)).toVar();\n  const t1 = float(sub(1.0, t)).toVar();\n  const r1 = float(sub(1.0, r)).toVar();\n  return r1.mul(t1.mul(v0.mul(s1).add(v1.mul(s))).add(t.mul(v2.mul(s1).add(v3.mul(s))))).add(r.mul(t1.mul(v4.mul(s1).add(v5.mul(s))).add(t.mul(v6.mul(s1).add(v7.mul(s))))));\n});\nconst mx_trilerp = overloadingFn([mx_trilerp_0, mx_trilerp_1]);\nconst mx_gradient_float_0 = tslFn(([hash_immutable, x_immutable, y_immutable]) => {\n  const y = float(y_immutable).toVar();\n  const x = float(x_immutable).toVar();\n  const hash = uint(hash_immutable).toVar();\n  const h = uint(hash.bitAnd(uint(7))).toVar();\n  const u = float(mx_select(h.lessThan(uint(4)), x, y)).toVar();\n  const v = float(mul(2.0, mx_select(h.lessThan(uint(4)), y, x))).toVar();\n  return mx_negate_if(u, bool(h.bitAnd(uint(1)))).add(mx_negate_if(v, bool(h.bitAnd(uint(2)))));\n});\nconst mx_gradient_float_1 = tslFn(([hash_immutable, x_immutable, y_immutable, z_immutable]) => {\n  const z = float(z_immutable).toVar();\n  const y = float(y_immutable).toVar();\n  const x = float(x_immutable).toVar();\n  const hash = uint(hash_immutable).toVar();\n  const h = uint(hash.bitAnd(uint(15))).toVar();\n  const u = float(mx_select(h.lessThan(uint(8)), x, y)).toVar();\n  const v = float(mx_select(h.lessThan(uint(4)), y, mx_select(h.equal(uint(12)).or(h.equal(uint(14))), x, z))).toVar();\n  return mx_negate_if(u, bool(h.bitAnd(uint(1)))).add(mx_negate_if(v, bool(h.bitAnd(uint(2)))));\n});\nconst mx_gradient_float = overloadingFn([mx_gradient_float_0, mx_gradient_float_1]);\nconst mx_gradient_vec3_0 = tslFn(([hash_immutable, x_immutable, y_immutable]) => {\n  const y = float(y_immutable).toVar();\n  const x = float(x_immutable).toVar();\n  const hash = uvec3(hash_immutable).toVar();\n  return vec3(mx_gradient_float(hash.x, x, y), mx_gradient_float(hash.y, x, y), mx_gradient_float(hash.z, x, y));\n});\nconst mx_gradient_vec3_1 = tslFn(([hash_immutable, x_immutable, y_immutable, z_immutable]) => {\n  const z = float(z_immutable).toVar();\n  const y = float(y_immutable).toVar();\n  const x = float(x_immutable).toVar();\n  const hash = uvec3(hash_immutable).toVar();\n  return vec3(mx_gradient_float(hash.x, x, y, z), mx_gradient_float(hash.y, x, y, z), mx_gradient_float(hash.z, x, y, z));\n});\nconst mx_gradient_vec3 = overloadingFn([mx_gradient_vec3_0, mx_gradient_vec3_1]);\nconst mx_gradient_scale2d_0 = tslFn(([v_immutable]) => {\n  const v = float(v_immutable).toVar();\n  return mul(0.6616, v);\n});\nconst mx_gradient_scale3d_0 = tslFn(([v_immutable]) => {\n  const v = float(v_immutable).toVar();\n  return mul(0.9820, v);\n});\nconst mx_gradient_scale2d_1 = tslFn(([v_immutable]) => {\n  const v = vec3(v_immutable).toVar();\n  return mul(0.6616, v);\n});\nconst mx_gradient_scale2d = overloadingFn([mx_gradient_scale2d_0, mx_gradient_scale2d_1]);\nconst mx_gradient_scale3d_1 = tslFn(([v_immutable]) => {\n  const v = vec3(v_immutable).toVar();\n  return mul(0.9820, v);\n});\nconst mx_gradient_scale3d = overloadingFn([mx_gradient_scale3d_0, mx_gradient_scale3d_1]);\nconst mx_rotl32 = tslFn(([x_immutable, k_immutable]) => {\n  const k = int(k_immutable).toVar();\n  const x = uint(x_immutable).toVar();\n  return x.shiftLeft(k).bitOr(x.shiftRight(int(32).sub(k)));\n});\nconst mx_bjmix = tslFn(([a, b, c]) => {\n  a.subAssign(c);\n  a.bitXorAssign(mx_rotl32(c, int(4)));\n  c.addAssign(b);\n  b.subAssign(a);\n  b.bitXorAssign(mx_rotl32(a, int(6)));\n  a.addAssign(c);\n  c.subAssign(b);\n  c.bitXorAssign(mx_rotl32(b, int(8)));\n  b.addAssign(a);\n  a.subAssign(c);\n  a.bitXorAssign(mx_rotl32(c, int(16)));\n  c.addAssign(b);\n  b.subAssign(a);\n  b.bitXorAssign(mx_rotl32(a, int(19)));\n  a.addAssign(c);\n  c.subAssign(b);\n  c.bitXorAssign(mx_rotl32(b, int(4)));\n  b.addAssign(a);\n});\nconst mx_bjfinal = tslFn(([a_immutable, b_immutable, c_immutable]) => {\n  const c = uint(c_immutable).toVar();\n  const b = uint(b_immutable).toVar();\n  const a = uint(a_immutable).toVar();\n  c.bitXorAssign(b);\n  c.subAssign(mx_rotl32(b, int(14)));\n  a.bitXorAssign(c);\n  a.subAssign(mx_rotl32(c, int(11)));\n  b.bitXorAssign(a);\n  b.subAssign(mx_rotl32(a, int(25)));\n  c.bitXorAssign(b);\n  c.subAssign(mx_rotl32(b, int(16)));\n  a.bitXorAssign(c);\n  a.subAssign(mx_rotl32(c, int(4)));\n  b.bitXorAssign(a);\n  b.subAssign(mx_rotl32(a, int(14)));\n  c.bitXorAssign(b);\n  c.subAssign(mx_rotl32(b, int(24)));\n  return c;\n});\nconst mx_bits_to_01 = tslFn(([bits_immutable]) => {\n  const bits = uint(bits_immutable).toVar();\n  return float(bits).div(float(uint(int(0xffffffff))));\n});\nconst mx_fade = tslFn(([t_immutable]) => {\n  const t = float(t_immutable).toVar();\n  return t.mul(t.mul(t.mul(t.mul(t.mul(6.0).sub(15.0)).add(10.0))));\n});\nconst mx_hash_int_0 = tslFn(([x_immutable]) => {\n  const x = int(x_immutable).toVar();\n  const len = uint(uint(1)).toVar();\n  const seed = uint(uint(int(0xdeadbeef)).add(len.shiftLeft(uint(2)).add(uint(13)))).toVar();\n  return mx_bjfinal(seed.add(uint(x)), seed, seed);\n});\nconst mx_hash_int_1 = tslFn(([x_immutable, y_immutable]) => {\n  const y = int(y_immutable).toVar();\n  const x = int(x_immutable).toVar();\n  const len = uint(uint(2)).toVar();\n  const a = uint().toVar(),\n    b = uint().toVar(),\n    c = uint().toVar();\n  a.assign(b.assign(c.assign(uint(int(0xdeadbeef)).add(len.shiftLeft(uint(2)).add(uint(13))))));\n  a.addAssign(uint(x));\n  b.addAssign(uint(y));\n  return mx_bjfinal(a, b, c);\n});\nconst mx_hash_int_2 = tslFn(([x_immutable, y_immutable, z_immutable]) => {\n  const z = int(z_immutable).toVar();\n  const y = int(y_immutable).toVar();\n  const x = int(x_immutable).toVar();\n  const len = uint(uint(3)).toVar();\n  const a = uint().toVar(),\n    b = uint().toVar(),\n    c = uint().toVar();\n  a.assign(b.assign(c.assign(uint(int(0xdeadbeef)).add(len.shiftLeft(uint(2)).add(uint(13))))));\n  a.addAssign(uint(x));\n  b.addAssign(uint(y));\n  c.addAssign(uint(z));\n  return mx_bjfinal(a, b, c);\n});\nconst mx_hash_int_3 = tslFn(([x_immutable, y_immutable, z_immutable, xx_immutable]) => {\n  const xx = int(xx_immutable).toVar();\n  const z = int(z_immutable).toVar();\n  const y = int(y_immutable).toVar();\n  const x = int(x_immutable).toVar();\n  const len = uint(uint(4)).toVar();\n  const a = uint().toVar(),\n    b = uint().toVar(),\n    c = uint().toVar();\n  a.assign(b.assign(c.assign(uint(int(0xdeadbeef)).add(len.shiftLeft(uint(2)).add(uint(13))))));\n  a.addAssign(uint(x));\n  b.addAssign(uint(y));\n  c.addAssign(uint(z));\n  mx_bjmix(a, b, c);\n  a.addAssign(uint(xx));\n  return mx_bjfinal(a, b, c);\n});\nconst mx_hash_int_4 = tslFn(([x_immutable, y_immutable, z_immutable, xx_immutable, yy_immutable]) => {\n  const yy = int(yy_immutable).toVar();\n  const xx = int(xx_immutable).toVar();\n  const z = int(z_immutable).toVar();\n  const y = int(y_immutable).toVar();\n  const x = int(x_immutable).toVar();\n  const len = uint(uint(5)).toVar();\n  const a = uint().toVar(),\n    b = uint().toVar(),\n    c = uint().toVar();\n  a.assign(b.assign(c.assign(uint(int(0xdeadbeef)).add(len.shiftLeft(uint(2)).add(uint(13))))));\n  a.addAssign(uint(x));\n  b.addAssign(uint(y));\n  c.addAssign(uint(z));\n  mx_bjmix(a, b, c);\n  a.addAssign(uint(xx));\n  b.addAssign(uint(yy));\n  return mx_bjfinal(a, b, c);\n});\nconst mx_hash_int = overloadingFn([mx_hash_int_0, mx_hash_int_1, mx_hash_int_2, mx_hash_int_3, mx_hash_int_4]);\nconst mx_hash_vec3_0 = tslFn(([x_immutable, y_immutable]) => {\n  const y = int(y_immutable).toVar();\n  const x = int(x_immutable).toVar();\n  const h = uint(mx_hash_int(x, y)).toVar();\n  const result = uvec3().toVar();\n  result.x.assign(h.bitAnd(int(0xFF)));\n  result.y.assign(h.shiftRight(int(8)).bitAnd(int(0xFF)));\n  result.z.assign(h.shiftRight(int(16)).bitAnd(int(0xFF)));\n  return result;\n});\nconst mx_hash_vec3_1 = tslFn(([x_immutable, y_immutable, z_immutable]) => {\n  const z = int(z_immutable).toVar();\n  const y = int(y_immutable).toVar();\n  const x = int(x_immutable).toVar();\n  const h = uint(mx_hash_int(x, y, z)).toVar();\n  const result = uvec3().toVar();\n  result.x.assign(h.bitAnd(int(0xFF)));\n  result.y.assign(h.shiftRight(int(8)).bitAnd(int(0xFF)));\n  result.z.assign(h.shiftRight(int(16)).bitAnd(int(0xFF)));\n  return result;\n});\nconst mx_hash_vec3 = overloadingFn([mx_hash_vec3_0, mx_hash_vec3_1]);\nconst mx_perlin_noise_float_0 = tslFn(([p_immutable]) => {\n  const p = vec2(p_immutable).toVar();\n  const X = int().toVar(),\n    Y = int().toVar();\n  const fx = float(mx_floorfrac(p.x, X)).toVar();\n  const fy = float(mx_floorfrac(p.y, Y)).toVar();\n  const u = float(mx_fade(fx)).toVar();\n  const v = float(mx_fade(fy)).toVar();\n  const result = float(mx_bilerp(mx_gradient_float(mx_hash_int(X, Y), fx, fy), mx_gradient_float(mx_hash_int(X.add(int(1)), Y), fx.sub(1.0), fy), mx_gradient_float(mx_hash_int(X, Y.add(int(1))), fx, fy.sub(1.0)), mx_gradient_float(mx_hash_int(X.add(int(1)), Y.add(int(1))), fx.sub(1.0), fy.sub(1.0)), u, v)).toVar();\n  return mx_gradient_scale2d(result);\n});\nconst mx_perlin_noise_float_1 = tslFn(([p_immutable]) => {\n  const p = vec3(p_immutable).toVar();\n  const X = int().toVar(),\n    Y = int().toVar(),\n    Z = int().toVar();\n  const fx = float(mx_floorfrac(p.x, X)).toVar();\n  const fy = float(mx_floorfrac(p.y, Y)).toVar();\n  const fz = float(mx_floorfrac(p.z, Z)).toVar();\n  const u = float(mx_fade(fx)).toVar();\n  const v = float(mx_fade(fy)).toVar();\n  const w = float(mx_fade(fz)).toVar();\n  const result = float(mx_trilerp(mx_gradient_float(mx_hash_int(X, Y, Z), fx, fy, fz), mx_gradient_float(mx_hash_int(X.add(int(1)), Y, Z), fx.sub(1.0), fy, fz), mx_gradient_float(mx_hash_int(X, Y.add(int(1)), Z), fx, fy.sub(1.0), fz), mx_gradient_float(mx_hash_int(X.add(int(1)), Y.add(int(1)), Z), fx.sub(1.0), fy.sub(1.0), fz), mx_gradient_float(mx_hash_int(X, Y, Z.add(int(1))), fx, fy, fz.sub(1.0)), mx_gradient_float(mx_hash_int(X.add(int(1)), Y, Z.add(int(1))), fx.sub(1.0), fy, fz.sub(1.0)), mx_gradient_float(mx_hash_int(X, Y.add(int(1)), Z.add(int(1))), fx, fy.sub(1.0), fz.sub(1.0)), mx_gradient_float(mx_hash_int(X.add(int(1)), Y.add(int(1)), Z.add(int(1))), fx.sub(1.0), fy.sub(1.0), fz.sub(1.0)), u, v, w)).toVar();\n  return mx_gradient_scale3d(result);\n});\nconst mx_perlin_noise_float = overloadingFn([mx_perlin_noise_float_0, mx_perlin_noise_float_1]);\nconst mx_perlin_noise_vec3_0 = tslFn(([p_immutable]) => {\n  const p = vec2(p_immutable).toVar();\n  const X = int().toVar(),\n    Y = int().toVar();\n  const fx = float(mx_floorfrac(p.x, X)).toVar();\n  const fy = float(mx_floorfrac(p.y, Y)).toVar();\n  const u = float(mx_fade(fx)).toVar();\n  const v = float(mx_fade(fy)).toVar();\n  const result = vec3(mx_bilerp(mx_gradient_vec3(mx_hash_vec3(X, Y), fx, fy), mx_gradient_vec3(mx_hash_vec3(X.add(int(1)), Y), fx.sub(1.0), fy), mx_gradient_vec3(mx_hash_vec3(X, Y.add(int(1))), fx, fy.sub(1.0)), mx_gradient_vec3(mx_hash_vec3(X.add(int(1)), Y.add(int(1))), fx.sub(1.0), fy.sub(1.0)), u, v)).toVar();\n  return mx_gradient_scale2d(result);\n});\nconst mx_perlin_noise_vec3_1 = tslFn(([p_immutable]) => {\n  const p = vec3(p_immutable).toVar();\n  const X = int().toVar(),\n    Y = int().toVar(),\n    Z = int().toVar();\n  const fx = float(mx_floorfrac(p.x, X)).toVar();\n  const fy = float(mx_floorfrac(p.y, Y)).toVar();\n  const fz = float(mx_floorfrac(p.z, Z)).toVar();\n  const u = float(mx_fade(fx)).toVar();\n  const v = float(mx_fade(fy)).toVar();\n  const w = float(mx_fade(fz)).toVar();\n  const result = vec3(mx_trilerp(mx_gradient_vec3(mx_hash_vec3(X, Y, Z), fx, fy, fz), mx_gradient_vec3(mx_hash_vec3(X.add(int(1)), Y, Z), fx.sub(1.0), fy, fz), mx_gradient_vec3(mx_hash_vec3(X, Y.add(int(1)), Z), fx, fy.sub(1.0), fz), mx_gradient_vec3(mx_hash_vec3(X.add(int(1)), Y.add(int(1)), Z), fx.sub(1.0), fy.sub(1.0), fz), mx_gradient_vec3(mx_hash_vec3(X, Y, Z.add(int(1))), fx, fy, fz.sub(1.0)), mx_gradient_vec3(mx_hash_vec3(X.add(int(1)), Y, Z.add(int(1))), fx.sub(1.0), fy, fz.sub(1.0)), mx_gradient_vec3(mx_hash_vec3(X, Y.add(int(1)), Z.add(int(1))), fx, fy.sub(1.0), fz.sub(1.0)), mx_gradient_vec3(mx_hash_vec3(X.add(int(1)), Y.add(int(1)), Z.add(int(1))), fx.sub(1.0), fy.sub(1.0), fz.sub(1.0)), u, v, w)).toVar();\n  return mx_gradient_scale3d(result);\n});\nconst mx_perlin_noise_vec3 = overloadingFn([mx_perlin_noise_vec3_0, mx_perlin_noise_vec3_1]);\nconst mx_cell_noise_float_0 = tslFn(([p_immutable]) => {\n  const p = float(p_immutable).toVar();\n  const ix = int(mx_floor(p)).toVar();\n  return mx_bits_to_01(mx_hash_int(ix));\n});\nconst mx_cell_noise_float_1 = tslFn(([p_immutable]) => {\n  const p = vec2(p_immutable).toVar();\n  const ix = int(mx_floor(p.x)).toVar();\n  const iy = int(mx_floor(p.y)).toVar();\n  return mx_bits_to_01(mx_hash_int(ix, iy));\n});\nconst mx_cell_noise_float_2 = tslFn(([p_immutable]) => {\n  const p = vec3(p_immutable).toVar();\n  const ix = int(mx_floor(p.x)).toVar();\n  const iy = int(mx_floor(p.y)).toVar();\n  const iz = int(mx_floor(p.z)).toVar();\n  return mx_bits_to_01(mx_hash_int(ix, iy, iz));\n});\nconst mx_cell_noise_float_3 = tslFn(([p_immutable]) => {\n  const p = vec4(p_immutable).toVar();\n  const ix = int(mx_floor(p.x)).toVar();\n  const iy = int(mx_floor(p.y)).toVar();\n  const iz = int(mx_floor(p.z)).toVar();\n  const iw = int(mx_floor(p.w)).toVar();\n  return mx_bits_to_01(mx_hash_int(ix, iy, iz, iw));\n});\nconst mx_cell_noise_float = overloadingFn([mx_cell_noise_float_0, mx_cell_noise_float_1, mx_cell_noise_float_2, mx_cell_noise_float_3]);\nconst mx_cell_noise_vec3_0 = tslFn(([p_immutable]) => {\n  const p = float(p_immutable).toVar();\n  const ix = int(mx_floor(p)).toVar();\n  return vec3(mx_bits_to_01(mx_hash_int(ix, int(0))), mx_bits_to_01(mx_hash_int(ix, int(1))), mx_bits_to_01(mx_hash_int(ix, int(2))));\n});\nconst mx_cell_noise_vec3_1 = tslFn(([p_immutable]) => {\n  const p = vec2(p_immutable).toVar();\n  const ix = int(mx_floor(p.x)).toVar();\n  const iy = int(mx_floor(p.y)).toVar();\n  return vec3(mx_bits_to_01(mx_hash_int(ix, iy, int(0))), mx_bits_to_01(mx_hash_int(ix, iy, int(1))), mx_bits_to_01(mx_hash_int(ix, iy, int(2))));\n});\nconst mx_cell_noise_vec3_2 = tslFn(([p_immutable]) => {\n  const p = vec3(p_immutable).toVar();\n  const ix = int(mx_floor(p.x)).toVar();\n  const iy = int(mx_floor(p.y)).toVar();\n  const iz = int(mx_floor(p.z)).toVar();\n  return vec3(mx_bits_to_01(mx_hash_int(ix, iy, iz, int(0))), mx_bits_to_01(mx_hash_int(ix, iy, iz, int(1))), mx_bits_to_01(mx_hash_int(ix, iy, iz, int(2))));\n});\nconst mx_cell_noise_vec3_3 = tslFn(([p_immutable]) => {\n  const p = vec4(p_immutable).toVar();\n  const ix = int(mx_floor(p.x)).toVar();\n  const iy = int(mx_floor(p.y)).toVar();\n  const iz = int(mx_floor(p.z)).toVar();\n  const iw = int(mx_floor(p.w)).toVar();\n  return vec3(mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, int(0))), mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, int(1))), mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, int(2))));\n});\nconst mx_cell_noise_vec3 = overloadingFn([mx_cell_noise_vec3_0, mx_cell_noise_vec3_1, mx_cell_noise_vec3_2, mx_cell_noise_vec3_3]);\nconst mx_fractal_noise_float = tslFn(([p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable]) => {\n  const diminish = float(diminish_immutable).toVar();\n  const lacunarity = float(lacunarity_immutable).toVar();\n  const octaves = int(octaves_immutable).toVar();\n  const p = vec3(p_immutable).toVar();\n  const result = float(0.0).toVar();\n  const amplitude = float(1.0).toVar();\n  loop({\n    start: int(0),\n    end: octaves\n  }, ({\n    i\n  }) => {\n    result.addAssign(amplitude.mul(mx_perlin_noise_float(p)));\n    amplitude.mulAssign(diminish);\n    p.mulAssign(lacunarity);\n  });\n  return result;\n});\nconst mx_fractal_noise_vec3 = tslFn(([p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable]) => {\n  const diminish = float(diminish_immutable).toVar();\n  const lacunarity = float(lacunarity_immutable).toVar();\n  const octaves = int(octaves_immutable).toVar();\n  const p = vec3(p_immutable).toVar();\n  const result = vec3(0.0).toVar();\n  const amplitude = float(1.0).toVar();\n  loop({\n    start: int(0),\n    end: octaves\n  }, ({\n    i\n  }) => {\n    result.addAssign(amplitude.mul(mx_perlin_noise_vec3(p)));\n    amplitude.mulAssign(diminish);\n    p.mulAssign(lacunarity);\n  });\n  return result;\n});\nconst mx_fractal_noise_vec2 = tslFn(([p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable]) => {\n  const diminish = float(diminish_immutable).toVar();\n  const lacunarity = float(lacunarity_immutable).toVar();\n  const octaves = int(octaves_immutable).toVar();\n  const p = vec3(p_immutable).toVar();\n  return vec2(mx_fractal_noise_float(p, octaves, lacunarity, diminish), mx_fractal_noise_float(p.add(vec3(int(19), int(193), int(17))), octaves, lacunarity, diminish));\n});\nconst mx_fractal_noise_vec4 = tslFn(([p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable]) => {\n  const diminish = float(diminish_immutable).toVar();\n  const lacunarity = float(lacunarity_immutable).toVar();\n  const octaves = int(octaves_immutable).toVar();\n  const p = vec3(p_immutable).toVar();\n  const c = vec3(mx_fractal_noise_vec3(p, octaves, lacunarity, diminish)).toVar();\n  const f = float(mx_fractal_noise_float(p.add(vec3(int(19), int(193), int(17))), octaves, lacunarity, diminish)).toVar();\n  return vec4(c, f);\n});\nconst mx_worley_distance_0 = tslFn(([p_immutable, x_immutable, y_immutable, xoff_immutable, yoff_immutable, jitter_immutable, metric_immutable]) => {\n  const metric = int(metric_immutable).toVar();\n  const jitter = float(jitter_immutable).toVar();\n  const yoff = int(yoff_immutable).toVar();\n  const xoff = int(xoff_immutable).toVar();\n  const y = int(y_immutable).toVar();\n  const x = int(x_immutable).toVar();\n  const p = vec2(p_immutable).toVar();\n  const tmp = vec3(mx_cell_noise_vec3(vec2(x.add(xoff), y.add(yoff)))).toVar();\n  const off = vec2(tmp.x, tmp.y).toVar();\n  off.subAssign(0.5);\n  off.mulAssign(jitter);\n  off.addAssign(0.5);\n  const cellpos = vec2(vec2(float(x), float(y)).add(off)).toVar();\n  const diff = vec2(cellpos.sub(p)).toVar();\n  If(metric.equal(int(2)), () => {\n    return abs(diff.x).add(abs(diff.y));\n  });\n  If(metric.equal(int(3)), () => {\n    return max(abs(diff.x), abs(diff.y));\n  });\n  return dot(diff, diff);\n});\nconst mx_worley_distance_1 = tslFn(([p_immutable, x_immutable, y_immutable, z_immutable, xoff_immutable, yoff_immutable, zoff_immutable, jitter_immutable, metric_immutable]) => {\n  const metric = int(metric_immutable).toVar();\n  const jitter = float(jitter_immutable).toVar();\n  const zoff = int(zoff_immutable).toVar();\n  const yoff = int(yoff_immutable).toVar();\n  const xoff = int(xoff_immutable).toVar();\n  const z = int(z_immutable).toVar();\n  const y = int(y_immutable).toVar();\n  const x = int(x_immutable).toVar();\n  const p = vec3(p_immutable).toVar();\n  const off = vec3(mx_cell_noise_vec3(vec3(x.add(xoff), y.add(yoff), z.add(zoff)))).toVar();\n  off.subAssign(0.5);\n  off.mulAssign(jitter);\n  off.addAssign(0.5);\n  const cellpos = vec3(vec3(float(x), float(y), float(z)).add(off)).toVar();\n  const diff = vec3(cellpos.sub(p)).toVar();\n  If(metric.equal(int(2)), () => {\n    return abs(diff.x).add(abs(diff.y).add(abs(diff.z)));\n  });\n  If(metric.equal(int(3)), () => {\n    return max(max(abs(diff.x), abs(diff.y)), abs(diff.z));\n  });\n  return dot(diff, diff);\n});\nconst mx_worley_distance = overloadingFn([mx_worley_distance_0, mx_worley_distance_1]);\nconst mx_worley_noise_float_0 = tslFn(([p_immutable, jitter_immutable, metric_immutable]) => {\n  const metric = int(metric_immutable).toVar();\n  const jitter = float(jitter_immutable).toVar();\n  const p = vec2(p_immutable).toVar();\n  const X = int().toVar(),\n    Y = int().toVar();\n  const localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y)).toVar();\n  const sqdist = float(1e6).toVar();\n  loop({\n    start: -1,\n    end: int(1),\n    name: 'x',\n    condition: '<='\n  }, ({\n    x\n  }) => {\n    loop({\n      start: -1,\n      end: int(1),\n      name: 'y',\n      condition: '<='\n    }, ({\n      y\n    }) => {\n      const dist = float(mx_worley_distance(localpos, x, y, X, Y, jitter, metric)).toVar();\n      sqdist.assign(min(sqdist, dist));\n    });\n  });\n  If(metric.equal(int(0)), () => {\n    sqdist.assign(sqrt(sqdist));\n  });\n  return sqdist;\n});\nconst mx_worley_noise_vec2_0 = tslFn(([p_immutable, jitter_immutable, metric_immutable]) => {\n  const metric = int(metric_immutable).toVar();\n  const jitter = float(jitter_immutable).toVar();\n  const p = vec2(p_immutable).toVar();\n  const X = int().toVar(),\n    Y = int().toVar();\n  const localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y)).toVar();\n  const sqdist = vec2(1e6, 1e6).toVar();\n  loop({\n    start: -1,\n    end: int(1),\n    name: 'x',\n    condition: '<='\n  }, ({\n    x\n  }) => {\n    loop({\n      start: -1,\n      end: int(1),\n      name: 'y',\n      condition: '<='\n    }, ({\n      y\n    }) => {\n      const dist = float(mx_worley_distance(localpos, x, y, X, Y, jitter, metric)).toVar();\n      If(dist.lessThan(sqdist.x), () => {\n        sqdist.y.assign(sqdist.x);\n        sqdist.x.assign(dist);\n      }).elseif(dist.lessThan(sqdist.y), () => {\n        sqdist.y.assign(dist);\n      });\n    });\n  });\n  If(metric.equal(int(0)), () => {\n    sqdist.assign(sqrt(sqdist));\n  });\n  return sqdist;\n});\nconst mx_worley_noise_vec3_0 = tslFn(([p_immutable, jitter_immutable, metric_immutable]) => {\n  const metric = int(metric_immutable).toVar();\n  const jitter = float(jitter_immutable).toVar();\n  const p = vec2(p_immutable).toVar();\n  const X = int().toVar(),\n    Y = int().toVar();\n  const localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y)).toVar();\n  const sqdist = vec3(1e6, 1e6, 1e6).toVar();\n  loop({\n    start: -1,\n    end: int(1),\n    name: 'x',\n    condition: '<='\n  }, ({\n    x\n  }) => {\n    loop({\n      start: -1,\n      end: int(1),\n      name: 'y',\n      condition: '<='\n    }, ({\n      y\n    }) => {\n      const dist = float(mx_worley_distance(localpos, x, y, X, Y, jitter, metric)).toVar();\n      If(dist.lessThan(sqdist.x), () => {\n        sqdist.z.assign(sqdist.y);\n        sqdist.y.assign(sqdist.x);\n        sqdist.x.assign(dist);\n      }).elseif(dist.lessThan(sqdist.y), () => {\n        sqdist.z.assign(sqdist.y);\n        sqdist.y.assign(dist);\n      }).elseif(dist.lessThan(sqdist.z), () => {\n        sqdist.z.assign(dist);\n      });\n    });\n  });\n  If(metric.equal(int(0)), () => {\n    sqdist.assign(sqrt(sqdist));\n  });\n  return sqdist;\n});\nconst mx_worley_noise_float_1 = tslFn(([p_immutable, jitter_immutable, metric_immutable]) => {\n  const metric = int(metric_immutable).toVar();\n  const jitter = float(jitter_immutable).toVar();\n  const p = vec3(p_immutable).toVar();\n  const X = int().toVar(),\n    Y = int().toVar(),\n    Z = int().toVar();\n  const localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z)).toVar();\n  const sqdist = float(1e6).toVar();\n  loop({\n    start: -1,\n    end: int(1),\n    name: 'x',\n    condition: '<='\n  }, ({\n    x\n  }) => {\n    loop({\n      start: -1,\n      end: int(1),\n      name: 'y',\n      condition: '<='\n    }, ({\n      y\n    }) => {\n      loop({\n        start: -1,\n        end: int(1),\n        name: 'z',\n        condition: '<='\n      }, ({\n        z\n      }) => {\n        const dist = float(mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric)).toVar();\n        sqdist.assign(min(sqdist, dist));\n      });\n    });\n  });\n  If(metric.equal(int(0)), () => {\n    sqdist.assign(sqrt(sqdist));\n  });\n  return sqdist;\n});\nconst mx_worley_noise_float = overloadingFn([mx_worley_noise_float_0, mx_worley_noise_float_1]);\nconst mx_worley_noise_vec2_1 = tslFn(([p_immutable, jitter_immutable, metric_immutable]) => {\n  const metric = int(metric_immutable).toVar();\n  const jitter = float(jitter_immutable).toVar();\n  const p = vec3(p_immutable).toVar();\n  const X = int().toVar(),\n    Y = int().toVar(),\n    Z = int().toVar();\n  const localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z)).toVar();\n  const sqdist = vec2(1e6, 1e6).toVar();\n  loop({\n    start: -1,\n    end: int(1),\n    name: 'x',\n    condition: '<='\n  }, ({\n    x\n  }) => {\n    loop({\n      start: -1,\n      end: int(1),\n      name: 'y',\n      condition: '<='\n    }, ({\n      y\n    }) => {\n      loop({\n        start: -1,\n        end: int(1),\n        name: 'z',\n        condition: '<='\n      }, ({\n        z\n      }) => {\n        const dist = float(mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric)).toVar();\n        If(dist.lessThan(sqdist.x), () => {\n          sqdist.y.assign(sqdist.x);\n          sqdist.x.assign(dist);\n        }).elseif(dist.lessThan(sqdist.y), () => {\n          sqdist.y.assign(dist);\n        });\n      });\n    });\n  });\n  If(metric.equal(int(0)), () => {\n    sqdist.assign(sqrt(sqdist));\n  });\n  return sqdist;\n});\nconst mx_worley_noise_vec2 = overloadingFn([mx_worley_noise_vec2_0, mx_worley_noise_vec2_1]);\nconst mx_worley_noise_vec3_1 = tslFn(([p_immutable, jitter_immutable, metric_immutable]) => {\n  const metric = int(metric_immutable).toVar();\n  const jitter = float(jitter_immutable).toVar();\n  const p = vec3(p_immutable).toVar();\n  const X = int().toVar(),\n    Y = int().toVar(),\n    Z = int().toVar();\n  const localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z)).toVar();\n  const sqdist = vec3(1e6, 1e6, 1e6).toVar();\n  loop({\n    start: -1,\n    end: int(1),\n    name: 'x',\n    condition: '<='\n  }, ({\n    x\n  }) => {\n    loop({\n      start: -1,\n      end: int(1),\n      name: 'y',\n      condition: '<='\n    }, ({\n      y\n    }) => {\n      loop({\n        start: -1,\n        end: int(1),\n        name: 'z',\n        condition: '<='\n      }, ({\n        z\n      }) => {\n        const dist = float(mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric)).toVar();\n        If(dist.lessThan(sqdist.x), () => {\n          sqdist.z.assign(sqdist.y);\n          sqdist.y.assign(sqdist.x);\n          sqdist.x.assign(dist);\n        }).elseif(dist.lessThan(sqdist.y), () => {\n          sqdist.z.assign(sqdist.y);\n          sqdist.y.assign(dist);\n        }).elseif(dist.lessThan(sqdist.z), () => {\n          sqdist.z.assign(dist);\n        });\n      });\n    });\n  });\n  If(metric.equal(int(0)), () => {\n    sqdist.assign(sqrt(sqdist));\n  });\n  return sqdist;\n});\nconst mx_worley_noise_vec3 = overloadingFn([mx_worley_noise_vec3_0, mx_worley_noise_vec3_1]);\n\n// layouts\n\nmx_select.setLayout({\n  name: 'mx_select',\n  type: 'float',\n  inputs: [{\n    name: 'b',\n    type: 'bool'\n  }, {\n    name: 't',\n    type: 'float'\n  }, {\n    name: 'f',\n    type: 'float'\n  }]\n});\nmx_negate_if.setLayout({\n  name: 'mx_negate_if',\n  type: 'float',\n  inputs: [{\n    name: 'val',\n    type: 'float'\n  }, {\n    name: 'b',\n    type: 'bool'\n  }]\n});\nmx_floor.setLayout({\n  name: 'mx_floor',\n  type: 'int',\n  inputs: [{\n    name: 'x',\n    type: 'float'\n  }]\n});\nmx_bilerp_0.setLayout({\n  name: 'mx_bilerp_0',\n  type: 'float',\n  inputs: [{\n    name: 'v0',\n    type: 'float'\n  }, {\n    name: 'v1',\n    type: 'float'\n  }, {\n    name: 'v2',\n    type: 'float'\n  }, {\n    name: 'v3',\n    type: 'float'\n  }, {\n    name: 's',\n    type: 'float'\n  }, {\n    name: 't',\n    type: 'float'\n  }]\n});\nmx_bilerp_1.setLayout({\n  name: 'mx_bilerp_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'v0',\n    type: 'vec3'\n  }, {\n    name: 'v1',\n    type: 'vec3'\n  }, {\n    name: 'v2',\n    type: 'vec3'\n  }, {\n    name: 'v3',\n    type: 'vec3'\n  }, {\n    name: 's',\n    type: 'float'\n  }, {\n    name: 't',\n    type: 'float'\n  }]\n});\nmx_trilerp_0.setLayout({\n  name: 'mx_trilerp_0',\n  type: 'float',\n  inputs: [{\n    name: 'v0',\n    type: 'float'\n  }, {\n    name: 'v1',\n    type: 'float'\n  }, {\n    name: 'v2',\n    type: 'float'\n  }, {\n    name: 'v3',\n    type: 'float'\n  }, {\n    name: 'v4',\n    type: 'float'\n  }, {\n    name: 'v5',\n    type: 'float'\n  }, {\n    name: 'v6',\n    type: 'float'\n  }, {\n    name: 'v7',\n    type: 'float'\n  }, {\n    name: 's',\n    type: 'float'\n  }, {\n    name: 't',\n    type: 'float'\n  }, {\n    name: 'r',\n    type: 'float'\n  }]\n});\nmx_trilerp_1.setLayout({\n  name: 'mx_trilerp_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'v0',\n    type: 'vec3'\n  }, {\n    name: 'v1',\n    type: 'vec3'\n  }, {\n    name: 'v2',\n    type: 'vec3'\n  }, {\n    name: 'v3',\n    type: 'vec3'\n  }, {\n    name: 'v4',\n    type: 'vec3'\n  }, {\n    name: 'v5',\n    type: 'vec3'\n  }, {\n    name: 'v6',\n    type: 'vec3'\n  }, {\n    name: 'v7',\n    type: 'vec3'\n  }, {\n    name: 's',\n    type: 'float'\n  }, {\n    name: 't',\n    type: 'float'\n  }, {\n    name: 'r',\n    type: 'float'\n  }]\n});\nmx_gradient_float_0.setLayout({\n  name: 'mx_gradient_float_0',\n  type: 'float',\n  inputs: [{\n    name: 'hash',\n    type: 'uint'\n  }, {\n    name: 'x',\n    type: 'float'\n  }, {\n    name: 'y',\n    type: 'float'\n  }]\n});\nmx_gradient_float_1.setLayout({\n  name: 'mx_gradient_float_1',\n  type: 'float',\n  inputs: [{\n    name: 'hash',\n    type: 'uint'\n  }, {\n    name: 'x',\n    type: 'float'\n  }, {\n    name: 'y',\n    type: 'float'\n  }, {\n    name: 'z',\n    type: 'float'\n  }]\n});\nmx_gradient_vec3_0.setLayout({\n  name: 'mx_gradient_vec3_0',\n  type: 'vec3',\n  inputs: [{\n    name: 'hash',\n    type: 'uvec3'\n  }, {\n    name: 'x',\n    type: 'float'\n  }, {\n    name: 'y',\n    type: 'float'\n  }]\n});\nmx_gradient_vec3_1.setLayout({\n  name: 'mx_gradient_vec3_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'hash',\n    type: 'uvec3'\n  }, {\n    name: 'x',\n    type: 'float'\n  }, {\n    name: 'y',\n    type: 'float'\n  }, {\n    name: 'z',\n    type: 'float'\n  }]\n});\nmx_gradient_scale2d_0.setLayout({\n  name: 'mx_gradient_scale2d_0',\n  type: 'float',\n  inputs: [{\n    name: 'v',\n    type: 'float'\n  }]\n});\nmx_gradient_scale3d_0.setLayout({\n  name: 'mx_gradient_scale3d_0',\n  type: 'float',\n  inputs: [{\n    name: 'v',\n    type: 'float'\n  }]\n});\nmx_gradient_scale2d_1.setLayout({\n  name: 'mx_gradient_scale2d_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'v',\n    type: 'vec3'\n  }]\n});\nmx_gradient_scale3d_1.setLayout({\n  name: 'mx_gradient_scale3d_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'v',\n    type: 'vec3'\n  }]\n});\nmx_rotl32.setLayout({\n  name: 'mx_rotl32',\n  type: 'uint',\n  inputs: [{\n    name: 'x',\n    type: 'uint'\n  }, {\n    name: 'k',\n    type: 'int'\n  }]\n});\nmx_bjfinal.setLayout({\n  name: 'mx_bjfinal',\n  type: 'uint',\n  inputs: [{\n    name: 'a',\n    type: 'uint'\n  }, {\n    name: 'b',\n    type: 'uint'\n  }, {\n    name: 'c',\n    type: 'uint'\n  }]\n});\nmx_bits_to_01.setLayout({\n  name: 'mx_bits_to_01',\n  type: 'float',\n  inputs: [{\n    name: 'bits',\n    type: 'uint'\n  }]\n});\nmx_fade.setLayout({\n  name: 'mx_fade',\n  type: 'float',\n  inputs: [{\n    name: 't',\n    type: 'float'\n  }]\n});\nmx_hash_int_0.setLayout({\n  name: 'mx_hash_int_0',\n  type: 'uint',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }]\n});\nmx_hash_int_1.setLayout({\n  name: 'mx_hash_int_1',\n  type: 'uint',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }]\n});\nmx_hash_int_2.setLayout({\n  name: 'mx_hash_int_2',\n  type: 'uint',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }, {\n    name: 'z',\n    type: 'int'\n  }]\n});\nmx_hash_int_3.setLayout({\n  name: 'mx_hash_int_3',\n  type: 'uint',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }, {\n    name: 'z',\n    type: 'int'\n  }, {\n    name: 'xx',\n    type: 'int'\n  }]\n});\nmx_hash_int_4.setLayout({\n  name: 'mx_hash_int_4',\n  type: 'uint',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }, {\n    name: 'z',\n    type: 'int'\n  }, {\n    name: 'xx',\n    type: 'int'\n  }, {\n    name: 'yy',\n    type: 'int'\n  }]\n});\nmx_hash_vec3_0.setLayout({\n  name: 'mx_hash_vec3_0',\n  type: 'uvec3',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }]\n});\nmx_hash_vec3_1.setLayout({\n  name: 'mx_hash_vec3_1',\n  type: 'uvec3',\n  inputs: [{\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }, {\n    name: 'z',\n    type: 'int'\n  }]\n});\nmx_perlin_noise_float_0.setLayout({\n  name: 'mx_perlin_noise_float_0',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }]\n});\nmx_perlin_noise_float_1.setLayout({\n  name: 'mx_perlin_noise_float_1',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }]\n});\nmx_perlin_noise_vec3_0.setLayout({\n  name: 'mx_perlin_noise_vec3_0',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }]\n});\nmx_perlin_noise_vec3_1.setLayout({\n  name: 'mx_perlin_noise_vec3_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }]\n});\nmx_cell_noise_float_0.setLayout({\n  name: 'mx_cell_noise_float_0',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'float'\n  }]\n});\nmx_cell_noise_float_1.setLayout({\n  name: 'mx_cell_noise_float_1',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }]\n});\nmx_cell_noise_float_2.setLayout({\n  name: 'mx_cell_noise_float_2',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }]\n});\nmx_cell_noise_float_3.setLayout({\n  name: 'mx_cell_noise_float_3',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec4'\n  }]\n});\nmx_cell_noise_vec3_0.setLayout({\n  name: 'mx_cell_noise_vec3_0',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'float'\n  }]\n});\nmx_cell_noise_vec3_1.setLayout({\n  name: 'mx_cell_noise_vec3_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }]\n});\nmx_cell_noise_vec3_2.setLayout({\n  name: 'mx_cell_noise_vec3_2',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }]\n});\nmx_cell_noise_vec3_3.setLayout({\n  name: 'mx_cell_noise_vec3_3',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec4'\n  }]\n});\nmx_fractal_noise_float.setLayout({\n  name: 'mx_fractal_noise_float',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'octaves',\n    type: 'int'\n  }, {\n    name: 'lacunarity',\n    type: 'float'\n  }, {\n    name: 'diminish',\n    type: 'float'\n  }]\n});\nmx_fractal_noise_vec3.setLayout({\n  name: 'mx_fractal_noise_vec3',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'octaves',\n    type: 'int'\n  }, {\n    name: 'lacunarity',\n    type: 'float'\n  }, {\n    name: 'diminish',\n    type: 'float'\n  }]\n});\nmx_fractal_noise_vec2.setLayout({\n  name: 'mx_fractal_noise_vec2',\n  type: 'vec2',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'octaves',\n    type: 'int'\n  }, {\n    name: 'lacunarity',\n    type: 'float'\n  }, {\n    name: 'diminish',\n    type: 'float'\n  }]\n});\nmx_fractal_noise_vec4.setLayout({\n  name: 'mx_fractal_noise_vec4',\n  type: 'vec4',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'octaves',\n    type: 'int'\n  }, {\n    name: 'lacunarity',\n    type: 'float'\n  }, {\n    name: 'diminish',\n    type: 'float'\n  }]\n});\nmx_worley_distance_0.setLayout({\n  name: 'mx_worley_distance_0',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }, {\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }, {\n    name: 'xoff',\n    type: 'int'\n  }, {\n    name: 'yoff',\n    type: 'int'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_distance_1.setLayout({\n  name: 'mx_worley_distance_1',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'x',\n    type: 'int'\n  }, {\n    name: 'y',\n    type: 'int'\n  }, {\n    name: 'z',\n    type: 'int'\n  }, {\n    name: 'xoff',\n    type: 'int'\n  }, {\n    name: 'yoff',\n    type: 'int'\n  }, {\n    name: 'zoff',\n    type: 'int'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_noise_float_0.setLayout({\n  name: 'mx_worley_noise_float_0',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_noise_vec2_0.setLayout({\n  name: 'mx_worley_noise_vec2_0',\n  type: 'vec2',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_noise_vec3_0.setLayout({\n  name: 'mx_worley_noise_vec3_0',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec2'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_noise_float_1.setLayout({\n  name: 'mx_worley_noise_float_1',\n  type: 'float',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_noise_vec2_1.setLayout({\n  name: 'mx_worley_noise_vec2_1',\n  type: 'vec2',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nmx_worley_noise_vec3_1.setLayout({\n  name: 'mx_worley_noise_vec3_1',\n  type: 'vec3',\n  inputs: [{\n    name: 'p',\n    type: 'vec3'\n  }, {\n    name: 'jitter',\n    type: 'float'\n  }, {\n    name: 'metric',\n    type: 'int'\n  }]\n});\nexport { mx_select, mx_negate_if, mx_floor, mx_floorfrac, mx_bilerp, mx_trilerp, mx_gradient_float, mx_gradient_vec3, mx_gradient_scale2d, mx_gradient_scale3d, mx_rotl32, mx_bjmix, mx_bjfinal, mx_bits_to_01, mx_fade, mx_hash_int, mx_hash_vec3, mx_perlin_noise_float, mx_perlin_noise_vec3, mx_cell_noise_float, mx_cell_noise_vec3, mx_fractal_noise_float, mx_fractal_noise_vec3, mx_fractal_noise_vec2, mx_fractal_noise_vec4, mx_worley_distance, mx_worley_noise_float, mx_worley_noise_vec2, mx_worley_noise_vec3 };","map":{"version":3,"names":["int","uint","float","vec3","bool","uvec3","vec2","vec4","If","tslFn","cond","sub","mul","floor","abs","max","dot","min","sqrt","overloadingFn","loop","mx_select","b_immutable","t_immutable","f_immutable","f","toVar","t","b","mx_negate_if","val_immutable","val","negate","mx_floor","x_immutable","x","mx_floorfrac","i","assign","mx_bilerp_0","v0_immutable","v1_immutable","v2_immutable","v3_immutable","s_immutable","s","v3","v2","v1","v0","s1","add","mx_bilerp_1","mx_bilerp","mx_trilerp_0","v4_immutable","v5_immutable","v6_immutable","v7_immutable","r_immutable","r","v7","v6","v5","v4","t1","r1","mx_trilerp_1","mx_trilerp","mx_gradient_float_0","hash_immutable","y_immutable","y","hash","h","bitAnd","u","lessThan","v","mx_gradient_float_1","z_immutable","z","equal","or","mx_gradient_float","mx_gradient_vec3_0","mx_gradient_vec3_1","mx_gradient_vec3","mx_gradient_scale2d_0","v_immutable","mx_gradient_scale3d_0","mx_gradient_scale2d_1","mx_gradient_scale2d","mx_gradient_scale3d_1","mx_gradient_scale3d","mx_rotl32","k_immutable","k","shiftLeft","bitOr","shiftRight","mx_bjmix","a","c","subAssign","bitXorAssign","addAssign","mx_bjfinal","a_immutable","c_immutable","mx_bits_to_01","bits_immutable","bits","div","mx_fade","mx_hash_int_0","len","seed","mx_hash_int_1","mx_hash_int_2","mx_hash_int_3","xx_immutable","xx","mx_hash_int_4","yy_immutable","yy","mx_hash_int","mx_hash_vec3_0","result","mx_hash_vec3_1","mx_hash_vec3","mx_perlin_noise_float_0","p_immutable","p","X","Y","fx","fy","mx_perlin_noise_float_1","Z","fz","w","mx_perlin_noise_float","mx_perlin_noise_vec3_0","mx_perlin_noise_vec3_1","mx_perlin_noise_vec3","mx_cell_noise_float_0","ix","mx_cell_noise_float_1","iy","mx_cell_noise_float_2","iz","mx_cell_noise_float_3","iw","mx_cell_noise_float","mx_cell_noise_vec3_0","mx_cell_noise_vec3_1","mx_cell_noise_vec3_2","mx_cell_noise_vec3_3","mx_cell_noise_vec3","mx_fractal_noise_float","octaves_immutable","lacunarity_immutable","diminish_immutable","diminish","lacunarity","octaves","amplitude","start","end","mulAssign","mx_fractal_noise_vec3","mx_fractal_noise_vec2","mx_fractal_noise_vec4","mx_worley_distance_0","xoff_immutable","yoff_immutable","jitter_immutable","metric_immutable","metric","jitter","yoff","xoff","tmp","off","cellpos","diff","mx_worley_distance_1","zoff_immutable","zoff","mx_worley_distance","mx_worley_noise_float_0","localpos","sqdist","name","condition","dist","mx_worley_noise_vec2_0","elseif","mx_worley_noise_vec3_0","mx_worley_noise_float_1","mx_worley_noise_float","mx_worley_noise_vec2_1","mx_worley_noise_vec2","mx_worley_noise_vec3_1","mx_worley_noise_vec3","setLayout","type","inputs"],"sources":["D:/dumps/online-learning-platform-main/Frontend/node_modules/three/examples/jsm/nodes/materialx/lib/mx_noise.js"],"sourcesContent":["// Three.js Transpiler\n// https://raw.githubusercontent.com/AcademySoftwareFoundation/MaterialX/main/libraries/stdlib/genglsl/lib/mx_noise.glsl\n\nimport { int, uint, float, vec3, bool, uvec3, vec2, vec4, If, tslFn } from '../../shadernode/ShaderNode.js';\nimport { cond } from '../../math/CondNode.js';\nimport { sub, mul } from '../../math/OperatorNode.js';\nimport { floor, abs, max, dot, min, sqrt } from '../../math/MathNode.js';\nimport { overloadingFn } from '../../utils/FunctionOverloadingNode.js';\nimport { loop } from '../../utils/LoopNode.js';\n\nconst mx_select = tslFn( ( [ b_immutable, t_immutable, f_immutable ] ) => {\n\n\tconst f = float( f_immutable ).toVar();\n\tconst t = float( t_immutable ).toVar();\n\tconst b = bool( b_immutable ).toVar();\n\n\treturn cond( b, t, f );\n\n} );\n\nconst mx_negate_if = tslFn( ( [ val_immutable, b_immutable ] ) => {\n\n\tconst b = bool( b_immutable ).toVar();\n\tconst val = float( val_immutable ).toVar();\n\n\treturn cond( b, val.negate(), val );\n\n} );\n\nconst mx_floor = tslFn( ( [ x_immutable ] ) => {\n\n\tconst x = float( x_immutable ).toVar();\n\n\treturn int( floor( x ) );\n\n} );\n\nconst mx_floorfrac = tslFn( ( [ x_immutable, i ] ) => {\n\n\tconst x = float( x_immutable ).toVar();\n\ti.assign( mx_floor( x ) );\n\n\treturn x.sub( float( i ) );\n\n} );\n\nconst mx_bilerp_0 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, s_immutable, t_immutable ] ) => {\n\n\tconst t = float( t_immutable ).toVar();\n\tconst s = float( s_immutable ).toVar();\n\tconst v3 = float( v3_immutable ).toVar();\n\tconst v2 = float( v2_immutable ).toVar();\n\tconst v1 = float( v1_immutable ).toVar();\n\tconst v0 = float( v0_immutable ).toVar();\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\n\n\treturn sub( 1.0, t ).mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) );\n\n} );\n\nconst mx_bilerp_1 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, s_immutable, t_immutable ] ) => {\n\n\tconst t = float( t_immutable ).toVar();\n\tconst s = float( s_immutable ).toVar();\n\tconst v3 = vec3( v3_immutable ).toVar();\n\tconst v2 = vec3( v2_immutable ).toVar();\n\tconst v1 = vec3( v1_immutable ).toVar();\n\tconst v0 = vec3( v0_immutable ).toVar();\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\n\n\treturn sub( 1.0, t ).mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) );\n\n} );\n\nconst mx_bilerp = overloadingFn( [ mx_bilerp_0, mx_bilerp_1 ] );\n\nconst mx_trilerp_0 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, v4_immutable, v5_immutable, v6_immutable, v7_immutable, s_immutable, t_immutable, r_immutable ] ) => {\n\n\tconst r = float( r_immutable ).toVar();\n\tconst t = float( t_immutable ).toVar();\n\tconst s = float( s_immutable ).toVar();\n\tconst v7 = float( v7_immutable ).toVar();\n\tconst v6 = float( v6_immutable ).toVar();\n\tconst v5 = float( v5_immutable ).toVar();\n\tconst v4 = float( v4_immutable ).toVar();\n\tconst v3 = float( v3_immutable ).toVar();\n\tconst v2 = float( v2_immutable ).toVar();\n\tconst v1 = float( v1_immutable ).toVar();\n\tconst v0 = float( v0_immutable ).toVar();\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\n\tconst t1 = float( sub( 1.0, t ) ).toVar();\n\tconst r1 = float( sub( 1.0, r ) ).toVar();\n\n\treturn r1.mul( t1.mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) ) ).add( r.mul( t1.mul( v4.mul( s1 ).add( v5.mul( s ) ) ).add( t.mul( v6.mul( s1 ).add( v7.mul( s ) ) ) ) ) );\n\n} );\n\nconst mx_trilerp_1 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, v4_immutable, v5_immutable, v6_immutable, v7_immutable, s_immutable, t_immutable, r_immutable ] ) => {\n\n\tconst r = float( r_immutable ).toVar();\n\tconst t = float( t_immutable ).toVar();\n\tconst s = float( s_immutable ).toVar();\n\tconst v7 = vec3( v7_immutable ).toVar();\n\tconst v6 = vec3( v6_immutable ).toVar();\n\tconst v5 = vec3( v5_immutable ).toVar();\n\tconst v4 = vec3( v4_immutable ).toVar();\n\tconst v3 = vec3( v3_immutable ).toVar();\n\tconst v2 = vec3( v2_immutable ).toVar();\n\tconst v1 = vec3( v1_immutable ).toVar();\n\tconst v0 = vec3( v0_immutable ).toVar();\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\n\tconst t1 = float( sub( 1.0, t ) ).toVar();\n\tconst r1 = float( sub( 1.0, r ) ).toVar();\n\n\treturn r1.mul( t1.mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) ) ).add( r.mul( t1.mul( v4.mul( s1 ).add( v5.mul( s ) ) ).add( t.mul( v6.mul( s1 ).add( v7.mul( s ) ) ) ) ) );\n\n} );\n\nconst mx_trilerp = overloadingFn( [ mx_trilerp_0, mx_trilerp_1 ] );\n\nconst mx_gradient_float_0 = tslFn( ( [ hash_immutable, x_immutable, y_immutable ] ) => {\n\n\tconst y = float( y_immutable ).toVar();\n\tconst x = float( x_immutable ).toVar();\n\tconst hash = uint( hash_immutable ).toVar();\n\tconst h = uint( hash.bitAnd( uint( 7 ) ) ).toVar();\n\tconst u = float( mx_select( h.lessThan( uint( 4 ) ), x, y ) ).toVar();\n\tconst v = float( mul( 2.0, mx_select( h.lessThan( uint( 4 ) ), y, x ) ) ).toVar();\n\n\treturn mx_negate_if( u, bool( h.bitAnd( uint( 1 ) ) ) ).add( mx_negate_if( v, bool( h.bitAnd( uint( 2 ) ) ) ) );\n\n} );\n\nconst mx_gradient_float_1 = tslFn( ( [ hash_immutable, x_immutable, y_immutable, z_immutable ] ) => {\n\n\tconst z = float( z_immutable ).toVar();\n\tconst y = float( y_immutable ).toVar();\n\tconst x = float( x_immutable ).toVar();\n\tconst hash = uint( hash_immutable ).toVar();\n\tconst h = uint( hash.bitAnd( uint( 15 ) ) ).toVar();\n\tconst u = float( mx_select( h.lessThan( uint( 8 ) ), x, y ) ).toVar();\n\tconst v = float( mx_select( h.lessThan( uint( 4 ) ), y, mx_select( h.equal( uint( 12 ) ).or( h.equal( uint( 14 ) ) ), x, z ) ) ).toVar();\n\n\treturn mx_negate_if( u, bool( h.bitAnd( uint( 1 ) ) ) ).add( mx_negate_if( v, bool( h.bitAnd( uint( 2 ) ) ) ) );\n\n} );\n\nconst mx_gradient_float = overloadingFn( [ mx_gradient_float_0, mx_gradient_float_1 ] );\n\nconst mx_gradient_vec3_0 = tslFn( ( [ hash_immutable, x_immutable, y_immutable ] ) => {\n\n\tconst y = float( y_immutable ).toVar();\n\tconst x = float( x_immutable ).toVar();\n\tconst hash = uvec3( hash_immutable ).toVar();\n\n\treturn vec3( mx_gradient_float( hash.x, x, y ), mx_gradient_float( hash.y, x, y ), mx_gradient_float( hash.z, x, y ) );\n\n} );\n\nconst mx_gradient_vec3_1 = tslFn( ( [ hash_immutable, x_immutable, y_immutable, z_immutable ] ) => {\n\n\tconst z = float( z_immutable ).toVar();\n\tconst y = float( y_immutable ).toVar();\n\tconst x = float( x_immutable ).toVar();\n\tconst hash = uvec3( hash_immutable ).toVar();\n\n\treturn vec3( mx_gradient_float( hash.x, x, y, z ), mx_gradient_float( hash.y, x, y, z ), mx_gradient_float( hash.z, x, y, z ) );\n\n} );\n\nconst mx_gradient_vec3 = overloadingFn( [ mx_gradient_vec3_0, mx_gradient_vec3_1 ] );\n\nconst mx_gradient_scale2d_0 = tslFn( ( [ v_immutable ] ) => {\n\n\tconst v = float( v_immutable ).toVar();\n\n\treturn mul( 0.6616, v );\n\n} );\n\nconst mx_gradient_scale3d_0 = tslFn( ( [ v_immutable ] ) => {\n\n\tconst v = float( v_immutable ).toVar();\n\n\treturn mul( 0.9820, v );\n\n} );\n\nconst mx_gradient_scale2d_1 = tslFn( ( [ v_immutable ] ) => {\n\n\tconst v = vec3( v_immutable ).toVar();\n\n\treturn mul( 0.6616, v );\n\n} );\n\nconst mx_gradient_scale2d = overloadingFn( [ mx_gradient_scale2d_0, mx_gradient_scale2d_1 ] );\n\nconst mx_gradient_scale3d_1 = tslFn( ( [ v_immutable ] ) => {\n\n\tconst v = vec3( v_immutable ).toVar();\n\n\treturn mul( 0.9820, v );\n\n} );\n\nconst mx_gradient_scale3d = overloadingFn( [ mx_gradient_scale3d_0, mx_gradient_scale3d_1 ] );\n\nconst mx_rotl32 = tslFn( ( [ x_immutable, k_immutable ] ) => {\n\n\tconst k = int( k_immutable ).toVar();\n\tconst x = uint( x_immutable ).toVar();\n\n\treturn x.shiftLeft( k ).bitOr( x.shiftRight( int( 32 ).sub( k ) ) );\n\n} );\n\nconst mx_bjmix = tslFn( ( [ a, b, c ] ) => {\n\n\ta.subAssign( c );\n\ta.bitXorAssign( mx_rotl32( c, int( 4 ) ) );\n\tc.addAssign( b );\n\tb.subAssign( a );\n\tb.bitXorAssign( mx_rotl32( a, int( 6 ) ) );\n\ta.addAssign( c );\n\tc.subAssign( b );\n\tc.bitXorAssign( mx_rotl32( b, int( 8 ) ) );\n\tb.addAssign( a );\n\ta.subAssign( c );\n\ta.bitXorAssign( mx_rotl32( c, int( 16 ) ) );\n\tc.addAssign( b );\n\tb.subAssign( a );\n\tb.bitXorAssign( mx_rotl32( a, int( 19 ) ) );\n\ta.addAssign( c );\n\tc.subAssign( b );\n\tc.bitXorAssign( mx_rotl32( b, int( 4 ) ) );\n\tb.addAssign( a );\n\n} );\n\nconst mx_bjfinal = tslFn( ( [ a_immutable, b_immutable, c_immutable ] ) => {\n\n\tconst c = uint( c_immutable ).toVar();\n\tconst b = uint( b_immutable ).toVar();\n\tconst a = uint( a_immutable ).toVar();\n\tc.bitXorAssign( b );\n\tc.subAssign( mx_rotl32( b, int( 14 ) ) );\n\ta.bitXorAssign( c );\n\ta.subAssign( mx_rotl32( c, int( 11 ) ) );\n\tb.bitXorAssign( a );\n\tb.subAssign( mx_rotl32( a, int( 25 ) ) );\n\tc.bitXorAssign( b );\n\tc.subAssign( mx_rotl32( b, int( 16 ) ) );\n\ta.bitXorAssign( c );\n\ta.subAssign( mx_rotl32( c, int( 4 ) ) );\n\tb.bitXorAssign( a );\n\tb.subAssign( mx_rotl32( a, int( 14 ) ) );\n\tc.bitXorAssign( b );\n\tc.subAssign( mx_rotl32( b, int( 24 ) ) );\n\n\treturn c;\n\n} );\n\nconst mx_bits_to_01 = tslFn( ( [ bits_immutable ] ) => {\n\n\tconst bits = uint( bits_immutable ).toVar();\n\n\treturn float( bits ).div( float( uint( int( 0xffffffff ) ) ) );\n\n} );\n\nconst mx_fade = tslFn( ( [ t_immutable ] ) => {\n\n\tconst t = float( t_immutable ).toVar();\n\n\treturn t.mul( t.mul( t.mul( t.mul( t.mul( 6.0 ).sub( 15.0 ) ).add( 10.0 ) ) ) );\n\n} );\n\nconst mx_hash_int_0 = tslFn( ( [ x_immutable ] ) => {\n\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 1 ) ).toVar();\n\tconst seed = uint( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ).toVar();\n\n\treturn mx_bjfinal( seed.add( uint( x ) ), seed, seed );\n\n} );\n\nconst mx_hash_int_1 = tslFn( ( [ x_immutable, y_immutable ] ) => {\n\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 2 ) ).toVar();\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\n\ta.addAssign( uint( x ) );\n\tb.addAssign( uint( y ) );\n\n\treturn mx_bjfinal( a, b, c );\n\n} );\n\nconst mx_hash_int_2 = tslFn( ( [ x_immutable, y_immutable, z_immutable ] ) => {\n\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 3 ) ).toVar();\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\n\ta.addAssign( uint( x ) );\n\tb.addAssign( uint( y ) );\n\tc.addAssign( uint( z ) );\n\n\treturn mx_bjfinal( a, b, c );\n\n} );\n\nconst mx_hash_int_3 = tslFn( ( [ x_immutable, y_immutable, z_immutable, xx_immutable ] ) => {\n\n\tconst xx = int( xx_immutable ).toVar();\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 4 ) ).toVar();\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\n\ta.addAssign( uint( x ) );\n\tb.addAssign( uint( y ) );\n\tc.addAssign( uint( z ) );\n\tmx_bjmix( a, b, c );\n\ta.addAssign( uint( xx ) );\n\n\treturn mx_bjfinal( a, b, c );\n\n} );\n\nconst mx_hash_int_4 = tslFn( ( [ x_immutable, y_immutable, z_immutable, xx_immutable, yy_immutable ] ) => {\n\n\tconst yy = int( yy_immutable ).toVar();\n\tconst xx = int( xx_immutable ).toVar();\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 5 ) ).toVar();\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\n\ta.addAssign( uint( x ) );\n\tb.addAssign( uint( y ) );\n\tc.addAssign( uint( z ) );\n\tmx_bjmix( a, b, c );\n\ta.addAssign( uint( xx ) );\n\tb.addAssign( uint( yy ) );\n\n\treturn mx_bjfinal( a, b, c );\n\n} );\n\nconst mx_hash_int = overloadingFn( [ mx_hash_int_0, mx_hash_int_1, mx_hash_int_2, mx_hash_int_3, mx_hash_int_4 ] );\n\nconst mx_hash_vec3_0 = tslFn( ( [ x_immutable, y_immutable ] ) => {\n\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst h = uint( mx_hash_int( x, y ) ).toVar();\n\tconst result = uvec3().toVar();\n\tresult.x.assign( h.bitAnd( int( 0xFF ) ) );\n\tresult.y.assign( h.shiftRight( int( 8 ) ).bitAnd( int( 0xFF ) ) );\n\tresult.z.assign( h.shiftRight( int( 16 ) ).bitAnd( int( 0xFF ) ) );\n\n\treturn result;\n\n} );\n\nconst mx_hash_vec3_1 = tslFn( ( [ x_immutable, y_immutable, z_immutable ] ) => {\n\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst h = uint( mx_hash_int( x, y, z ) ).toVar();\n\tconst result = uvec3().toVar();\n\tresult.x.assign( h.bitAnd( int( 0xFF ) ) );\n\tresult.y.assign( h.shiftRight( int( 8 ) ).bitAnd( int( 0xFF ) ) );\n\tresult.z.assign( h.shiftRight( int( 16 ) ).bitAnd( int( 0xFF ) ) );\n\n\treturn result;\n\n} );\n\nconst mx_hash_vec3 = overloadingFn( [ mx_hash_vec3_0, mx_hash_vec3_1 ] );\n\nconst mx_perlin_noise_float_0 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\n\tconst u = float( mx_fade( fx ) ).toVar();\n\tconst v = float( mx_fade( fy ) ).toVar();\n\tconst result = float( mx_bilerp( mx_gradient_float( mx_hash_int( X, Y ), fx, fy ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y ), fx.sub( 1.0 ), fy ), mx_gradient_float( mx_hash_int( X, Y.add( int( 1 ) ) ), fx, fy.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ) ), u, v ) ).toVar();\n\n\treturn mx_gradient_scale2d( result );\n\n} );\n\nconst mx_perlin_noise_float_1 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\n\tconst fz = float( mx_floorfrac( p.z, Z ) ).toVar();\n\tconst u = float( mx_fade( fx ) ).toVar();\n\tconst v = float( mx_fade( fy ) ).toVar();\n\tconst w = float( mx_fade( fz ) ).toVar();\n\tconst result = float( mx_trilerp( mx_gradient_float( mx_hash_int( X, Y, Z ), fx, fy, fz ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y, Z ), fx.sub( 1.0 ), fy, fz ), mx_gradient_float( mx_hash_int( X, Y.add( int( 1 ) ), Z ), fx, fy.sub( 1.0 ), fz ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz ), mx_gradient_float( mx_hash_int( X, Y, Z.add( int( 1 ) ) ), fx, fy, fz.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y, Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy, fz.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X, Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx, fy.sub( 1.0 ), fz.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz.sub( 1.0 ) ), u, v, w ) ).toVar();\n\n\treturn mx_gradient_scale3d( result );\n\n} );\n\nconst mx_perlin_noise_float = overloadingFn( [ mx_perlin_noise_float_0, mx_perlin_noise_float_1 ] );\n\nconst mx_perlin_noise_vec3_0 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\n\tconst u = float( mx_fade( fx ) ).toVar();\n\tconst v = float( mx_fade( fy ) ).toVar();\n\tconst result = vec3( mx_bilerp( mx_gradient_vec3( mx_hash_vec3( X, Y ), fx, fy ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y ), fx.sub( 1.0 ), fy ), mx_gradient_vec3( mx_hash_vec3( X, Y.add( int( 1 ) ) ), fx, fy.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ) ), u, v ) ).toVar();\n\n\treturn mx_gradient_scale2d( result );\n\n} );\n\nconst mx_perlin_noise_vec3_1 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\n\tconst fz = float( mx_floorfrac( p.z, Z ) ).toVar();\n\tconst u = float( mx_fade( fx ) ).toVar();\n\tconst v = float( mx_fade( fy ) ).toVar();\n\tconst w = float( mx_fade( fz ) ).toVar();\n\tconst result = vec3( mx_trilerp( mx_gradient_vec3( mx_hash_vec3( X, Y, Z ), fx, fy, fz ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y, Z ), fx.sub( 1.0 ), fy, fz ), mx_gradient_vec3( mx_hash_vec3( X, Y.add( int( 1 ) ), Z ), fx, fy.sub( 1.0 ), fz ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz ), mx_gradient_vec3( mx_hash_vec3( X, Y, Z.add( int( 1 ) ) ), fx, fy, fz.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y, Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy, fz.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X, Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx, fy.sub( 1.0 ), fz.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz.sub( 1.0 ) ), u, v, w ) ).toVar();\n\n\treturn mx_gradient_scale3d( result );\n\n} );\n\nconst mx_perlin_noise_vec3 = overloadingFn( [ mx_perlin_noise_vec3_0, mx_perlin_noise_vec3_1 ] );\n\nconst mx_cell_noise_float_0 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = float( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p ) ).toVar();\n\n\treturn mx_bits_to_01( mx_hash_int( ix ) );\n\n} );\n\nconst mx_cell_noise_float_1 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec2( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\n\treturn mx_bits_to_01( mx_hash_int( ix, iy ) );\n\n} );\n\nconst mx_cell_noise_float_2 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\tconst iz = int( mx_floor( p.z ) ).toVar();\n\n\treturn mx_bits_to_01( mx_hash_int( ix, iy, iz ) );\n\n} );\n\nconst mx_cell_noise_float_3 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec4( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\tconst iz = int( mx_floor( p.z ) ).toVar();\n\tconst iw = int( mx_floor( p.w ) ).toVar();\n\n\treturn mx_bits_to_01( mx_hash_int( ix, iy, iz, iw ) );\n\n} );\n\nconst mx_cell_noise_float = overloadingFn( [ mx_cell_noise_float_0, mx_cell_noise_float_1, mx_cell_noise_float_2, mx_cell_noise_float_3 ] );\n\nconst mx_cell_noise_vec3_0 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = float( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p ) ).toVar();\n\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, int( 2 ) ) ) );\n\n} );\n\nconst mx_cell_noise_vec3_1 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec2( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, iy, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, int( 2 ) ) ) );\n\n} );\n\nconst mx_cell_noise_vec3_2 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\tconst iz = int( mx_floor( p.z ) ).toVar();\n\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, iy, iz, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, int( 2 ) ) ) );\n\n} );\n\nconst mx_cell_noise_vec3_3 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec4( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\tconst iz = int( mx_floor( p.z ) ).toVar();\n\tconst iw = int( mx_floor( p.w ) ).toVar();\n\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, iy, iz, iw, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, iw, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, iw, int( 2 ) ) ) );\n\n} );\n\nconst mx_cell_noise_vec3 = overloadingFn( [ mx_cell_noise_vec3_0, mx_cell_noise_vec3_1, mx_cell_noise_vec3_2, mx_cell_noise_vec3_3 ] );\n\nconst mx_fractal_noise_float = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\n\n\tconst diminish = float( diminish_immutable ).toVar();\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\n\tconst octaves = int( octaves_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst result = float( 0.0 ).toVar();\n\tconst amplitude = float( 1.0 ).toVar();\n\n\tloop( { start: int( 0 ), end: octaves }, ( { i } ) => {\n\n\t\tresult.addAssign( amplitude.mul( mx_perlin_noise_float( p ) ) );\n\t\tamplitude.mulAssign( diminish );\n\t\tp.mulAssign( lacunarity );\n\n\t} );\n\n\treturn result;\n\n} );\n\nconst mx_fractal_noise_vec3 = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\n\n\tconst diminish = float( diminish_immutable ).toVar();\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\n\tconst octaves = int( octaves_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst result = vec3( 0.0 ).toVar();\n\tconst amplitude = float( 1.0 ).toVar();\n\n\tloop( { start: int( 0 ), end: octaves }, ( { i } ) => {\n\n\t\tresult.addAssign( amplitude.mul( mx_perlin_noise_vec3( p ) ) );\n\t\tamplitude.mulAssign( diminish );\n\t\tp.mulAssign( lacunarity );\n\n\t} );\n\n\treturn result;\n\n} );\n\nconst mx_fractal_noise_vec2 = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\n\n\tconst diminish = float( diminish_immutable ).toVar();\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\n\tconst octaves = int( octaves_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\n\treturn vec2( mx_fractal_noise_float( p, octaves, lacunarity, diminish ), mx_fractal_noise_float( p.add( vec3( int( 19 ), int( 193 ), int( 17 ) ) ), octaves, lacunarity, diminish ) );\n\n} );\n\nconst mx_fractal_noise_vec4 = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\n\n\tconst diminish = float( diminish_immutable ).toVar();\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\n\tconst octaves = int( octaves_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst c = vec3( mx_fractal_noise_vec3( p, octaves, lacunarity, diminish ) ).toVar();\n\tconst f = float( mx_fractal_noise_float( p.add( vec3( int( 19 ), int( 193 ), int( 17 ) ) ), octaves, lacunarity, diminish ) ).toVar();\n\n\treturn vec4( c, f );\n\n} );\n\nconst mx_worley_distance_0 = tslFn( ( [ p_immutable, x_immutable, y_immutable, xoff_immutable, yoff_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst yoff = int( yoff_immutable ).toVar();\n\tconst xoff = int( xoff_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst p = vec2( p_immutable ).toVar();\n\tconst tmp = vec3( mx_cell_noise_vec3( vec2( x.add( xoff ), y.add( yoff ) ) ) ).toVar();\n\tconst off = vec2( tmp.x, tmp.y ).toVar();\n\toff.subAssign( 0.5 );\n\toff.mulAssign( jitter );\n\toff.addAssign( 0.5 );\n\tconst cellpos = vec2( vec2( float( x ), float( y ) ).add( off ) ).toVar();\n\tconst diff = vec2( cellpos.sub( p ) ).toVar();\n\n\tIf( metric.equal( int( 2 ) ), () => {\n\n\t\treturn abs( diff.x ).add( abs( diff.y ) );\n\n\t} );\n\n\tIf( metric.equal( int( 3 ) ), () => {\n\n\t\treturn max( abs( diff.x ), abs( diff.y ) );\n\n\t} );\n\n\treturn dot( diff, diff );\n\n} );\n\nconst mx_worley_distance_1 = tslFn( ( [ p_immutable, x_immutable, y_immutable, z_immutable, xoff_immutable, yoff_immutable, zoff_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst zoff = int( zoff_immutable ).toVar();\n\tconst yoff = int( yoff_immutable ).toVar();\n\tconst xoff = int( xoff_immutable ).toVar();\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst off = vec3( mx_cell_noise_vec3( vec3( x.add( xoff ), y.add( yoff ), z.add( zoff ) ) ) ).toVar();\n\toff.subAssign( 0.5 );\n\toff.mulAssign( jitter );\n\toff.addAssign( 0.5 );\n\tconst cellpos = vec3( vec3( float( x ), float( y ), float( z ) ).add( off ) ).toVar();\n\tconst diff = vec3( cellpos.sub( p ) ).toVar();\n\n\tIf( metric.equal( int( 2 ) ), () => {\n\n\t\treturn abs( diff.x ).add( abs( diff.y ).add( abs( diff.z ) ) );\n\n\t} );\n\n\tIf( metric.equal( int( 3 ) ), () => {\n\n\t\treturn max( max( abs( diff.x ), abs( diff.y ) ), abs( diff.z ) );\n\n\t} );\n\n\treturn dot( diff, diff );\n\n} );\n\nconst mx_worley_distance = overloadingFn( [ mx_worley_distance_0, mx_worley_distance_1 ] );\n\nconst mx_worley_noise_float_0 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst localpos = vec2( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ) ).toVar();\n\tconst sqdist = float( 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, X, Y, jitter, metric ) ).toVar();\n\t\t\tsqdist.assign( min( sqdist, dist ) );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_vec2_0 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst localpos = vec2( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ) ).toVar();\n\tconst sqdist = vec2( 1e6, 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, X, Y, jitter, metric ) ).toVar();\n\n\t\t\tIf( dist.lessThan( sqdist.x ), () => {\n\n\t\t\t\tsqdist.y.assign( sqdist.x );\n\t\t\t\tsqdist.x.assign( dist );\n\n\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\n\n\t\t\t\tsqdist.y.assign( dist );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_vec3_0 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst localpos = vec2( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ) ).toVar();\n\tconst sqdist = vec3( 1e6, 1e6, 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, X, Y, jitter, metric ) ).toVar();\n\n\t\t\tIf( dist.lessThan( sqdist.x ), () => {\n\n\t\t\t\tsqdist.z.assign( sqdist.y );\n\t\t\t\tsqdist.y.assign( sqdist.x );\n\t\t\t\tsqdist.x.assign( dist );\n\n\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\n\n\t\t\t\tsqdist.z.assign( sqdist.y );\n\t\t\t\tsqdist.y.assign( dist );\n\n\t\t\t} ).elseif( dist.lessThan( sqdist.z ), () => {\n\n\t\t\t\tsqdist.z.assign( dist );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_float_1 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst localpos = vec3( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ), mx_floorfrac( p.z, Z ) ).toVar();\n\tconst sqdist = float( 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tloop( { start: - 1, end: int( 1 ), name: 'z', condition: '<=' }, ( { z } ) => {\n\n\t\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, z, X, Y, Z, jitter, metric ) ).toVar();\n\t\t\t\tsqdist.assign( min( sqdist, dist ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_float = overloadingFn( [ mx_worley_noise_float_0, mx_worley_noise_float_1 ] );\n\nconst mx_worley_noise_vec2_1 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst localpos = vec3( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ), mx_floorfrac( p.z, Z ) ).toVar();\n\tconst sqdist = vec2( 1e6, 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tloop( { start: - 1, end: int( 1 ), name: 'z', condition: '<=' }, ( { z } ) => {\n\n\t\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, z, X, Y, Z, jitter, metric ) ).toVar();\n\n\t\t\t\tIf( dist.lessThan( sqdist.x ), () => {\n\n\t\t\t\t\tsqdist.y.assign( sqdist.x );\n\t\t\t\t\tsqdist.x.assign( dist );\n\n\t\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\n\n\t\t\t\t\tsqdist.y.assign( dist );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_vec2 = overloadingFn( [ mx_worley_noise_vec2_0, mx_worley_noise_vec2_1 ] );\n\nconst mx_worley_noise_vec3_1 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst localpos = vec3( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ), mx_floorfrac( p.z, Z ) ).toVar();\n\tconst sqdist = vec3( 1e6, 1e6, 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tloop( { start: - 1, end: int( 1 ), name: 'z', condition: '<=' }, ( { z } ) => {\n\n\t\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, z, X, Y, Z, jitter, metric ) ).toVar();\n\n\t\t\t\tIf( dist.lessThan( sqdist.x ), () => {\n\n\t\t\t\t\tsqdist.z.assign( sqdist.y );\n\t\t\t\t\tsqdist.y.assign( sqdist.x );\n\t\t\t\t\tsqdist.x.assign( dist );\n\n\t\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\n\n\t\t\t\t\tsqdist.z.assign( sqdist.y );\n\t\t\t\t\tsqdist.y.assign( dist );\n\n\t\t\t\t} ).elseif( dist.lessThan( sqdist.z ), () => {\n\n\t\t\t\t\tsqdist.z.assign( dist );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_vec3 = overloadingFn( [ mx_worley_noise_vec3_0, mx_worley_noise_vec3_1 ] );\n\n// layouts\n\nmx_select.setLayout( {\n\tname: 'mx_select',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'b', type: 'bool' },\n\t\t{ name: 't', type: 'float' },\n\t\t{ name: 'f', type: 'float' }\n\t]\n} );\n\nmx_negate_if.setLayout( {\n\tname: 'mx_negate_if',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'val', type: 'float' },\n\t\t{ name: 'b', type: 'bool' }\n\t]\n} );\n\nmx_floor.setLayout( {\n\tname: 'mx_floor',\n\ttype: 'int',\n\tinputs: [\n\t\t{ name: 'x', type: 'float' }\n\t]\n} );\n\nmx_bilerp_0.setLayout( {\n\tname: 'mx_bilerp_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'v0', type: 'float' },\n\t\t{ name: 'v1', type: 'float' },\n\t\t{ name: 'v2', type: 'float' },\n\t\t{ name: 'v3', type: 'float' },\n\t\t{ name: 's', type: 'float' },\n\t\t{ name: 't', type: 'float' }\n\t]\n} );\n\nmx_bilerp_1.setLayout( {\n\tname: 'mx_bilerp_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'v0', type: 'vec3' },\n\t\t{ name: 'v1', type: 'vec3' },\n\t\t{ name: 'v2', type: 'vec3' },\n\t\t{ name: 'v3', type: 'vec3' },\n\t\t{ name: 's', type: 'float' },\n\t\t{ name: 't', type: 'float' }\n\t]\n} );\n\nmx_trilerp_0.setLayout( {\n\tname: 'mx_trilerp_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'v0', type: 'float' },\n\t\t{ name: 'v1', type: 'float' },\n\t\t{ name: 'v2', type: 'float' },\n\t\t{ name: 'v3', type: 'float' },\n\t\t{ name: 'v4', type: 'float' },\n\t\t{ name: 'v5', type: 'float' },\n\t\t{ name: 'v6', type: 'float' },\n\t\t{ name: 'v7', type: 'float' },\n\t\t{ name: 's', type: 'float' },\n\t\t{ name: 't', type: 'float' },\n\t\t{ name: 'r', type: 'float' }\n\t]\n} );\n\nmx_trilerp_1.setLayout( {\n\tname: 'mx_trilerp_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'v0', type: 'vec3' },\n\t\t{ name: 'v1', type: 'vec3' },\n\t\t{ name: 'v2', type: 'vec3' },\n\t\t{ name: 'v3', type: 'vec3' },\n\t\t{ name: 'v4', type: 'vec3' },\n\t\t{ name: 'v5', type: 'vec3' },\n\t\t{ name: 'v6', type: 'vec3' },\n\t\t{ name: 'v7', type: 'vec3' },\n\t\t{ name: 's', type: 'float' },\n\t\t{ name: 't', type: 'float' },\n\t\t{ name: 'r', type: 'float' }\n\t]\n} );\n\nmx_gradient_float_0.setLayout( {\n\tname: 'mx_gradient_float_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'hash', type: 'uint' },\n\t\t{ name: 'x', type: 'float' },\n\t\t{ name: 'y', type: 'float' }\n\t]\n} );\n\nmx_gradient_float_1.setLayout( {\n\tname: 'mx_gradient_float_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'hash', type: 'uint' },\n\t\t{ name: 'x', type: 'float' },\n\t\t{ name: 'y', type: 'float' },\n\t\t{ name: 'z', type: 'float' }\n\t]\n} );\n\nmx_gradient_vec3_0.setLayout( {\n\tname: 'mx_gradient_vec3_0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'hash', type: 'uvec3' },\n\t\t{ name: 'x', type: 'float' },\n\t\t{ name: 'y', type: 'float' }\n\t]\n} );\n\nmx_gradient_vec3_1.setLayout( {\n\tname: 'mx_gradient_vec3_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'hash', type: 'uvec3' },\n\t\t{ name: 'x', type: 'float' },\n\t\t{ name: 'y', type: 'float' },\n\t\t{ name: 'z', type: 'float' }\n\t]\n} );\n\nmx_gradient_scale2d_0.setLayout( {\n\tname: 'mx_gradient_scale2d_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'v', type: 'float' }\n\t]\n} );\n\nmx_gradient_scale3d_0.setLayout( {\n\tname: 'mx_gradient_scale3d_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'v', type: 'float' }\n\t]\n} );\n\nmx_gradient_scale2d_1.setLayout( {\n\tname: 'mx_gradient_scale2d_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'v', type: 'vec3' }\n\t]\n} );\n\nmx_gradient_scale3d_1.setLayout( {\n\tname: 'mx_gradient_scale3d_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'v', type: 'vec3' }\n\t]\n} );\n\nmx_rotl32.setLayout( {\n\tname: 'mx_rotl32',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'uint' },\n\t\t{ name: 'k', type: 'int' }\n\t]\n} );\n\nmx_bjfinal.setLayout( {\n\tname: 'mx_bjfinal',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'a', type: 'uint' },\n\t\t{ name: 'b', type: 'uint' },\n\t\t{ name: 'c', type: 'uint' }\n\t]\n} );\n\nmx_bits_to_01.setLayout( {\n\tname: 'mx_bits_to_01',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'bits', type: 'uint' }\n\t]\n} );\n\nmx_fade.setLayout( {\n\tname: 'mx_fade',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 't', type: 'float' }\n\t]\n} );\n\nmx_hash_int_0.setLayout( {\n\tname: 'mx_hash_int_0',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' }\n\t]\n} );\n\nmx_hash_int_1.setLayout( {\n\tname: 'mx_hash_int_1',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' }\n\t]\n} );\n\nmx_hash_int_2.setLayout( {\n\tname: 'mx_hash_int_2',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' }\n\t]\n} );\n\nmx_hash_int_3.setLayout( {\n\tname: 'mx_hash_int_3',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' },\n\t\t{ name: 'xx', type: 'int' }\n\t]\n} );\n\nmx_hash_int_4.setLayout( {\n\tname: 'mx_hash_int_4',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' },\n\t\t{ name: 'xx', type: 'int' },\n\t\t{ name: 'yy', type: 'int' }\n\t]\n} );\n\nmx_hash_vec3_0.setLayout( {\n\tname: 'mx_hash_vec3_0',\n\ttype: 'uvec3',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' }\n\t]\n} );\n\nmx_hash_vec3_1.setLayout( {\n\tname: 'mx_hash_vec3_1',\n\ttype: 'uvec3',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' }\n\t]\n} );\n\nmx_perlin_noise_float_0.setLayout( {\n\tname: 'mx_perlin_noise_float_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' }\n\t]\n} );\n\nmx_perlin_noise_float_1.setLayout( {\n\tname: 'mx_perlin_noise_float_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\nmx_perlin_noise_vec3_0.setLayout( {\n\tname: 'mx_perlin_noise_vec3_0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' }\n\t]\n} );\n\nmx_perlin_noise_vec3_1.setLayout( {\n\tname: 'mx_perlin_noise_vec3_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\nmx_cell_noise_float_0.setLayout( {\n\tname: 'mx_cell_noise_float_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'float' }\n\t]\n} );\n\nmx_cell_noise_float_1.setLayout( {\n\tname: 'mx_cell_noise_float_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' }\n\t]\n} );\n\nmx_cell_noise_float_2.setLayout( {\n\tname: 'mx_cell_noise_float_2',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\nmx_cell_noise_float_3.setLayout( {\n\tname: 'mx_cell_noise_float_3',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec4' }\n\t]\n} );\n\nmx_cell_noise_vec3_0.setLayout( {\n\tname: 'mx_cell_noise_vec3_0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'float' }\n\t]\n} );\n\nmx_cell_noise_vec3_1.setLayout( {\n\tname: 'mx_cell_noise_vec3_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' }\n\t]\n} );\n\nmx_cell_noise_vec3_2.setLayout( {\n\tname: 'mx_cell_noise_vec3_2',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\nmx_cell_noise_vec3_3.setLayout( {\n\tname: 'mx_cell_noise_vec3_3',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec4' }\n\t]\n} );\n\nmx_fractal_noise_float.setLayout( {\n\tname: 'mx_fractal_noise_float',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'octaves', type: 'int' },\n\t\t{ name: 'lacunarity', type: 'float' },\n\t\t{ name: 'diminish', type: 'float' }\n\t]\n} );\n\nmx_fractal_noise_vec3.setLayout( {\n\tname: 'mx_fractal_noise_vec3',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'octaves', type: 'int' },\n\t\t{ name: 'lacunarity', type: 'float' },\n\t\t{ name: 'diminish', type: 'float' }\n\t]\n} );\n\nmx_fractal_noise_vec2.setLayout( {\n\tname: 'mx_fractal_noise_vec2',\n\ttype: 'vec2',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'octaves', type: 'int' },\n\t\t{ name: 'lacunarity', type: 'float' },\n\t\t{ name: 'diminish', type: 'float' }\n\t]\n} );\n\nmx_fractal_noise_vec4.setLayout( {\n\tname: 'mx_fractal_noise_vec4',\n\ttype: 'vec4',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'octaves', type: 'int' },\n\t\t{ name: 'lacunarity', type: 'float' },\n\t\t{ name: 'diminish', type: 'float' }\n\t]\n} );\n\nmx_worley_distance_0.setLayout( {\n\tname: 'mx_worley_distance_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' },\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'xoff', type: 'int' },\n\t\t{ name: 'yoff', type: 'int' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_distance_1.setLayout( {\n\tname: 'mx_worley_distance_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' },\n\t\t{ name: 'xoff', type: 'int' },\n\t\t{ name: 'yoff', type: 'int' },\n\t\t{ name: 'zoff', type: 'int' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_float_0.setLayout( {\n\tname: 'mx_worley_noise_float_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_vec2_0.setLayout( {\n\tname: 'mx_worley_noise_vec2_0',\n\ttype: 'vec2',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_vec3_0.setLayout( {\n\tname: 'mx_worley_noise_vec3_0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_float_1.setLayout( {\n\tname: 'mx_worley_noise_float_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_vec2_1.setLayout( {\n\tname: 'mx_worley_noise_vec2_1',\n\ttype: 'vec2',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_vec3_1.setLayout( {\n\tname: 'mx_worley_noise_vec3_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nexport { mx_select, mx_negate_if, mx_floor, mx_floorfrac, mx_bilerp, mx_trilerp, mx_gradient_float, mx_gradient_vec3, mx_gradient_scale2d, mx_gradient_scale3d, mx_rotl32, mx_bjmix, mx_bjfinal, mx_bits_to_01, mx_fade, mx_hash_int, mx_hash_vec3, mx_perlin_noise_float, mx_perlin_noise_vec3, mx_cell_noise_float, mx_cell_noise_vec3, mx_fractal_noise_float, mx_fractal_noise_vec3, mx_fractal_noise_vec2, mx_fractal_noise_vec4, mx_worley_distance, mx_worley_noise_float, mx_worley_noise_vec2, mx_worley_noise_vec3 };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}