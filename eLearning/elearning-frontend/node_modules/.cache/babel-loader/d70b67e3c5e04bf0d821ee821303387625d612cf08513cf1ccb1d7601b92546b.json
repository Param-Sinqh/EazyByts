{"ast":null,"code":"import { BufferGeometry, Float32BufferAttribute, Mesh, OrthographicCamera } from 'three';\n\n// Helper for passes that need to fill the viewport with a single quad.\n\nconst _camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\n\n// https://github.com/mrdoob/three.js/pull/21358\n\nclass QuadGeometry extends BufferGeometry {\n  constructor(flipY = false) {\n    super();\n    const uv = flipY === false ? [0, -1, 0, 1, 2, 1] : [0, 2, 0, 0, 2, 0];\n    this.setAttribute('position', new Float32BufferAttribute([-1, 3, 0, -1, -1, 0, 3, -1, 0], 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uv, 2));\n  }\n}\nconst _geometry = new QuadGeometry();\nclass QuadMesh extends Mesh {\n  constructor(material = null) {\n    super(_geometry, material);\n    this.camera = _camera;\n  }\n  renderAsync(renderer) {\n    return renderer.renderAsync(this, _camera);\n  }\n  render(renderer) {\n    renderer.render(this, _camera);\n  }\n}\nexport default QuadMesh;","map":{"version":3,"names":["BufferGeometry","Float32BufferAttribute","Mesh","OrthographicCamera","_camera","QuadGeometry","constructor","flipY","uv","setAttribute","_geometry","QuadMesh","material","camera","renderAsync","renderer","render"],"sources":["D:/dumps/online-learning-platform-main/Frontend/node_modules/three/examples/jsm/objects/QuadMesh.js"],"sourcesContent":["import { BufferGeometry, Float32BufferAttribute, Mesh, OrthographicCamera } from 'three';\n\n// Helper for passes that need to fill the viewport with a single quad.\n\nconst _camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n// https://github.com/mrdoob/three.js/pull/21358\n\nclass QuadGeometry extends BufferGeometry {\n\n\tconstructor( flipY = false ) {\n\n\t\tsuper();\n\n\t\tconst uv = flipY === false ? [ 0, - 1, 0, 1, 2, 1 ] : [ 0, 2, 0, 0, 2, 0 ];\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( [ - 1, 3, 0, - 1, - 1, 0, 3, - 1, 0 ], 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uv, 2 ) );\n\n\t}\n\n}\n\nconst _geometry = new QuadGeometry();\n\nclass QuadMesh extends Mesh {\n\n\tconstructor( material = null ) {\n\n\t\tsuper( _geometry, material );\n\n\t\tthis.camera = _camera;\n\n\t}\n\n\trenderAsync( renderer ) {\n\n\t\treturn renderer.renderAsync( this, _camera );\n\n\t}\n\n\trender( renderer ) {\n\n\t\trenderer.render( this, _camera );\n\n\t}\n\n}\n\nexport default QuadMesh;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,sBAAsB,EAAEC,IAAI,EAAEC,kBAAkB,QAAQ,OAAO;;AAExF;;AAEA,MAAMC,OAAO,GAAG,IAAID,kBAAkB,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;;AAE9D;;AAEA,MAAME,YAAY,SAASL,cAAc,CAAC;EAEzCM,WAAWA,CAAEC,KAAK,GAAG,KAAK,EAAG;IAE5B,KAAK,CAAC,CAAC;IAEP,MAAMC,EAAE,GAAGD,KAAK,KAAK,KAAK,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IAE1E,IAAI,CAACE,YAAY,CAAE,UAAU,EAAE,IAAIR,sBAAsB,CAAE,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,EAAE,CAAE,CAAE,CAAC;IACvG,IAAI,CAACQ,YAAY,CAAE,IAAI,EAAE,IAAIR,sBAAsB,CAAEO,EAAE,EAAE,CAAE,CAAE,CAAC;EAE/D;AAED;AAEA,MAAME,SAAS,GAAG,IAAIL,YAAY,CAAC,CAAC;AAEpC,MAAMM,QAAQ,SAAST,IAAI,CAAC;EAE3BI,WAAWA,CAAEM,QAAQ,GAAG,IAAI,EAAG;IAE9B,KAAK,CAAEF,SAAS,EAAEE,QAAS,CAAC;IAE5B,IAAI,CAACC,MAAM,GAAGT,OAAO;EAEtB;EAEAU,WAAWA,CAAEC,QAAQ,EAAG;IAEvB,OAAOA,QAAQ,CAACD,WAAW,CAAE,IAAI,EAAEV,OAAQ,CAAC;EAE7C;EAEAY,MAAMA,CAAED,QAAQ,EAAG;IAElBA,QAAQ,CAACC,MAAM,CAAE,IAAI,EAAEZ,OAAQ,CAAC;EAEjC;AAED;AAEA,eAAeO,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}