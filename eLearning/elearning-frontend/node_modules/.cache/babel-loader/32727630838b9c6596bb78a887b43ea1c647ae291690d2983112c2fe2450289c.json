{"ast":null,"code":"import { addNodeClass } from '../core/Node.js';\nimport TextureNode from './TextureNode.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\nimport { GPUStorageTextureAccess } from '../../renderers/webgpu/utils/WebGPUConstants.js';\nclass StorageTextureNode extends TextureNode {\n  constructor(value, uvNode, storeNode = null) {\n    super(value, uvNode);\n    this.storeNode = storeNode;\n    this.isStorageTextureNode = true;\n    this.access = GPUStorageTextureAccess.WriteOnly;\n  }\n  getInputType( /*builder*/\n  ) {\n    return 'storageTexture';\n  }\n  setup(builder) {\n    super.setup(builder);\n    const properties = builder.getNodeProperties(this);\n    properties.storeNode = this.storeNode;\n  }\n  setAccess(value) {\n    this.access = value;\n    return this;\n  }\n  generate(builder, output) {\n    let snippet;\n    if (this.storeNode !== null) {\n      snippet = this.generateStore(builder);\n    } else {\n      snippet = super.generate(builder, output);\n    }\n    return snippet;\n  }\n  generateStore(builder) {\n    const properties = builder.getNodeProperties(this);\n    const {\n      uvNode,\n      storeNode\n    } = properties;\n    const textureProperty = super.generate(builder, 'property');\n    const uvSnippet = uvNode.build(builder, 'uvec2');\n    const storeSnippet = storeNode.build(builder, 'vec4');\n    const snippet = builder.generateTextureStore(builder, textureProperty, uvSnippet, storeSnippet);\n    builder.addLineFlowCode(snippet);\n  }\n}\nexport default StorageTextureNode;\nexport const storageTexture = nodeProxy(StorageTextureNode);\nexport const storageTextureReadOnly = (value, uvNode, storeNode) => storageTexture(value, uvNode, storeNode).setAccess('read-only');\nexport const storageTextureReadWrite = (value, uvNode, storeNode) => storageTexture(value, uvNode, storeNode).setAccess('read-write');\nexport const textureStore = (value, uvNode, storeNode) => {\n  const node = storageTexture(value, uvNode, storeNode);\n  if (storeNode !== null) node.append();\n  return node;\n};\naddNodeClass('StorageTextureNode', StorageTextureNode);","map":{"version":3,"names":["addNodeClass","TextureNode","nodeProxy","GPUStorageTextureAccess","StorageTextureNode","constructor","value","uvNode","storeNode","isStorageTextureNode","access","WriteOnly","getInputType","setup","builder","properties","getNodeProperties","setAccess","generate","output","snippet","generateStore","textureProperty","uvSnippet","build","storeSnippet","generateTextureStore","addLineFlowCode","storageTexture","storageTextureReadOnly","storageTextureReadWrite","textureStore","node","append"],"sources":["D:/dumps/online-learning-platform-main/Frontend/node_modules/three/examples/jsm/nodes/accessors/StorageTextureNode.js"],"sourcesContent":["import { addNodeClass } from '../core/Node.js';\nimport TextureNode from './TextureNode.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\nimport { GPUStorageTextureAccess } from '../../renderers/webgpu/utils/WebGPUConstants.js';\n\nclass StorageTextureNode extends TextureNode {\n\n\tconstructor( value, uvNode, storeNode = null ) {\n\n\t\tsuper( value, uvNode );\n\n\t\tthis.storeNode = storeNode;\n\n\t\tthis.isStorageTextureNode = true;\n\n\t\tthis.access = GPUStorageTextureAccess.WriteOnly;\n\n\t}\n\n\tgetInputType( /*builder*/ ) {\n\n\t\treturn 'storageTexture';\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tsuper.setup( builder );\n\n\t\tconst properties = builder.getNodeProperties( this );\n\t\tproperties.storeNode = this.storeNode;\n\n\t}\n\n\tsetAccess( value ) {\n\n\t\tthis.access = value;\n\t\treturn this;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tlet snippet;\n\n\t\tif ( this.storeNode !== null ) {\n\n\t\t\tsnippet = this.generateStore( builder );\n\n\t\t} else {\n\n\t\t\tsnippet = super.generate( builder, output );\n\n\t\t}\n\n\t\treturn snippet;\n\n\t}\n\n\tgenerateStore( builder ) {\n\n\t\tconst properties = builder.getNodeProperties( this );\n\n\t\tconst { uvNode, storeNode } = properties;\n\n\t\tconst textureProperty = super.generate( builder, 'property' );\n\t\tconst uvSnippet = uvNode.build( builder, 'uvec2' );\n\t\tconst storeSnippet = storeNode.build( builder, 'vec4' );\n\n\t\tconst snippet = builder.generateTextureStore( builder, textureProperty, uvSnippet, storeSnippet );\n\n\t\tbuilder.addLineFlowCode( snippet );\n\n\t}\n\n}\n\nexport default StorageTextureNode;\n\nexport const storageTexture = nodeProxy( StorageTextureNode );\n\nexport const storageTextureReadOnly = ( value, uvNode, storeNode ) => storageTexture( value, uvNode, storeNode ).setAccess( 'read-only' );\nexport const storageTextureReadWrite = ( value, uvNode, storeNode ) => storageTexture( value, uvNode, storeNode ).setAccess( 'read-write' );\n\nexport const textureStore = ( value, uvNode, storeNode ) => {\n\n\tconst node = storageTexture( value, uvNode, storeNode );\n\n\tif ( storeNode !== null ) node.append();\n\n\treturn node;\n\n};\n\naddNodeClass( 'StorageTextureNode', StorageTextureNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}