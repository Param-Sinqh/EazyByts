{"ast":null,"code":"import Node, { addNodeClass } from '../core/Node.js';\nimport { normalLocal } from './NormalNode.js';\nimport { positionLocal } from './PositionNode.js';\nimport { nodeProxy, vec3, mat3, mat4, int, ivec2, float } from '../shadernode/ShaderNode.js';\nimport { textureLoad } from './TextureNode.js';\nimport { textureSize } from './TextureSizeNode.js';\nimport { attribute } from '../core/AttributeNode.js';\nimport { tangentLocal } from './TangentNode.js';\nclass BatchNode extends Node {\n  constructor(batchMesh) {\n    super('void');\n    this.batchMesh = batchMesh;\n    this.instanceColorNode = null;\n    this.batchingIdNode = null;\n  }\n  setup(builder) {\n    // POSITION\n\n    if (this.batchingIdNode === null) {\n      this.batchingIdNode = attribute('batchId');\n    }\n    const matriceTexture = this.batchMesh._matricesTexture;\n    const size = textureSize(textureLoad(matriceTexture), 0);\n    const j = float(int(this.batchingIdNode)).mul(4).toVar();\n    const x = int(j.mod(size));\n    const y = int(j).div(int(size));\n    const batchingMatrix = mat4(textureLoad(matriceTexture, ivec2(x, y)), textureLoad(matriceTexture, ivec2(x.add(1), y)), textureLoad(matriceTexture, ivec2(x.add(2), y)), textureLoad(matriceTexture, ivec2(x.add(3), y)));\n    const bm = mat3(batchingMatrix[0].xyz, batchingMatrix[1].xyz, batchingMatrix[2].xyz);\n    positionLocal.assign(batchingMatrix.mul(positionLocal));\n    const transformedNormal = normalLocal.div(vec3(bm[0].dot(bm[0]), bm[1].dot(bm[1]), bm[2].dot(bm[2])));\n    const batchingNormal = bm.mul(transformedNormal).xyz;\n    normalLocal.assign(batchingNormal);\n    if (builder.hasGeometryAttribute('tangent')) {\n      tangentLocal.mulAssign(bm);\n    }\n  }\n}\nexport default BatchNode;\nexport const batch = nodeProxy(BatchNode);\naddNodeClass('batch', BatchNode);","map":{"version":3,"names":["Node","addNodeClass","normalLocal","positionLocal","nodeProxy","vec3","mat3","mat4","int","ivec2","float","textureLoad","textureSize","attribute","tangentLocal","BatchNode","constructor","batchMesh","instanceColorNode","batchingIdNode","setup","builder","matriceTexture","_matricesTexture","size","j","mul","toVar","x","mod","y","div","batchingMatrix","add","bm","xyz","assign","transformedNormal","dot","batchingNormal","hasGeometryAttribute","mulAssign","batch"],"sources":["D:/dumps/online-learning-platform-main/Frontend/node_modules/three/examples/jsm/nodes/accessors/BatchNode.js"],"sourcesContent":["import Node, { addNodeClass } from '../core/Node.js';\nimport { normalLocal } from './NormalNode.js';\nimport { positionLocal } from './PositionNode.js';\nimport { nodeProxy, vec3, mat3, mat4, int, ivec2, float } from '../shadernode/ShaderNode.js';\nimport { textureLoad } from './TextureNode.js';\nimport { textureSize } from './TextureSizeNode.js';\nimport { attribute } from '../core/AttributeNode.js';\nimport { tangentLocal } from './TangentNode.js';\n\nclass BatchNode extends Node {\n\n\tconstructor( batchMesh ) {\n\n\t\tsuper( 'void' );\n\n\t\tthis.batchMesh = batchMesh;\n\n\n\t\tthis.instanceColorNode = null;\n\n\t\tthis.batchingIdNode = null;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\t// POSITION\n\n\t\tif ( this.batchingIdNode === null ) {\n\n\t\t\tthis.batchingIdNode = attribute( 'batchId' );\n\n\t\t}\n\n\t\tconst matriceTexture = this.batchMesh._matricesTexture;\n\n\t\tconst size = textureSize( textureLoad( matriceTexture ), 0 );\n\t\tconst j = float( int( this.batchingIdNode ) ).mul( 4 ).toVar();\n\n\t\tconst x = int( j.mod( size ) );\n\t\tconst y = int( j ).div( int( size ) );\n\t\tconst batchingMatrix = mat4(\n\t\t\ttextureLoad( matriceTexture, ivec2( x, y ) ),\n\t\t\ttextureLoad( matriceTexture, ivec2( x.add( 1 ), y ) ),\n\t\t\ttextureLoad( matriceTexture, ivec2( x.add( 2 ), y ) ),\n\t\t\ttextureLoad( matriceTexture, ivec2( x.add( 3 ), y ) )\n\t\t);\n\n\n\t\tconst bm = mat3(\n\t\t\tbatchingMatrix[ 0 ].xyz,\n\t\t\tbatchingMatrix[ 1 ].xyz,\n\t\t\tbatchingMatrix[ 2 ].xyz\n\t\t );\n\n\t\tpositionLocal.assign( batchingMatrix.mul( positionLocal ) );\n\n\t\tconst transformedNormal = normalLocal.div( vec3( bm[ 0 ].dot( bm[ 0 ] ), bm[ 1 ].dot( bm[ 1 ] ), bm[ 2 ].dot( bm[ 2 ] ) ) );\n\n\t\tconst batchingNormal = bm.mul( transformedNormal ).xyz;\n\n\t\tnormalLocal.assign( batchingNormal );\n\n\t\tif ( builder.hasGeometryAttribute( 'tangent' ) ) {\n\n\t\t\ttangentLocal.mulAssign( bm );\n\n\t\t}\n\n\t}\n\n}\n\nexport default BatchNode;\n\nexport const batch = nodeProxy( BatchNode );\n\naddNodeClass( 'batch', BatchNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}