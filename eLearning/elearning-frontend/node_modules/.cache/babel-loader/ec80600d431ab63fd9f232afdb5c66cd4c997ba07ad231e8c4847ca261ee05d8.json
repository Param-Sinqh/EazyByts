{"ast":null,"code":"import Node, { addNodeClass } from './Node.js';\nimport { NodeShaderStage } from './constants.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\nclass VaryingNode extends Node {\n  constructor(node, name = null) {\n    super();\n    this.node = node;\n    this.name = name;\n    this.isVaryingNode = true;\n  }\n  isGlobal() {\n    return true;\n  }\n  getHash(builder) {\n    return this.name || super.getHash(builder);\n  }\n  getNodeType(builder) {\n    // VaryingNode is auto type\n\n    return this.node.getNodeType(builder);\n  }\n  setupVarying(builder) {\n    const properties = builder.getNodeProperties(this);\n    let varying = properties.varying;\n    if (varying === undefined) {\n      const name = this.name;\n      const type = this.getNodeType(builder);\n      properties.varying = varying = builder.getVaryingFromNode(this, name, type);\n      properties.node = this.node;\n    }\n\n    // this property can be used to check if the varying can be optimized for a variable\n    varying.needsInterpolation || (varying.needsInterpolation = builder.shaderStage === 'fragment');\n    return varying;\n  }\n  setup(builder) {\n    this.setupVarying(builder);\n  }\n  generate(builder) {\n    const properties = builder.getNodeProperties(this);\n    const varying = this.setupVarying(builder);\n    if (properties.propertyName === undefined) {\n      const type = this.getNodeType(builder);\n      const propertyName = builder.getPropertyName(varying, NodeShaderStage.VERTEX);\n\n      // force node run in vertex stage\n      builder.flowNodeFromShaderStage(NodeShaderStage.VERTEX, this.node, type, propertyName);\n      properties.propertyName = propertyName;\n    }\n    return builder.getPropertyName(varying);\n  }\n}\nexport default VaryingNode;\nexport const varying = nodeProxy(VaryingNode);\naddNodeElement('varying', varying);\naddNodeClass('VaryingNode', VaryingNode);","map":{"version":3,"names":["Node","addNodeClass","NodeShaderStage","addNodeElement","nodeProxy","VaryingNode","constructor","node","name","isVaryingNode","isGlobal","getHash","builder","getNodeType","setupVarying","properties","getNodeProperties","varying","undefined","type","getVaryingFromNode","needsInterpolation","shaderStage","setup","generate","propertyName","getPropertyName","VERTEX","flowNodeFromShaderStage"],"sources":["D:/dumps/online-learning-platform-main/Frontend/node_modules/three/examples/jsm/nodes/core/VaryingNode.js"],"sourcesContent":["import Node, { addNodeClass } from './Node.js';\nimport { NodeShaderStage } from './constants.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass VaryingNode extends Node {\n\n\tconstructor( node, name = null ) {\n\n\t\tsuper();\n\n\t\tthis.node = node;\n\t\tthis.name = name;\n\n\t\tthis.isVaryingNode = true;\n\n\t}\n\n\tisGlobal() {\n\n\t\treturn true;\n\n\t}\n\n\tgetHash( builder ) {\n\n\t\treturn this.name || super.getHash( builder );\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\t// VaryingNode is auto type\n\n\t\treturn this.node.getNodeType( builder );\n\n\t}\n\n\tsetupVarying( builder ) {\n\n\t\tconst properties = builder.getNodeProperties( this );\n\n\t\tlet varying = properties.varying;\n\n\t\tif ( varying === undefined ) {\n\n\t\t\tconst name = this.name;\n\t\t\tconst type = this.getNodeType( builder );\n\n\t\t\tproperties.varying = varying = builder.getVaryingFromNode( this, name, type );\n\t\t\tproperties.node = this.node;\n\n\t\t}\n\n\t\t// this property can be used to check if the varying can be optimized for a variable\n\t\tvarying.needsInterpolation || ( varying.needsInterpolation = ( builder.shaderStage === 'fragment' ) );\n\n\t\treturn varying;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tthis.setupVarying( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst properties = builder.getNodeProperties( this );\n\t\tconst varying = this.setupVarying( builder );\n\n\t\tif ( properties.propertyName === undefined ) {\n\n\t\t\tconst type = this.getNodeType( builder );\n\t\t\tconst propertyName = builder.getPropertyName( varying, NodeShaderStage.VERTEX );\n\n\t\t\t// force node run in vertex stage\n\t\t\tbuilder.flowNodeFromShaderStage( NodeShaderStage.VERTEX, this.node, type, propertyName );\n\n\t\t\tproperties.propertyName = propertyName;\n\n\t\t}\n\n\t\treturn builder.getPropertyName( varying );\n\n\t}\n\n}\n\nexport default VaryingNode;\n\nexport const varying = nodeProxy( VaryingNode );\n\naddNodeElement( 'varying', varying );\n\naddNodeClass( 'VaryingNode', VaryingNode );\n"],"mappings":"AAAA,OAAOA,IAAI,IAAIC,YAAY,QAAQ,WAAW;AAC9C,SAASC,eAAe,QAAQ,gBAAgB;AAChD,SAASC,cAAc,EAAEC,SAAS,QAAQ,6BAA6B;AAEvE,MAAMC,WAAW,SAASL,IAAI,CAAC;EAE9BM,WAAWA,CAAEC,IAAI,EAAEC,IAAI,GAAG,IAAI,EAAG;IAEhC,KAAK,CAAC,CAAC;IAEP,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAEhB,IAAI,CAACC,aAAa,GAAG,IAAI;EAE1B;EAEAC,QAAQA,CAAA,EAAG;IAEV,OAAO,IAAI;EAEZ;EAEAC,OAAOA,CAAEC,OAAO,EAAG;IAElB,OAAO,IAAI,CAACJ,IAAI,IAAI,KAAK,CAACG,OAAO,CAAEC,OAAQ,CAAC;EAE7C;EAEAC,WAAWA,CAAED,OAAO,EAAG;IAEtB;;IAEA,OAAO,IAAI,CAACL,IAAI,CAACM,WAAW,CAAED,OAAQ,CAAC;EAExC;EAEAE,YAAYA,CAAEF,OAAO,EAAG;IAEvB,MAAMG,UAAU,GAAGH,OAAO,CAACI,iBAAiB,CAAE,IAAK,CAAC;IAEpD,IAAIC,OAAO,GAAGF,UAAU,CAACE,OAAO;IAEhC,IAAKA,OAAO,KAAKC,SAAS,EAAG;MAE5B,MAAMV,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,MAAMW,IAAI,GAAG,IAAI,CAACN,WAAW,CAAED,OAAQ,CAAC;MAExCG,UAAU,CAACE,OAAO,GAAGA,OAAO,GAAGL,OAAO,CAACQ,kBAAkB,CAAE,IAAI,EAAEZ,IAAI,EAAEW,IAAK,CAAC;MAC7EJ,UAAU,CAACR,IAAI,GAAG,IAAI,CAACA,IAAI;IAE5B;;IAEA;IACAU,OAAO,CAACI,kBAAkB,KAAMJ,OAAO,CAACI,kBAAkB,GAAKT,OAAO,CAACU,WAAW,KAAK,UAAY,CAAE;IAErG,OAAOL,OAAO;EAEf;EAEAM,KAAKA,CAAEX,OAAO,EAAG;IAEhB,IAAI,CAACE,YAAY,CAAEF,OAAQ,CAAC;EAE7B;EAEAY,QAAQA,CAAEZ,OAAO,EAAG;IAEnB,MAAMG,UAAU,GAAGH,OAAO,CAACI,iBAAiB,CAAE,IAAK,CAAC;IACpD,MAAMC,OAAO,GAAG,IAAI,CAACH,YAAY,CAAEF,OAAQ,CAAC;IAE5C,IAAKG,UAAU,CAACU,YAAY,KAAKP,SAAS,EAAG;MAE5C,MAAMC,IAAI,GAAG,IAAI,CAACN,WAAW,CAAED,OAAQ,CAAC;MACxC,MAAMa,YAAY,GAAGb,OAAO,CAACc,eAAe,CAAET,OAAO,EAAEf,eAAe,CAACyB,MAAO,CAAC;;MAE/E;MACAf,OAAO,CAACgB,uBAAuB,CAAE1B,eAAe,CAACyB,MAAM,EAAE,IAAI,CAACpB,IAAI,EAAEY,IAAI,EAAEM,YAAa,CAAC;MAExFV,UAAU,CAACU,YAAY,GAAGA,YAAY;IAEvC;IAEA,OAAOb,OAAO,CAACc,eAAe,CAAET,OAAQ,CAAC;EAE1C;AAED;AAEA,eAAeZ,WAAW;AAE1B,OAAO,MAAMY,OAAO,GAAGb,SAAS,CAAEC,WAAY,CAAC;AAE/CF,cAAc,CAAE,SAAS,EAAEc,OAAQ,CAAC;AAEpChB,YAAY,CAAE,aAAa,EAAEI,WAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}