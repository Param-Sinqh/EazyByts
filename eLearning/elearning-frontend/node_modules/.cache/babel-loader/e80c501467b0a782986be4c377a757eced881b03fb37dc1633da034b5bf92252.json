{"ast":null,"code":"import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\nimport { varying } from '../core/VaryingNode.js';\nimport { property } from '../core/PropertyNode.js';\nimport { materialReference } from '../accessors/MaterialReferenceNode.js';\nimport { modelWorldMatrixInverse } from '../accessors/ModelNode.js';\nimport { cameraPosition } from '../accessors/CameraNode.js';\nimport { positionGeometry } from '../accessors/PositionNode.js';\nimport { tslFn, vec2, vec3, vec4 } from '../shadernode/ShaderNode.js';\nimport { min, max } from '../math/MathNode.js';\nimport { loop, Break } from '../utils/LoopNode.js';\nimport { texture3D } from '../accessors/Texture3DNode.js';\nclass VolumeNodeMaterial extends NodeMaterial {\n  constructor(params = {}) {\n    super();\n    this.normals = false;\n    this.lights = false;\n    this.isVolumeNodeMaterial = true;\n    this.testNode = null;\n    this.setValues(params);\n  }\n  setup(builder) {\n    const map = texture3D(this.map, null, 0);\n    const hitBox = tslFn(({\n      orig,\n      dir\n    }) => {\n      const box_min = vec3(-0.5);\n      const box_max = vec3(0.5);\n      const inv_dir = dir.reciprocal();\n      const tmin_tmp = box_min.sub(orig).mul(inv_dir);\n      const tmax_tmp = box_max.sub(orig).mul(inv_dir);\n      const tmin = min(tmin_tmp, tmax_tmp);\n      const tmax = max(tmin_tmp, tmax_tmp);\n      const t0 = max(tmin.x, max(tmin.y, tmin.z));\n      const t1 = min(tmax.x, min(tmax.y, tmax.z));\n      return vec2(t0, t1);\n    });\n    this.fragmentNode = tslFn(() => {\n      const vOrigin = varying(vec3(modelWorldMatrixInverse.mul(vec4(cameraPosition, 1.0))));\n      const vDirection = varying(positionGeometry.sub(vOrigin));\n      const rayDir = vDirection.normalize();\n      const bounds = property('vec2', 'bounds').assign(hitBox({\n        orig: vOrigin,\n        dir: rayDir\n      }));\n      bounds.x.greaterThan(bounds.y).discard();\n      bounds.assign(vec2(max(bounds.x, 0.0), bounds.y));\n      const p = property('vec3', 'p').assign(vOrigin.add(bounds.x.mul(rayDir)));\n      const inc = property('vec3', 'inc').assign(vec3(rayDir.abs().reciprocal()));\n      const delta = property('float', 'delta').assign(min(inc.x, min(inc.y, inc.z)));\n      delta.divAssign(materialReference('steps', 'float'));\n      const ac = property('vec4', 'ac').assign(vec4(materialReference('base', 'color'), 0.0));\n      loop({\n        type: 'float',\n        start: bounds.x,\n        end: bounds.y,\n        update: '+= delta'\n      }, () => {\n        const d = property('float', 'd').assign(map.uv(p.add(0.5)).r);\n        if (this.testNode !== null) {\n          this.testNode({\n            map: map,\n            mapValue: d,\n            probe: p,\n            finalColor: ac\n          }).append();\n        } else {\n          // default to show surface of mesh\n          ac.a.assign(1);\n          Break();\n        }\n        p.addAssign(rayDir.mul(delta));\n      });\n      ac.a.equal(0).discard();\n      return vec4(ac);\n    })();\n    super.setup(builder);\n  }\n}\nexport default VolumeNodeMaterial;\naddNodeMaterial('VolumeNodeMaterial', VolumeNodeMaterial);","map":{"version":3,"names":["NodeMaterial","addNodeMaterial","varying","property","materialReference","modelWorldMatrixInverse","cameraPosition","positionGeometry","tslFn","vec2","vec3","vec4","min","max","loop","Break","texture3D","VolumeNodeMaterial","constructor","params","normals","lights","isVolumeNodeMaterial","testNode","setValues","setup","builder","map","hitBox","orig","dir","box_min","box_max","inv_dir","reciprocal","tmin_tmp","sub","mul","tmax_tmp","tmin","tmax","t0","x","y","z","t1","fragmentNode","vOrigin","vDirection","rayDir","normalize","bounds","assign","greaterThan","discard","p","add","inc","abs","delta","divAssign","ac","type","start","end","update","d","uv","r","mapValue","probe","finalColor","append","a","addAssign","equal"],"sources":["D:/dumps/online-learning-platform-main/Frontend/node_modules/three/examples/jsm/nodes/materials/VolumeNodeMaterial.js"],"sourcesContent":["import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\nimport { varying } from '../core/VaryingNode.js';\nimport { property } from '../core/PropertyNode.js';\nimport { materialReference } from '../accessors/MaterialReferenceNode.js';\nimport { modelWorldMatrixInverse } from '../accessors/ModelNode.js';\nimport { cameraPosition } from '../accessors/CameraNode.js';\nimport { positionGeometry } from '../accessors/PositionNode.js';\nimport { tslFn, vec2, vec3, vec4 } from '../shadernode/ShaderNode.js';\nimport { min, max } from '../math/MathNode.js';\nimport { loop, Break } from '../utils/LoopNode.js';\nimport { texture3D } from '../accessors/Texture3DNode.js';\n\nclass VolumeNodeMaterial extends NodeMaterial {\n\n\tconstructor( params = {} ) {\n\n\t\tsuper();\n\n\t\tthis.normals = false;\n\t\tthis.lights = false;\n\t\tthis.isVolumeNodeMaterial = true;\n\t\tthis.testNode = null;\n\n\t\tthis.setValues( params );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst map = texture3D( this.map, null, 0 );\n\n\t\tconst hitBox = tslFn( ( { orig, dir } ) => {\n\n\t\t\tconst box_min = vec3( - 0.5 );\n\t\t\tconst box_max = vec3( 0.5 );\n\n\t\t\tconst inv_dir = dir.reciprocal();\n\n\t\t\tconst tmin_tmp = box_min.sub( orig ).mul( inv_dir );\n\t\t\tconst tmax_tmp = box_max.sub( orig ).mul( inv_dir );\n\n\t\t\tconst tmin = min( tmin_tmp, tmax_tmp );\n\t\t\tconst tmax = max( tmin_tmp, tmax_tmp );\n\n\t\t\tconst t0 = max( tmin.x, max( tmin.y, tmin.z ) );\n\t\t\tconst t1 = min( tmax.x, min( tmax.y, tmax.z ) );\n\n\t\t\treturn vec2( t0, t1 );\n\n\t\t} );\n\n\t\tthis.fragmentNode = tslFn( () => {\n\n\t\t\tconst vOrigin = varying( vec3( modelWorldMatrixInverse.mul( vec4( cameraPosition, 1.0 ) ) ) );\n\t\t\tconst vDirection = varying( positionGeometry.sub( vOrigin ) );\n\n\t\t\tconst rayDir = vDirection.normalize();\n\t\t\tconst bounds = property( 'vec2', 'bounds' ).assign( hitBox( { orig: vOrigin, dir: rayDir } ) );\n\n\t\t\tbounds.x.greaterThan( bounds.y ).discard();\n\n\t\t\tbounds.assign( vec2( max( bounds.x, 0.0 ), bounds.y ) );\n\n\t\t\tconst p = property( 'vec3', 'p' ).assign( vOrigin.add( bounds.x.mul( rayDir ) ) );\n\t\t\tconst inc = property( 'vec3', 'inc' ).assign( vec3( rayDir.abs().reciprocal() ) );\n\t\t\tconst delta = property( 'float', 'delta' ).assign( min( inc.x, min( inc.y, inc.z ) ) );\n\n\t\t\tdelta.divAssign( materialReference( 'steps', 'float' ) );\n\n\t\t\tconst ac = property( 'vec4', 'ac' ).assign( vec4( materialReference( 'base', 'color' ), 0.0 ) );\n\n\t\t\tloop( { type: 'float', start: bounds.x, end: bounds.y, update: '+= delta' }, () => {\n\n\t\t\t\tconst d = property( 'float', 'd' ).assign( map.uv( p.add( 0.5 ) ).r );\n\n\t\t\t\tif ( this.testNode !== null ) {\n\n\t\t\t\t\tthis.testNode( { map: map, mapValue: d, probe: p, finalColor: ac } ).append();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default to show surface of mesh\n\t\t\t\t\tac.a.assign( 1 );\n\t\t\t\t\tBreak();\n\n\t\t\t\t}\n\n\t\t\t\tp.addAssign( rayDir.mul( delta ) );\n\n\t\t\t} );\n\n\t\t\tac.a.equal( 0 ).discard();\n\n\t\t\treturn vec4( ac );\n\n\t\t} )();\n\n\t\tsuper.setup( builder );\n\n\t}\n\n}\n\nexport default VolumeNodeMaterial;\n\naddNodeMaterial( 'VolumeNodeMaterial', VolumeNodeMaterial );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}