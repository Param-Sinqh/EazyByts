{"ast":null,"code":"import Node from '../core/Node.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\nimport { positionView } from './PositionNode.js';\nimport { diffuseColor, property } from '../core/PropertyNode.js';\nimport { tslFn } from '../shadernode/ShaderNode.js';\nimport { loop } from '../utils/LoopNode.js';\nimport { smoothstep } from '../math/MathNode.js';\nimport { uniforms } from './UniformsNode.js';\nclass ClippingNode extends Node {\n  constructor(scope = ClippingNode.DEFAULT) {\n    super();\n    this.scope = scope;\n  }\n  setup(builder) {\n    super.setup(builder);\n    const clippingContext = builder.clippingContext;\n    const {\n      localClipIntersection,\n      localClippingCount,\n      globalClippingCount\n    } = clippingContext;\n    const numClippingPlanes = globalClippingCount + localClippingCount;\n    const numUnionClippingPlanes = localClipIntersection ? numClippingPlanes - localClippingCount : numClippingPlanes;\n    if (this.scope === ClippingNode.ALPHA_TO_COVERAGE) {\n      return this.setupAlphaToCoverage(clippingContext.planes, numClippingPlanes, numUnionClippingPlanes);\n    } else {\n      return this.setupDefault(clippingContext.planes, numClippingPlanes, numUnionClippingPlanes);\n    }\n  }\n  setupAlphaToCoverage(planes, numClippingPlanes, numUnionClippingPlanes) {\n    return tslFn(() => {\n      const clippingPlanes = uniforms(planes);\n      const distanceToPlane = property('float', 'distanceToPlane');\n      const distanceGradient = property('float', 'distanceToGradient');\n      const clipOpacity = property('float', 'clipOpacity');\n      clipOpacity.assign(1);\n      let plane;\n      loop(numUnionClippingPlanes, ({\n        i\n      }) => {\n        plane = clippingPlanes.element(i);\n        distanceToPlane.assign(positionView.dot(plane.xyz).negate().add(plane.w));\n        distanceGradient.assign(distanceToPlane.fwidth().div(2.0));\n        clipOpacity.mulAssign(smoothstep(distanceGradient.negate(), distanceGradient, distanceToPlane));\n        clipOpacity.equal(0.0).discard();\n      });\n      if (numUnionClippingPlanes < numClippingPlanes) {\n        const unionClipOpacity = property('float', 'unionclipOpacity');\n        unionClipOpacity.assign(1);\n        loop({\n          start: numUnionClippingPlanes,\n          end: numClippingPlanes\n        }, ({\n          i\n        }) => {\n          plane = clippingPlanes.element(i);\n          distanceToPlane.assign(positionView.dot(plane.xyz).negate().add(plane.w));\n          distanceGradient.assign(distanceToPlane.fwidth().div(2.0));\n          unionClipOpacity.mulAssign(smoothstep(distanceGradient.negate(), distanceGradient, distanceToPlane).oneMinus());\n        });\n        clipOpacity.mulAssign(unionClipOpacity.oneMinus());\n      }\n      diffuseColor.a.mulAssign(clipOpacity);\n      diffuseColor.a.equal(0.0).discard();\n    })();\n  }\n  setupDefault(planes, numClippingPlanes, numUnionClippingPlanes) {\n    return tslFn(() => {\n      const clippingPlanes = uniforms(planes);\n      let plane;\n      loop(numUnionClippingPlanes, ({\n        i\n      }) => {\n        plane = clippingPlanes.element(i);\n        positionView.dot(plane.xyz).greaterThan(plane.w).discard();\n      });\n      if (numUnionClippingPlanes < numClippingPlanes) {\n        const clipped = property('bool', 'clipped');\n        clipped.assign(true);\n        loop({\n          start: numUnionClippingPlanes,\n          end: numClippingPlanes\n        }, ({\n          i\n        }) => {\n          plane = clippingPlanes.element(i);\n          clipped.assign(positionView.dot(plane.xyz).greaterThan(plane.w).and(clipped));\n        });\n        clipped.discard();\n      }\n    })();\n  }\n}\nClippingNode.ALPHA_TO_COVERAGE = 'alphaToCoverage';\nClippingNode.DEFAULT = 'default';\nexport default ClippingNode;\nexport const clipping = () => nodeObject(new ClippingNode());\nexport const clippingAlpha = () => nodeObject(new ClippingNode(ClippingNode.ALPHA_TO_COVERAGE));","map":{"version":3,"names":["Node","nodeObject","positionView","diffuseColor","property","tslFn","loop","smoothstep","uniforms","ClippingNode","constructor","scope","DEFAULT","setup","builder","clippingContext","localClipIntersection","localClippingCount","globalClippingCount","numClippingPlanes","numUnionClippingPlanes","ALPHA_TO_COVERAGE","setupAlphaToCoverage","planes","setupDefault","clippingPlanes","distanceToPlane","distanceGradient","clipOpacity","assign","plane","i","element","dot","xyz","negate","add","w","fwidth","div","mulAssign","equal","discard","unionClipOpacity","start","end","oneMinus","a","greaterThan","clipped","and","clipping","clippingAlpha"],"sources":["D:/dumps/online-learning-platform-main/Frontend/node_modules/three/examples/jsm/nodes/accessors/ClippingNode.js"],"sourcesContent":["\nimport Node from '../core/Node.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\nimport { positionView } from './PositionNode.js';\nimport { diffuseColor, property } from '../core/PropertyNode.js';\nimport { tslFn } from '../shadernode/ShaderNode.js';\nimport { loop } from '../utils/LoopNode.js';\nimport { smoothstep } from '../math/MathNode.js';\nimport { uniforms } from './UniformsNode.js';\n\nclass ClippingNode extends Node {\n\n\tconstructor( scope = ClippingNode.DEFAULT ) {\n\n\t\tsuper();\n\n\t\tthis.scope = scope;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tsuper.setup( builder );\n\n\t\tconst clippingContext = builder.clippingContext;\n\t\tconst { localClipIntersection, localClippingCount, globalClippingCount } = clippingContext;\n\n\t\tconst numClippingPlanes = globalClippingCount + localClippingCount;\n\t\tconst numUnionClippingPlanes = localClipIntersection ? numClippingPlanes - localClippingCount : numClippingPlanes;\n\n\t\tif ( this.scope === ClippingNode.ALPHA_TO_COVERAGE ) {\n\n\t\t\treturn this.setupAlphaToCoverage( clippingContext.planes, numClippingPlanes, numUnionClippingPlanes );\n\n\t\t} else {\n\n\t\t\treturn this.setupDefault( clippingContext.planes, numClippingPlanes, numUnionClippingPlanes );\n\n\t\t}\n\n\t}\n\n\tsetupAlphaToCoverage( planes, numClippingPlanes, numUnionClippingPlanes ) {\n\n\t\treturn tslFn( () => {\n\n\t\t\tconst clippingPlanes = uniforms( planes );\n\n\t\t\tconst distanceToPlane = property( 'float', 'distanceToPlane' );\n\t\t\tconst distanceGradient = property( 'float', 'distanceToGradient' );\n\n\t\t\tconst clipOpacity = property( 'float', 'clipOpacity' );\n\n\t\t\tclipOpacity.assign( 1 );\n\n\t\t\tlet plane;\n\n\t\t\tloop( numUnionClippingPlanes, ( { i } ) => {\n\n\t\t\t\tplane = clippingPlanes.element( i );\n\n\t\t\t\tdistanceToPlane.assign( positionView.dot( plane.xyz ).negate().add( plane.w ) );\n\t\t\t\tdistanceGradient.assign( distanceToPlane.fwidth().div( 2.0 ) );\n\n\t\t\t\tclipOpacity.mulAssign( smoothstep( distanceGradient.negate(), distanceGradient, distanceToPlane ) );\n\n\t\t\t\tclipOpacity.equal( 0.0 ).discard();\n\n\t\t\t} );\n\n\t\t\tif ( numUnionClippingPlanes < numClippingPlanes ) {\n\n\t\t\t\tconst unionClipOpacity = property( 'float', 'unionclipOpacity' );\n\n\t\t\t\tunionClipOpacity.assign( 1 );\n\n\t\t\t\tloop( { start: numUnionClippingPlanes, end: numClippingPlanes }, ( { i } ) => {\n\n\t\t\t\t\tplane = clippingPlanes.element( i );\n\n\t\t\t\t\tdistanceToPlane.assign( positionView.dot( plane.xyz ).negate().add( plane.w ) );\n\t\t\t\t\tdistanceGradient.assign( distanceToPlane.fwidth().div( 2.0 ) );\n\n\t\t\t\t\tunionClipOpacity.mulAssign( smoothstep( distanceGradient.negate(), distanceGradient, distanceToPlane ).oneMinus() );\n\n\t\t\t\t} );\n\n\t\t\t\tclipOpacity.mulAssign( unionClipOpacity.oneMinus() );\n\n\t\t\t}\n\n\t\t\tdiffuseColor.a.mulAssign( clipOpacity );\n\n\t\t\tdiffuseColor.a.equal( 0.0 ).discard();\n\n\t\t} )();\n\n\t}\n\n\tsetupDefault( planes, numClippingPlanes, numUnionClippingPlanes ) {\n\n\t\treturn tslFn( () => {\n\n\t\t\tconst clippingPlanes = uniforms( planes );\n\n\t\t\tlet plane;\n\n\t\t\tloop( numUnionClippingPlanes, ( { i } ) => {\n\n\t\t\t\tplane = clippingPlanes.element( i );\n\t\t\t\tpositionView.dot( plane.xyz ).greaterThan( plane.w ).discard();\n\n\t\t\t} );\n\n\t\t\tif ( numUnionClippingPlanes < numClippingPlanes ) {\n\n\t\t\t\tconst clipped = property( 'bool', 'clipped' );\n\n\t\t\t\tclipped.assign( true );\n\n\t\t\t\tloop( { start: numUnionClippingPlanes, end: numClippingPlanes }, ( { i } ) => {\n\n\t\t\t\t\tplane = clippingPlanes.element( i );\n\t\t\t\t\tclipped.assign( positionView.dot( plane.xyz ).greaterThan( plane.w ).and( clipped ) );\n\n\t\t\t\t} );\n\n\t\t\t\tclipped.discard();\n\n\t\t\t}\n\n\t\t} )();\n\n\t}\n\n}\n\nClippingNode.ALPHA_TO_COVERAGE = 'alphaToCoverage';\nClippingNode.DEFAULT = 'default';\n\nexport default ClippingNode;\n\nexport const clipping = () => nodeObject( new ClippingNode() );\n\nexport const clippingAlpha = () => nodeObject( new ClippingNode( ClippingNode.ALPHA_TO_COVERAGE ) );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}