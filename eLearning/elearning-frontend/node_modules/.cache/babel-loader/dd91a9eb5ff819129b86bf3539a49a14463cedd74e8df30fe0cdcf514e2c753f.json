{"ast":null,"code":"import { addNodeClass } from '../core/Node.js';\nimport { nodeProxy, addNodeElement } from '../shadernode/ShaderNode.js';\nimport ArrayElementNode from './ArrayElementNode.js';\nclass StorageArrayElementNode extends ArrayElementNode {\n  constructor(storageBufferNode, indexNode) {\n    super(storageBufferNode, indexNode);\n    this.isStorageArrayElementNode = true;\n  }\n  set storageBufferNode(value) {\n    this.node = value;\n  }\n  get storageBufferNode() {\n    return this.node;\n  }\n  setup(builder) {\n    if (builder.isAvailable('storageBuffer') === false) {\n      if (!this.node.instanceIndex && this.node.bufferObject === true) {\n        builder.setupPBO(this.node);\n      }\n    }\n    return super.setup(builder);\n  }\n  generate(builder, output) {\n    let snippet;\n    const isAssignContext = builder.context.assign;\n\n    //\n\n    if (builder.isAvailable('storageBuffer') === false) {\n      const {\n        node\n      } = this;\n      if (!node.instanceIndex && this.node.bufferObject === true && isAssignContext !== true) {\n        snippet = builder.generatePBO(this);\n      } else {\n        snippet = node.build(builder);\n      }\n    } else {\n      snippet = super.generate(builder);\n    }\n    if (isAssignContext !== true) {\n      const type = this.getNodeType(builder);\n      snippet = builder.format(snippet, type, output);\n    }\n    return snippet;\n  }\n}\nexport default StorageArrayElementNode;\nexport const storageElement = nodeProxy(StorageArrayElementNode);\naddNodeElement('storageElement', storageElement);\naddNodeClass('StorageArrayElementNode', StorageArrayElementNode);","map":{"version":3,"names":["addNodeClass","nodeProxy","addNodeElement","ArrayElementNode","StorageArrayElementNode","constructor","storageBufferNode","indexNode","isStorageArrayElementNode","value","node","setup","builder","isAvailable","instanceIndex","bufferObject","setupPBO","generate","output","snippet","isAssignContext","context","assign","generatePBO","build","type","getNodeType","format","storageElement"],"sources":["D:/dumps/online-learning-platform-main/Frontend/node_modules/three/examples/jsm/nodes/utils/StorageArrayElementNode.js"],"sourcesContent":["import { addNodeClass } from '../core/Node.js';\nimport { nodeProxy, addNodeElement } from '../shadernode/ShaderNode.js';\nimport ArrayElementNode from './ArrayElementNode.js';\n\nclass StorageArrayElementNode extends ArrayElementNode {\n\n\tconstructor( storageBufferNode, indexNode ) {\n\n\t\tsuper( storageBufferNode, indexNode );\n\n\t\tthis.isStorageArrayElementNode = true;\n\n\t}\n\n\tset storageBufferNode( value ) {\n\n\t\tthis.node = value;\n\n\t}\n\n\tget storageBufferNode() {\n\n\t\treturn this.node;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tif ( builder.isAvailable( 'storageBuffer' ) === false ) {\n\n\t\t\tif ( ! this.node.instanceIndex && this.node.bufferObject === true ) {\n\n\t\t\t\tbuilder.setupPBO( this.node );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn super.setup( builder );\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tlet snippet;\n\n\t\tconst isAssignContext = builder.context.assign;\n\n\t\t//\n\n\t\tif ( builder.isAvailable( 'storageBuffer' ) === false ) {\n\n\t\t\tconst { node } = this;\n\n\t\t\tif ( ! node.instanceIndex && this.node.bufferObject === true && isAssignContext !== true ) {\n\n\t\t\t\tsnippet = builder.generatePBO( this );\n\n\t\t\t} else {\n\n\t\t\t\tsnippet = node.build( builder );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tsnippet = super.generate( builder );\n\n\t\t}\n\n\t\tif ( isAssignContext !== true ) {\n\n\t\t\tconst type = this.getNodeType( builder );\n\n\t\t\tsnippet = builder.format( snippet, type, output );\n\n\t\t}\n\n\t\treturn snippet;\n\n\t}\n\n}\n\nexport default StorageArrayElementNode;\n\nexport const storageElement = nodeProxy( StorageArrayElementNode );\n\naddNodeElement( 'storageElement', storageElement );\n\naddNodeClass( 'StorageArrayElementNode', StorageArrayElementNode );\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,SAAS,EAAEC,cAAc,QAAQ,6BAA6B;AACvE,OAAOC,gBAAgB,MAAM,uBAAuB;AAEpD,MAAMC,uBAAuB,SAASD,gBAAgB,CAAC;EAEtDE,WAAWA,CAAEC,iBAAiB,EAAEC,SAAS,EAAG;IAE3C,KAAK,CAAED,iBAAiB,EAAEC,SAAU,CAAC;IAErC,IAAI,CAACC,yBAAyB,GAAG,IAAI;EAEtC;EAEA,IAAIF,iBAAiBA,CAAEG,KAAK,EAAG;IAE9B,IAAI,CAACC,IAAI,GAAGD,KAAK;EAElB;EAEA,IAAIH,iBAAiBA,CAAA,EAAG;IAEvB,OAAO,IAAI,CAACI,IAAI;EAEjB;EAEAC,KAAKA,CAAEC,OAAO,EAAG;IAEhB,IAAKA,OAAO,CAACC,WAAW,CAAE,eAAgB,CAAC,KAAK,KAAK,EAAG;MAEvD,IAAK,CAAE,IAAI,CAACH,IAAI,CAACI,aAAa,IAAI,IAAI,CAACJ,IAAI,CAACK,YAAY,KAAK,IAAI,EAAG;QAEnEH,OAAO,CAACI,QAAQ,CAAE,IAAI,CAACN,IAAK,CAAC;MAE9B;IAED;IAEA,OAAO,KAAK,CAACC,KAAK,CAAEC,OAAQ,CAAC;EAE9B;EAEAK,QAAQA,CAAEL,OAAO,EAAEM,MAAM,EAAG;IAE3B,IAAIC,OAAO;IAEX,MAAMC,eAAe,GAAGR,OAAO,CAACS,OAAO,CAACC,MAAM;;IAE9C;;IAEA,IAAKV,OAAO,CAACC,WAAW,CAAE,eAAgB,CAAC,KAAK,KAAK,EAAG;MAEvD,MAAM;QAAEH;MAAK,CAAC,GAAG,IAAI;MAErB,IAAK,CAAEA,IAAI,CAACI,aAAa,IAAI,IAAI,CAACJ,IAAI,CAACK,YAAY,KAAK,IAAI,IAAIK,eAAe,KAAK,IAAI,EAAG;QAE1FD,OAAO,GAAGP,OAAO,CAACW,WAAW,CAAE,IAAK,CAAC;MAEtC,CAAC,MAAM;QAENJ,OAAO,GAAGT,IAAI,CAACc,KAAK,CAAEZ,OAAQ,CAAC;MAEhC;IAED,CAAC,MAAM;MAENO,OAAO,GAAG,KAAK,CAACF,QAAQ,CAAEL,OAAQ,CAAC;IAEpC;IAEA,IAAKQ,eAAe,KAAK,IAAI,EAAG;MAE/B,MAAMK,IAAI,GAAG,IAAI,CAACC,WAAW,CAAEd,OAAQ,CAAC;MAExCO,OAAO,GAAGP,OAAO,CAACe,MAAM,CAAER,OAAO,EAAEM,IAAI,EAAEP,MAAO,CAAC;IAElD;IAEA,OAAOC,OAAO;EAEf;AAED;AAEA,eAAef,uBAAuB;AAEtC,OAAO,MAAMwB,cAAc,GAAG3B,SAAS,CAAEG,uBAAwB,CAAC;AAElEF,cAAc,CAAE,gBAAgB,EAAE0B,cAAe,CAAC;AAElD5B,YAAY,CAAE,yBAAyB,EAAEI,uBAAwB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}