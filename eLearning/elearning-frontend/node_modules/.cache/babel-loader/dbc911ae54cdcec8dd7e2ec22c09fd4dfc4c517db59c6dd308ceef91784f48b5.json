{"ast":null,"code":"import Node, { addNodeClass } from './Node.js';\nimport StructTypeNode from './StructTypeNode.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\nclass OutputStructNode extends Node {\n  constructor(...members) {\n    super();\n    this.members = members;\n    this.isOutputStructNode = true;\n  }\n  setup(builder) {\n    super.setup(builder);\n    const members = this.members;\n    const types = [];\n    for (let i = 0; i < members.length; i++) {\n      types.push(members[i].getNodeType(builder));\n    }\n    this.nodeType = builder.getStructTypeFromNode(new StructTypeNode(types)).name;\n  }\n  generate(builder, output) {\n    const propertyName = builder.getOutputStructName();\n    const members = this.members;\n    const structPrefix = propertyName !== '' ? propertyName + '.' : '';\n    for (let i = 0; i < members.length; i++) {\n      const snippet = members[i].build(builder, output);\n      builder.addLineFlowCode(`${structPrefix}m${i} = ${snippet}`);\n    }\n    return propertyName;\n  }\n}\nexport default OutputStructNode;\nexport const outputStruct = nodeProxy(OutputStructNode);\naddNodeClass('OutputStructNode', OutputStructNode);","map":{"version":3,"names":["Node","addNodeClass","StructTypeNode","nodeProxy","OutputStructNode","constructor","members","isOutputStructNode","setup","builder","types","i","length","push","getNodeType","nodeType","getStructTypeFromNode","name","generate","output","propertyName","getOutputStructName","structPrefix","snippet","build","addLineFlowCode","outputStruct"],"sources":["D:/dumps/online-learning-platform-main/Frontend/node_modules/three/examples/jsm/nodes/core/OutputStructNode.js"],"sourcesContent":["import Node, { addNodeClass } from './Node.js';\nimport StructTypeNode from './StructTypeNode.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass OutputStructNode extends Node {\n\n\tconstructor( ...members ) {\n\n\t\tsuper();\n\n\t\tthis.members = members;\n\n\t\tthis.isOutputStructNode = true;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tsuper.setup( builder );\n\n\t\tconst members = this.members;\n\t\tconst types = [];\n\n\t\tfor ( let i = 0; i < members.length; i ++ ) {\n\n\t\t\ttypes.push( members[ i ].getNodeType( builder ) );\n\n\t\t}\n\n\t\tthis.nodeType = builder.getStructTypeFromNode( new StructTypeNode( types ) ).name;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst propertyName = builder.getOutputStructName();\n\t\tconst members = this.members;\n\n\t\tconst structPrefix = propertyName !== '' ? propertyName + '.' : '';\n\n\t\tfor ( let i = 0; i < members.length; i ++ ) {\n\n\t\t\tconst snippet = members[ i ].build( builder, output );\n\n\t\t\tbuilder.addLineFlowCode( `${ structPrefix }m${ i } = ${ snippet }` );\n\n\t\t}\n\n\t\treturn propertyName;\n\n\t}\n\n}\n\nexport default OutputStructNode;\n\nexport const outputStruct = nodeProxy( OutputStructNode );\n\naddNodeClass( 'OutputStructNode', OutputStructNode );\n"],"mappings":"AAAA,OAAOA,IAAI,IAAIC,YAAY,QAAQ,WAAW;AAC9C,OAAOC,cAAc,MAAM,qBAAqB;AAChD,SAASC,SAAS,QAAQ,6BAA6B;AAEvD,MAAMC,gBAAgB,SAASJ,IAAI,CAAC;EAEnCK,WAAWA,CAAE,GAAGC,OAAO,EAAG;IAEzB,KAAK,CAAC,CAAC;IAEP,IAAI,CAACA,OAAO,GAAGA,OAAO;IAEtB,IAAI,CAACC,kBAAkB,GAAG,IAAI;EAE/B;EAEAC,KAAKA,CAAEC,OAAO,EAAG;IAEhB,KAAK,CAACD,KAAK,CAAEC,OAAQ,CAAC;IAEtB,MAAMH,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,MAAMI,KAAK,GAAG,EAAE;IAEhB,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,OAAO,CAACM,MAAM,EAAED,CAAC,EAAG,EAAG;MAE3CD,KAAK,CAACG,IAAI,CAAEP,OAAO,CAAEK,CAAC,CAAE,CAACG,WAAW,CAAEL,OAAQ,CAAE,CAAC;IAElD;IAEA,IAAI,CAACM,QAAQ,GAAGN,OAAO,CAACO,qBAAqB,CAAE,IAAId,cAAc,CAAEQ,KAAM,CAAE,CAAC,CAACO,IAAI;EAElF;EAEAC,QAAQA,CAAET,OAAO,EAAEU,MAAM,EAAG;IAE3B,MAAMC,YAAY,GAAGX,OAAO,CAACY,mBAAmB,CAAC,CAAC;IAClD,MAAMf,OAAO,GAAG,IAAI,CAACA,OAAO;IAE5B,MAAMgB,YAAY,GAAGF,YAAY,KAAK,EAAE,GAAGA,YAAY,GAAG,GAAG,GAAG,EAAE;IAElE,KAAM,IAAIT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,OAAO,CAACM,MAAM,EAAED,CAAC,EAAG,EAAG;MAE3C,MAAMY,OAAO,GAAGjB,OAAO,CAAEK,CAAC,CAAE,CAACa,KAAK,CAAEf,OAAO,EAAEU,MAAO,CAAC;MAErDV,OAAO,CAACgB,eAAe,CAAG,GAAGH,YAAc,IAAIX,CAAG,MAAMY,OAAS,EAAE,CAAC;IAErE;IAEA,OAAOH,YAAY;EAEpB;AAED;AAEA,eAAehB,gBAAgB;AAE/B,OAAO,MAAMsB,YAAY,GAAGvB,SAAS,CAAEC,gBAAiB,CAAC;AAEzDH,YAAY,CAAE,kBAAkB,EAAEG,gBAAiB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}