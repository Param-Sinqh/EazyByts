{"ast":null,"code":"import { tslFn, float, vec3 } from '../../shadernode/ShaderNode.js';\nconst RECIPROCAL_PI = float(1 / Math.PI);\n\n// https://google.github.io/filament/Filament.md.html#materialsystem/anisotropicmodel/anisotropicspecularbrdf\n\nconst D_GGX_Anisotropic = tslFn(({\n  alphaT,\n  alphaB,\n  dotNH,\n  dotTH,\n  dotBH\n}) => {\n  const a2 = alphaT.mul(alphaB);\n  const v = vec3(alphaB.mul(dotTH), alphaT.mul(dotBH), a2.mul(dotNH));\n  const v2 = v.dot(v);\n  const w2 = a2.div(v2);\n  return RECIPROCAL_PI.mul(a2.mul(w2.pow2()));\n}).setLayout({\n  name: 'D_GGX_Anisotropic',\n  type: 'float',\n  inputs: [{\n    name: 'alphaT',\n    type: 'float',\n    qualifier: 'in'\n  }, {\n    name: 'alphaB',\n    type: 'float',\n    qualifier: 'in'\n  }, {\n    name: 'dotNH',\n    type: 'float',\n    qualifier: 'in'\n  }, {\n    name: 'dotTH',\n    type: 'float',\n    qualifier: 'in'\n  }, {\n    name: 'dotBH',\n    type: 'float',\n    qualifier: 'in'\n  }]\n});\nexport default D_GGX_Anisotropic;","map":{"version":3,"names":["tslFn","float","vec3","RECIPROCAL_PI","Math","PI","D_GGX_Anisotropic","alphaT","alphaB","dotNH","dotTH","dotBH","a2","mul","v","v2","dot","w2","div","pow2","setLayout","name","type","inputs","qualifier"],"sources":["D:/dumps/online-learning-platform-main/Frontend/node_modules/three/examples/jsm/nodes/functions/BSDF/D_GGX_Anisotropic.js"],"sourcesContent":["import { tslFn, float, vec3 } from '../../shadernode/ShaderNode.js';\n\nconst RECIPROCAL_PI = float( 1 / Math.PI );\n\n// https://google.github.io/filament/Filament.md.html#materialsystem/anisotropicmodel/anisotropicspecularbrdf\n\nconst D_GGX_Anisotropic = tslFn( ( { alphaT, alphaB, dotNH, dotTH, dotBH } ) => {\n\n\tconst a2 = alphaT.mul( alphaB );\n\tconst v = vec3( alphaB.mul( dotTH ), alphaT.mul( dotBH ), a2.mul( dotNH ) );\n\tconst v2 = v.dot( v );\n\tconst w2 = a2.div( v2 );\n\n\treturn RECIPROCAL_PI.mul( a2.mul( w2.pow2() ) );\n\n} ).setLayout( {\n\tname: 'D_GGX_Anisotropic',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'alphaT', type: 'float', qualifier: 'in' },\n\t\t{ name: 'alphaB', type: 'float', qualifier: 'in' },\n\t\t{ name: 'dotNH', type: 'float', qualifier: 'in' },\n\t\t{ name: 'dotTH', type: 'float', qualifier: 'in' },\n\t\t{ name: 'dotBH', type: 'float', qualifier: 'in' }\n\t]\n} );\n\nexport default D_GGX_Anisotropic;\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,KAAK,EAAEC,IAAI,QAAQ,gCAAgC;AAEnE,MAAMC,aAAa,GAAGF,KAAK,CAAE,CAAC,GAAGG,IAAI,CAACC,EAAG,CAAC;;AAE1C;;AAEA,MAAMC,iBAAiB,GAAGN,KAAK,CAAE,CAAE;EAAEO,MAAM;EAAEC,MAAM;EAAEC,KAAK;EAAEC,KAAK;EAAEC;AAAM,CAAC,KAAM;EAE/E,MAAMC,EAAE,GAAGL,MAAM,CAACM,GAAG,CAAEL,MAAO,CAAC;EAC/B,MAAMM,CAAC,GAAGZ,IAAI,CAAEM,MAAM,CAACK,GAAG,CAAEH,KAAM,CAAC,EAAEH,MAAM,CAACM,GAAG,CAAEF,KAAM,CAAC,EAAEC,EAAE,CAACC,GAAG,CAAEJ,KAAM,CAAE,CAAC;EAC3E,MAAMM,EAAE,GAAGD,CAAC,CAACE,GAAG,CAAEF,CAAE,CAAC;EACrB,MAAMG,EAAE,GAAGL,EAAE,CAACM,GAAG,CAAEH,EAAG,CAAC;EAEvB,OAAOZ,aAAa,CAACU,GAAG,CAAED,EAAE,CAACC,GAAG,CAAEI,EAAE,CAACE,IAAI,CAAC,CAAE,CAAE,CAAC;AAEhD,CAAE,CAAC,CAACC,SAAS,CAAE;EACdC,IAAI,EAAE,mBAAmB;EACzBC,IAAI,EAAE,OAAO;EACbC,MAAM,EAAE,CACP;IAAEF,IAAI,EAAE,QAAQ;IAAEC,IAAI,EAAE,OAAO;IAAEE,SAAS,EAAE;EAAK,CAAC,EAClD;IAAEH,IAAI,EAAE,QAAQ;IAAEC,IAAI,EAAE,OAAO;IAAEE,SAAS,EAAE;EAAK,CAAC,EAClD;IAAEH,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,OAAO;IAAEE,SAAS,EAAE;EAAK,CAAC,EACjD;IAAEH,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,OAAO;IAAEE,SAAS,EAAE;EAAK,CAAC,EACjD;IAAEH,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,OAAO;IAAEE,SAAS,EAAE;EAAK,CAAC;AAEnD,CAAE,CAAC;AAEH,eAAelB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}