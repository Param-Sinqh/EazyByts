{"ast":null,"code":"// HTML content for the typing animation with words as a parameter\nconst typingAnimationHTML = words => `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Typing Animation</title>\n<style>\n  /* Styles for the cursor animation */\n  @keyframes blink {\n    0% {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n\n  h1\n  \n  .cursor {\n    display: inline-block;\n    width: 4px; /* Larger cursor */\n    height: 30px; /* Larger cursor */\n    background-color: black;\n    animation: blink 1s infinite;\n  }\n</style>\n</head>\n<body>\n  <h1 id=\"text\"></h1>\n  <script>\n    // Text to be typed and erased\n    const words = ${JSON.stringify(words)};\n    let wordIndex = 0;\n    let letterIndex = 0;\n    let direction = 1; // 1 for typing, -1 for erasing\n    const typingSpeed = 75; // milliseconds per character\n    \n    // Function to simulate typing and erasing\n    function typeAndErase() {\n      const textElement = document.getElementById(\"text\");\n      const word = words[wordIndex];\n      const currentText = word.slice(0, letterIndex);\n      textElement.innerHTML = currentText + '<span class=\"cursor\"></span>'; // Include cursor\n      \n      if (direction === 1) {\n        if (letterIndex < word.length) {\n          letterIndex++;\n        } else {\n          direction = -1;\n          setTimeout(typeAndErase, 1000); // Pause before erasing\n          return;\n        }\n      } else {\n        if (letterIndex > 0) {\n          letterIndex--;\n        } else {\n          direction = 1;\n          wordIndex = (wordIndex + 1) % words.length; // Move to the next word\n        }\n      }\n      \n      setTimeout(typeAndErase, typingSpeed);\n    }\n    \n    // Start the typing animation\n    typeAndErase();\n  </script>\n</body>\n</html>\n`;\nexport default typingAnimationHTML;","map":{"version":3,"names":["typingAnimationHTML","words","JSON","stringify"],"sources":["D:/dumps/online-learning-platform-main/Frontend/src/components/typingAnimationHTML.js"],"sourcesContent":["// HTML content for the typing animation with words as a parameter\r\nconst typingAnimationHTML = (words) => `\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n<meta charset=\"UTF-8\">\r\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n<title>Typing Animation</title>\r\n<style>\r\n  /* Styles for the cursor animation */\r\n  @keyframes blink {\r\n    0% {\r\n      opacity: 1;\r\n    }\r\n    50% {\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  h1\r\n  \r\n  .cursor {\r\n    display: inline-block;\r\n    width: 4px; /* Larger cursor */\r\n    height: 30px; /* Larger cursor */\r\n    background-color: black;\r\n    animation: blink 1s infinite;\r\n  }\r\n</style>\r\n</head>\r\n<body>\r\n  <h1 id=\"text\"></h1>\r\n  <script>\r\n    // Text to be typed and erased\r\n    const words = ${JSON.stringify(words)};\r\n    let wordIndex = 0;\r\n    let letterIndex = 0;\r\n    let direction = 1; // 1 for typing, -1 for erasing\r\n    const typingSpeed = 75; // milliseconds per character\r\n    \r\n    // Function to simulate typing and erasing\r\n    function typeAndErase() {\r\n      const textElement = document.getElementById(\"text\");\r\n      const word = words[wordIndex];\r\n      const currentText = word.slice(0, letterIndex);\r\n      textElement.innerHTML = currentText + '<span class=\"cursor\"></span>'; // Include cursor\r\n      \r\n      if (direction === 1) {\r\n        if (letterIndex < word.length) {\r\n          letterIndex++;\r\n        } else {\r\n          direction = -1;\r\n          setTimeout(typeAndErase, 1000); // Pause before erasing\r\n          return;\r\n        }\r\n      } else {\r\n        if (letterIndex > 0) {\r\n          letterIndex--;\r\n        } else {\r\n          direction = 1;\r\n          wordIndex = (wordIndex + 1) % words.length; // Move to the next word\r\n        }\r\n      }\r\n      \r\n      setTimeout(typeAndErase, typingSpeed);\r\n    }\r\n    \r\n    // Start the typing animation\r\n    typeAndErase();\r\n  </script>\r\n</body>\r\n</html>\r\n`;\r\n\r\nexport default typingAnimationHTML;"],"mappings":"AAAA;AACA,MAAMA,mBAAmB,GAAIC,KAAK,IAAM;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoBC,IAAI,CAACC,SAAS,CAACF,KAAK,CAAE;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAeD,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}