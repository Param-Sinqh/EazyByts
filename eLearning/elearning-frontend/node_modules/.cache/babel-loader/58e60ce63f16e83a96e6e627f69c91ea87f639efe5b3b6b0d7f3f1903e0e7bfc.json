{"ast":null,"code":"import { EventDispatcher } from 'three';\nimport { NodeUpdateType } from './constants.js';\nimport { getNodeChildren, getCacheKey } from './NodeUtils.js';\nimport { MathUtils } from 'three';\nconst NodeClasses = new Map();\nlet _nodeId = 0;\nclass Node extends EventDispatcher {\n  constructor(nodeType = null) {\n    super();\n    this.nodeType = nodeType;\n    this.updateType = NodeUpdateType.NONE;\n    this.updateBeforeType = NodeUpdateType.NONE;\n    this.uuid = MathUtils.generateUUID();\n    this.version = 0;\n    this._cacheKey = null;\n    this._cacheKeyVersion = 0;\n    this.global = false;\n    this.isNode = true;\n    Object.defineProperty(this, 'id', {\n      value: _nodeId++\n    });\n  }\n  set needsUpdate(value) {\n    if (value === true) {\n      this.version++;\n    }\n  }\n  get type() {\n    return this.constructor.type;\n  }\n  onUpdate(callback, updateType) {\n    this.updateType = updateType;\n    this.update = callback.bind(this.getSelf());\n    return this;\n  }\n  onFrameUpdate(callback) {\n    return this.onUpdate(callback, NodeUpdateType.FRAME);\n  }\n  onRenderUpdate(callback) {\n    return this.onUpdate(callback, NodeUpdateType.RENDER);\n  }\n  onObjectUpdate(callback) {\n    return this.onUpdate(callback, NodeUpdateType.OBJECT);\n  }\n  onReference(callback) {\n    this.updateReference = callback.bind(this.getSelf());\n    return this;\n  }\n  getSelf() {\n    // Returns non-node object.\n\n    return this.self || this;\n  }\n  updateReference( /*state*/\n  ) {\n    return this;\n  }\n  isGlobal( /*builder*/\n  ) {\n    return this.global;\n  }\n  *getChildren() {\n    for (const {\n      childNode\n    } of getNodeChildren(this)) {\n      yield childNode;\n    }\n  }\n  dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n  traverse(callback) {\n    callback(this);\n    for (const childNode of this.getChildren()) {\n      childNode.traverse(callback);\n    }\n  }\n  getCacheKey(force = false) {\n    force = force || this.version !== this._cacheKeyVersion;\n    if (force === true || this._cacheKey === null) {\n      this._cacheKey = getCacheKey(this, force);\n      this._cacheKeyVersion = this.version;\n    }\n    return this._cacheKey;\n  }\n  getHash( /*builder*/\n  ) {\n    return this.uuid;\n  }\n  getUpdateType() {\n    return this.updateType;\n  }\n  getUpdateBeforeType() {\n    return this.updateBeforeType;\n  }\n  getElementType(builder) {\n    const type = this.getNodeType(builder);\n    const elementType = builder.getElementType(type);\n    return elementType;\n  }\n  getNodeType(builder) {\n    const nodeProperties = builder.getNodeProperties(this);\n    if (nodeProperties.outputNode) {\n      return nodeProperties.outputNode.getNodeType(builder);\n    }\n    return this.nodeType;\n  }\n  getShared(builder) {\n    const hash = this.getHash(builder);\n    const nodeFromHash = builder.getNodeFromHash(hash);\n    return nodeFromHash || this;\n  }\n  setup(builder) {\n    const nodeProperties = builder.getNodeProperties(this);\n    let index = 0;\n    for (const childNode of this.getChildren()) {\n      nodeProperties['node' + index++] = childNode;\n    }\n\n    // return a outputNode if exists\n    return null;\n  }\n  construct(builder) {\n    // @deprecated, r157\n\n    console.warn('THREE.Node: construct() is deprecated. Use setup() instead.');\n    return this.setup(builder);\n  }\n  increaseUsage(builder) {\n    const nodeData = builder.getDataFromNode(this);\n    nodeData.usageCount = nodeData.usageCount === undefined ? 1 : nodeData.usageCount + 1;\n    return nodeData.usageCount;\n  }\n  analyze(builder) {\n    const usageCount = this.increaseUsage(builder);\n    if (usageCount === 1) {\n      // node flow children\n\n      const nodeProperties = builder.getNodeProperties(this);\n      for (const childNode of Object.values(nodeProperties)) {\n        if (childNode && childNode.isNode === true) {\n          childNode.build(builder);\n        }\n      }\n    }\n  }\n  generate(builder, output) {\n    const {\n      outputNode\n    } = builder.getNodeProperties(this);\n    if (outputNode && outputNode.isNode === true) {\n      return outputNode.build(builder, output);\n    }\n  }\n  updateBefore( /*frame*/\n  ) {\n    console.warn('Abstract function.');\n  }\n  update( /*frame*/\n  ) {\n    console.warn('Abstract function.');\n  }\n  build(builder, output = null) {\n    const refNode = this.getShared(builder);\n    if (this !== refNode) {\n      return refNode.build(builder, output);\n    }\n    builder.addNode(this);\n    builder.addChain(this);\n\n    /* Build stages expected results:\n    \t- \"setup\"\t\t-> Node\n    \t- \"analyze\"\t\t-> null\n    \t- \"generate\"\t-> String\n    */\n    let result = null;\n    const buildStage = builder.getBuildStage();\n    if (buildStage === 'setup') {\n      this.updateReference(builder);\n      const properties = builder.getNodeProperties(this);\n      if (properties.initialized !== true || builder.context.tempRead === false) {\n        const stackNodesBeforeSetup = builder.stack.nodes.length;\n        properties.initialized = true;\n        properties.outputNode = this.setup(builder);\n        if (properties.outputNode !== null && builder.stack.nodes.length !== stackNodesBeforeSetup) {\n          properties.outputNode = builder.stack;\n        }\n        for (const childNode of Object.values(properties)) {\n          if (childNode && childNode.isNode === true) {\n            childNode.build(builder);\n          }\n        }\n      }\n    } else if (buildStage === 'analyze') {\n      this.analyze(builder);\n    } else if (buildStage === 'generate') {\n      const isGenerateOnce = this.generate.length === 1;\n      if (isGenerateOnce) {\n        const type = this.getNodeType(builder);\n        const nodeData = builder.getDataFromNode(this);\n        result = nodeData.snippet;\n        if (result === undefined /*|| builder.context.tempRead === false*/) {\n          result = this.generate(builder) || '';\n          nodeData.snippet = result;\n        }\n        result = builder.format(result, type, output);\n      } else {\n        result = this.generate(builder, output) || '';\n      }\n    }\n    builder.removeChain(this);\n    return result;\n  }\n  getSerializeChildren() {\n    return getNodeChildren(this);\n  }\n  serialize(json) {\n    const nodeChildren = this.getSerializeChildren();\n    const inputNodes = {};\n    for (const {\n      property,\n      index,\n      childNode\n    } of nodeChildren) {\n      if (index !== undefined) {\n        if (inputNodes[property] === undefined) {\n          inputNodes[property] = Number.isInteger(index) ? [] : {};\n        }\n        inputNodes[property][index] = childNode.toJSON(json.meta).uuid;\n      } else {\n        inputNodes[property] = childNode.toJSON(json.meta).uuid;\n      }\n    }\n    if (Object.keys(inputNodes).length > 0) {\n      json.inputNodes = inputNodes;\n    }\n  }\n  deserialize(json) {\n    if (json.inputNodes !== undefined) {\n      const nodes = json.meta.nodes;\n      for (const property in json.inputNodes) {\n        if (Array.isArray(json.inputNodes[property])) {\n          const inputArray = [];\n          for (const uuid of json.inputNodes[property]) {\n            inputArray.push(nodes[uuid]);\n          }\n          this[property] = inputArray;\n        } else if (typeof json.inputNodes[property] === 'object') {\n          const inputObject = {};\n          for (const subProperty in json.inputNodes[property]) {\n            const uuid = json.inputNodes[property][subProperty];\n            inputObject[subProperty] = nodes[uuid];\n          }\n          this[property] = inputObject;\n        } else {\n          const uuid = json.inputNodes[property];\n          this[property] = nodes[uuid];\n        }\n      }\n    }\n  }\n  toJSON(meta) {\n    const {\n      uuid,\n      type\n    } = this;\n    const isRoot = meta === undefined || typeof meta === 'string';\n    if (isRoot) {\n      meta = {\n        textures: {},\n        images: {},\n        nodes: {}\n      };\n    }\n\n    // serialize\n\n    let data = meta.nodes[uuid];\n    if (data === undefined) {\n      data = {\n        uuid,\n        type,\n        meta,\n        metadata: {\n          version: 4.6,\n          type: 'Node',\n          generator: 'Node.toJSON'\n        }\n      };\n      if (isRoot !== true) meta.nodes[data.uuid] = data;\n      this.serialize(data);\n      delete data.meta;\n    }\n\n    // TODO: Copied from Object3D.toJSON\n\n    function extractFromCache(cache) {\n      const values = [];\n      for (const key in cache) {\n        const data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n      return values;\n    }\n    if (isRoot) {\n      const textures = extractFromCache(meta.textures);\n      const images = extractFromCache(meta.images);\n      const nodes = extractFromCache(meta.nodes);\n      if (textures.length > 0) data.textures = textures;\n      if (images.length > 0) data.images = images;\n      if (nodes.length > 0) data.nodes = nodes;\n    }\n    return data;\n  }\n}\nexport default Node;\nexport function addNodeClass(type, nodeClass) {\n  if (typeof nodeClass !== 'function' || !type) throw new Error(`Node class ${type} is not a class`);\n  if (NodeClasses.has(type)) {\n    console.warn(`Redefinition of node class ${type}`);\n    return;\n  }\n  NodeClasses.set(type, nodeClass);\n  nodeClass.type = type;\n}\nexport function createNodeFromType(type) {\n  const Class = NodeClasses.get(type);\n  if (Class !== undefined) {\n    return new Class();\n  }\n}","map":{"version":3,"names":["EventDispatcher","NodeUpdateType","getNodeChildren","getCacheKey","MathUtils","NodeClasses","Map","_nodeId","Node","constructor","nodeType","updateType","NONE","updateBeforeType","uuid","generateUUID","version","_cacheKey","_cacheKeyVersion","global","isNode","Object","defineProperty","value","needsUpdate","type","onUpdate","callback","update","bind","getSelf","onFrameUpdate","FRAME","onRenderUpdate","RENDER","onObjectUpdate","OBJECT","onReference","updateReference","self","isGlobal","getChildren","childNode","dispose","dispatchEvent","traverse","force","getHash","getUpdateType","getUpdateBeforeType","getElementType","builder","getNodeType","elementType","nodeProperties","getNodeProperties","outputNode","getShared","hash","nodeFromHash","getNodeFromHash","setup","index","construct","console","warn","increaseUsage","nodeData","getDataFromNode","usageCount","undefined","analyze","values","build","generate","output","updateBefore","refNode","addNode","addChain","result","buildStage","getBuildStage","properties","initialized","context","tempRead","stackNodesBeforeSetup","stack","nodes","length","isGenerateOnce","snippet","format","removeChain","getSerializeChildren","serialize","json","nodeChildren","inputNodes","property","Number","isInteger","toJSON","meta","keys","deserialize","Array","isArray","inputArray","push","inputObject","subProperty","isRoot","textures","images","data","metadata","generator","extractFromCache","cache","key","addNodeClass","nodeClass","Error","has","set","createNodeFromType","Class","get"],"sources":["D:/dumps/online-learning-platform-main/Frontend/node_modules/three/examples/jsm/nodes/core/Node.js"],"sourcesContent":["import { EventDispatcher } from 'three';\nimport { NodeUpdateType } from './constants.js';\nimport { getNodeChildren, getCacheKey } from './NodeUtils.js';\nimport { MathUtils } from 'three';\n\nconst NodeClasses = new Map();\n\nlet _nodeId = 0;\n\nclass Node extends EventDispatcher {\n\n\tconstructor( nodeType = null ) {\n\n\t\tsuper();\n\n\t\tthis.nodeType = nodeType;\n\n\t\tthis.updateType = NodeUpdateType.NONE;\n\t\tthis.updateBeforeType = NodeUpdateType.NONE;\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.version = 0;\n\n\t\tthis._cacheKey = null;\n\t\tthis._cacheKeyVersion = 0;\n\n\t\tthis.global = false;\n\n\t\tthis.isNode = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _nodeId ++ } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t}\n\n\tget type() {\n\n\t\treturn this.constructor.type;\n\n\t}\n\n\tonUpdate( callback, updateType ) {\n\n\t\tthis.updateType = updateType;\n\t\tthis.update = callback.bind( this.getSelf() );\n\n\t\treturn this;\n\n\t}\n\n\tonFrameUpdate( callback ) {\n\n\t\treturn this.onUpdate( callback, NodeUpdateType.FRAME );\n\n\t}\n\n\tonRenderUpdate( callback ) {\n\n\t\treturn this.onUpdate( callback, NodeUpdateType.RENDER );\n\n\t}\n\n\tonObjectUpdate( callback ) {\n\n\t\treturn this.onUpdate( callback, NodeUpdateType.OBJECT );\n\n\t}\n\n\tonReference( callback ) {\n\n\t\tthis.updateReference = callback.bind( this.getSelf() );\n\n\t\treturn this;\n\n\t}\n\n\tgetSelf() {\n\n\t\t// Returns non-node object.\n\n\t\treturn this.self || this;\n\n\t}\n\n\tupdateReference( /*state*/ ) {\n\n\t\treturn this;\n\n\t}\n\n\tisGlobal( /*builder*/ ) {\n\n\t\treturn this.global;\n\n\t}\n\n\t* getChildren() {\n\n\t\tfor ( const { childNode } of getNodeChildren( this ) ) {\n\n\t\t\tyield childNode;\n\n\t\t}\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tfor ( const childNode of this.getChildren() ) {\n\n\t\t\tchildNode.traverse( callback );\n\n\t\t}\n\n\t}\n\n\tgetCacheKey( force = false ) {\n\n\t\tforce = force || this.version !== this._cacheKeyVersion;\n\n\t\tif ( force === true || this._cacheKey === null ) {\n\n\t\t\tthis._cacheKey = getCacheKey( this, force );\n\t\t\tthis._cacheKeyVersion = this.version;\n\n\t\t}\n\n\t\treturn this._cacheKey;\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\treturn this.uuid;\n\n\t}\n\n\tgetUpdateType() {\n\n\t\treturn this.updateType;\n\n\t}\n\n\tgetUpdateBeforeType() {\n\n\t\treturn this.updateBeforeType;\n\n\t}\n\n\tgetElementType( builder ) {\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst elementType = builder.getElementType( type );\n\n\t\treturn elementType;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst nodeProperties = builder.getNodeProperties( this );\n\n\t\tif ( nodeProperties.outputNode ) {\n\n\t\t\treturn nodeProperties.outputNode.getNodeType( builder );\n\n\t\t}\n\n\t\treturn this.nodeType;\n\n\t}\n\n\tgetShared( builder ) {\n\n\t\tconst hash = this.getHash( builder );\n\t\tconst nodeFromHash = builder.getNodeFromHash( hash );\n\n\t\treturn nodeFromHash || this;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst nodeProperties = builder.getNodeProperties( this );\n\n\t\tlet index = 0;\n\n\t\tfor ( const childNode of this.getChildren() ) {\n\n\t\t\tnodeProperties[ 'node' + index ++ ] = childNode;\n\n\t\t}\n\n\t\t// return a outputNode if exists\n\t\treturn null;\n\n\t}\n\n\tconstruct( builder ) { // @deprecated, r157\n\n\t\tconsole.warn( 'THREE.Node: construct() is deprecated. Use setup() instead.' );\n\n\t\treturn this.setup( builder );\n\n\t}\n\n\tincreaseUsage( builder ) {\n\n\t\tconst nodeData = builder.getDataFromNode( this );\n\t\tnodeData.usageCount = nodeData.usageCount === undefined ? 1 : nodeData.usageCount + 1;\n\n\t\treturn nodeData.usageCount;\n\n\t}\n\n\tanalyze( builder ) {\n\n\t\tconst usageCount = this.increaseUsage( builder );\n\n\t\tif ( usageCount === 1 ) {\n\n\t\t\t// node flow children\n\n\t\t\tconst nodeProperties = builder.getNodeProperties( this );\n\n\t\t\tfor ( const childNode of Object.values( nodeProperties ) ) {\n\n\t\t\t\tif ( childNode && childNode.isNode === true ) {\n\n\t\t\t\t\tchildNode.build( builder );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst { outputNode } = builder.getNodeProperties( this );\n\n\t\tif ( outputNode && outputNode.isNode === true ) {\n\n\t\t\treturn outputNode.build( builder, output );\n\n\t\t}\n\n\t}\n\n\tupdateBefore( /*frame*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tupdate( /*frame*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tbuild( builder, output = null ) {\n\n\t\tconst refNode = this.getShared( builder );\n\n\t\tif ( this !== refNode ) {\n\n\t\t\treturn refNode.build( builder, output );\n\n\t\t}\n\n\t\tbuilder.addNode( this );\n\t\tbuilder.addChain( this );\n\n\t\t/* Build stages expected results:\n\t\t\t- \"setup\"\t\t-> Node\n\t\t\t- \"analyze\"\t\t-> null\n\t\t\t- \"generate\"\t-> String\n\t\t*/\n\t\tlet result = null;\n\n\t\tconst buildStage = builder.getBuildStage();\n\n\t\tif ( buildStage === 'setup' ) {\n\n\t\t\tthis.updateReference( builder );\n\n\t\t\tconst properties = builder.getNodeProperties( this );\n\n\t\t\tif ( properties.initialized !== true || builder.context.tempRead === false ) {\n\n\t\t\t\tconst stackNodesBeforeSetup = builder.stack.nodes.length;\n\n\t\t\t\tproperties.initialized = true;\n\t\t\t\tproperties.outputNode = this.setup( builder );\n\n\t\t\t\tif ( properties.outputNode !== null && builder.stack.nodes.length !== stackNodesBeforeSetup ) {\n\n\t\t\t\t\tproperties.outputNode = builder.stack;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( const childNode of Object.values( properties ) ) {\n\n\t\t\t\t\tif ( childNode && childNode.isNode === true ) {\n\n\t\t\t\t\t\tchildNode.build( builder );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( buildStage === 'analyze' ) {\n\n\t\t\tthis.analyze( builder );\n\n\t\t} else if ( buildStage === 'generate' ) {\n\n\t\t\tconst isGenerateOnce = this.generate.length === 1;\n\n\t\t\tif ( isGenerateOnce ) {\n\n\t\t\t\tconst type = this.getNodeType( builder );\n\t\t\t\tconst nodeData = builder.getDataFromNode( this );\n\n\t\t\t\tresult = nodeData.snippet;\n\n\t\t\t\tif ( result === undefined /*|| builder.context.tempRead === false*/ ) {\n\n\t\t\t\t\tresult = this.generate( builder ) || '';\n\n\t\t\t\t\tnodeData.snippet = result;\n\n\t\t\t\t}\n\n\t\t\t\tresult = builder.format( result, type, output );\n\n\t\t\t} else {\n\n\t\t\t\tresult = this.generate( builder, output ) || '';\n\n\t\t\t}\n\n\t\t}\n\n\t\tbuilder.removeChain( this );\n\n\t\treturn result;\n\n\t}\n\n\tgetSerializeChildren() {\n\n\t\treturn getNodeChildren( this );\n\n\t}\n\n\tserialize( json ) {\n\n\t\tconst nodeChildren = this.getSerializeChildren();\n\n\t\tconst inputNodes = {};\n\n\t\tfor ( const { property, index, childNode } of nodeChildren ) {\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tif ( inputNodes[ property ] === undefined ) {\n\n\t\t\t\t\tinputNodes[ property ] = Number.isInteger( index ) ? [] : {};\n\n\t\t\t\t}\n\n\t\t\t\tinputNodes[ property ][ index ] = childNode.toJSON( json.meta ).uuid;\n\n\t\t\t} else {\n\n\t\t\t\tinputNodes[ property ] = childNode.toJSON( json.meta ).uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( inputNodes ).length > 0 ) {\n\n\t\t\tjson.inputNodes = inputNodes;\n\n\t\t}\n\n\t}\n\n\tdeserialize( json ) {\n\n\t\tif ( json.inputNodes !== undefined ) {\n\n\t\t\tconst nodes = json.meta.nodes;\n\n\t\t\tfor ( const property in json.inputNodes ) {\n\n\t\t\t\tif ( Array.isArray( json.inputNodes[ property ] ) ) {\n\n\t\t\t\t\tconst inputArray = [];\n\n\t\t\t\t\tfor ( const uuid of json.inputNodes[ property ] ) {\n\n\t\t\t\t\t\tinputArray.push( nodes[ uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis[ property ] = inputArray;\n\n\t\t\t\t} else if ( typeof json.inputNodes[ property ] === 'object' ) {\n\n\t\t\t\t\tconst inputObject = {};\n\n\t\t\t\t\tfor ( const subProperty in json.inputNodes[ property ] ) {\n\n\t\t\t\t\t\tconst uuid = json.inputNodes[ property ][ subProperty ];\n\n\t\t\t\t\t\tinputObject[ subProperty ] = nodes[ uuid ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis[ property ] = inputObject;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst uuid = json.inputNodes[ property ];\n\n\t\t\t\t\tthis[ property ] = nodes[ uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst { uuid, type } = this;\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t}\n\n\t\t// serialize\n\n\t\tlet data = meta.nodes[ uuid ];\n\n\t\tif ( data === undefined ) {\n\n\t\t\tdata = {\n\t\t\t\tuuid,\n\t\t\t\ttype,\n\t\t\t\tmeta,\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.6,\n\t\t\t\t\ttype: 'Node',\n\t\t\t\t\tgenerator: 'Node.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif ( isRoot !== true ) meta.nodes[ data.uuid ] = data;\n\n\t\t\tthis.serialize( data );\n\n\t\t\tdelete data.meta;\n\n\t\t}\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\t\t\tif ( nodes.length > 0 ) data.nodes = nodes;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nexport default Node;\n\nexport function addNodeClass( type, nodeClass ) {\n\n\tif ( typeof nodeClass !== 'function' || ! type ) throw new Error( `Node class ${ type } is not a class` );\n\tif ( NodeClasses.has( type ) ) {\n\n\t\tconsole.warn( `Redefinition of node class ${ type }` );\n\t\treturn;\n\n\t}\n\n\tNodeClasses.set( type, nodeClass );\n\tnodeClass.type = type;\n\n}\n\nexport function createNodeFromType( type ) {\n\n\tconst Class = NodeClasses.get( type );\n\n\tif ( Class !== undefined ) {\n\n\t\treturn new Class();\n\n\t}\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}